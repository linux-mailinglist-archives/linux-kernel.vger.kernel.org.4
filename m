Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id AFA1A70D543
	for <lists+linux-kernel@lfdr.de>; Tue, 23 May 2023 09:37:48 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S235564AbjEWHhm (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Tue, 23 May 2023 03:37:42 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34860 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S235567AbjEWHhJ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 23 May 2023 03:37:09 -0400
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 8D44910C6
        for <linux-kernel@vger.kernel.org>; Tue, 23 May 2023 00:36:29 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1684827389; x=1716363389;
  h=date:from:to:cc:subject:message-id:in-reply-to:
   mime-version;
  bh=VZ9mWxGR8JeGrCc2vsHcsmKPxvLKFHhGoBdtvKoZHjQ=;
  b=ixncjxaCIMfL1WzagEJmLZ1i44v97O5fA5v0Yzx3YhYfgrq69DsYtKuZ
   EghgNf0Ziwf2wWlj3FI1uAAXGLOa3SU0k0kFqh7rKYH3rrBconl8Wom+G
   pqcIUmiejjuOgn1+AC1c8nwWHjEuf8vUyRCGHltTITT8kz0czU55AMnPL
   PUY1pUEeWmzgM3WJom0bbcA56WlUxsAyPLsB9YjhD0ps+165do2A33zQW
   B/PlSzSGNAbGa0kCKI7tlMj1mPUXZo/rWBDiV6O4xvcusFHprVpWkCiUp
   CH4mBi/2hOPq3ZmjQw5PGV5kthGd3Bi/wmANKfSAW7qJkFn1rTy3Crs6W
   g==;
X-IronPort-AV: E=McAfee;i="6600,9927,10718"; a="337750566"
X-IronPort-AV: E=Sophos;i="6.00,185,1681196400"; 
   d="xz'341?yaml'341?scan'341,208,341";a="337750566"
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
  by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 23 May 2023 00:36:08 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10718"; a="768894503"
X-IronPort-AV: E=Sophos;i="6.00,185,1681196400"; 
   d="xz'341?yaml'341?scan'341,208,341";a="768894503"
Received: from fmsmsx601.amr.corp.intel.com ([10.18.126.81])
  by fmsmga008.fm.intel.com with ESMTP; 23 May 2023 00:36:07 -0700
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 fmsmsx601.amr.corp.intel.com (10.18.126.81) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.23; Tue, 23 May 2023 00:36:07 -0700
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX610.amr.corp.intel.com (10.22.229.23) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.23; Tue, 23 May 2023 00:36:06 -0700
Received: from ORSEDG602.ED.cps.intel.com (10.7.248.7) by
 orsmsx610.amr.corp.intel.com (10.22.229.23) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.23 via Frontend Transport; Tue, 23 May 2023 00:36:06 -0700
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (104.47.66.41) by
 edgegateway.intel.com (134.134.137.103) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.23; Tue, 23 May 2023 00:36:06 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=CC0LIm0ed7KX6N8FAFW1XvFLVp6BuHsn1fXdcT+j5tpX9wwcOug0m6ngt6N0ztgGiDtOf1E5HISPkJEkhkZM/Emb+Nz627tmK5YxZO4NeXA9tyDliVgZ8VemBSJL8E7OjpSMIQPGOFH2oQKkWqxUhbbRrPS8jh4uRX2ObVpDnj2eTg+NkWNmGEIbqQTwfRmwkFxhurkfSW99JOqyo403pXe48R2Vq8kHecFmclDoaKDpS16ZkxU1IKozhyagXif7o9izUjksdLqmyrddlQwsbMrlXgtAIcLZvbZG19apcQpHIy56UNyy1g51scom6z1MLd6QNmbub8iyoqDHTGRxAg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=gf3f8AUT0qEqL7rY20mr9mUj1siKStCTm42r9rJo2mA=;
 b=e//uaeVHbIBGCGKqFKPUfYy6xQUFutBjg5oV6X26D2B1UZihb4G46oV6RpunOWszzFxVfegZBUx4i6i4AOep3CeX980LudwJx4ZGddRylIh28Hg/uC8rf/kl+HgIHFU48ktSMh93A3RorRsh4hhC8Ga9LheyI4G9yCeGodKHzTXeey4T01kYnHgofTZNNOTvv1oXbmDWAzdg4ArNb3RRFLI8AMjKWKavjuBjafgTF8qRiSfcfxQ1+mzHH4F0uDH1QJggxPM4Ugc1oUrm2Xtg9Tr/VNhe1tMqlQdkl7HwcDCBKH1egGG9WKZFsLS2DcRN2K6r5PSQdNLmzvzmsct0Uw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB6779.namprd11.prod.outlook.com (2603:10b6:510:1ca::17)
 by IA1PR11MB8173.namprd11.prod.outlook.com (2603:10b6:208:44e::21) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6411.28; Tue, 23 May
 2023 07:35:59 +0000
Received: from PH8PR11MB6779.namprd11.prod.outlook.com
 ([fe80::e073:f89a:39f9:bbf]) by PH8PR11MB6779.namprd11.prod.outlook.com
 ([fe80::e073:f89a:39f9:bbf%6]) with mapi id 15.20.6411.028; Tue, 23 May 2023
 07:35:59 +0000
Date:   Tue, 23 May 2023 15:35:46 +0800
From:   kernel test robot <oliver.sang@intel.com>
To:     Jiaqi Yan <jiaqiyan@google.com>
CC:     <oe-lkp@lists.linux.dev>, <lkp@intel.com>, <linux-mm@kvack.org>,
        <mike.kravetz@oracle.com>, <songmuchun@bytedance.com>,
        <naoya.horiguchi@nec.com>, <shy828301@gmail.com>,
        <linmiaohe@huawei.com>, <akpm@linux-foundation.org>,
        <linux-kernel@vger.kernel.org>, <duenwen@google.com>,
        <axelrasmussen@google.com>, <jthoughton@google.com>,
        Jiaqi Yan <jiaqiyan@google.com>, <oliver.sang@intel.com>
Subject: Re: [PATCH v1 3/3] selftests/mm: add tests for HWPOISON hugetlbfs
 read
Message-ID: <202305231450.c71d2b01-oliver.sang@intel.com>
Content-Type: multipart/mixed; boundary="ID8wQf9zGKtnYLaT"
Content-Disposition: inline
In-Reply-To: <20230517160948.811355-4-jiaqiyan@google.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-ClientProxiedBy: SG2P153CA0014.APCP153.PROD.OUTLOOK.COM (2603:1096::24) To
 PH8PR11MB6779.namprd11.prod.outlook.com (2603:10b6:510:1ca::17)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB6779:EE_|IA1PR11MB8173:EE_
X-MS-Office365-Filtering-Correlation-Id: 3825d6b7-1262-40fa-bef5-08db5b605915
X-LD-Processed: 46c98d88-e344-4ed4-8496-4ed7712e255d,ExtAddr
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: awncTJyOD0MWLp08+UcTJvUl3iBViosk+z6R2yDFfuv9f3I3qCA786YSE7EXkSvhQQPJ29rqSPOkvUG7DXMcq9NHGEVM0cune1xTVZpYArkUDHzfNAmYBaQx8GYV46p0TvdZxUIulR/wyOjR2Px4iDwcUkhmo9Rb4CDiTBxaA97AfeWEJesqS6mFFPz/b+xmaNewrKyF9uG66ZRqESsZ+nqMevaXBYfcDjfIHpe0SUEwSYhWSOazkdEgCPgLMSgP+Uc3bhV9yY3Ofqw/tbwrm9vBpzr4omP7czhMz8PavVHEfcFnjIZF54iy8/FUG0AJ1J9XmqK27JzWjMoThq3IMH+EkHcENocLmNG5OXmUHyePKlxuAlbhgpTJV06cA1VlJ9OuNRBk04l0PSMN58QkIrUXVk89uffTaYdYbYyBj8073bVr7ZdP2/XSZ9S64/QYsAmLuFTGqQ790b2HiDqA6p0oUZOcyUiyyz4Mjemxfuhjb5SgCxNqXdyGzx7/O1E6kD+V/+ivyZs60glsQ470Mqs/5A/WSUNEFh8hedkmZ6uh6BHOmXd/tf+h+aGOtpiv2sY7gSGHSK2pQLnlouOQL6wfFJ8Eu67bk24Ja7LxLDs2MCzKeiUDlMeXO/V8eIQttjIGQ01/kPesA8/PJHmwHg==
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB6779.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(396003)(366004)(39860400002)(376002)(136003)(346002)(451199021)(8936002)(8676002)(5660300002)(235185007)(7416002)(186003)(83380400001)(21490400003)(6506007)(26005)(107886003)(1076003)(86362001)(6512007)(2616005)(38100700002)(82960400001)(41300700001)(44144004)(6666004)(966005)(6486002)(66556008)(66476007)(66946007)(316002)(4326008)(36756003)(6916009)(478600001)(2906002)(2700100001);DIR:OUT;SFP:1102;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?OTnYY31WJPw8AYNgLwgO428sNlgXG6jI+4BKHPMSu5kV64aklgbJ3ulfOsUA?=
 =?us-ascii?Q?+zoj4gxVftzGrfLLNFUH5UNfFMqi+l1p7Sp+D+THu2i0cnKHTOxQJRDHjZLT?=
 =?us-ascii?Q?qI47LaOtwdBQvYIjCrSLzGfoGQXmtkmTIsrzwkiSAldNQngY6OJ+szIAaUPf?=
 =?us-ascii?Q?KOuhM7/Kbd6tqlISbpVrLb5pNDu0KSjyteuQFnqkOsA9KEBslnVgq6RfTcqp?=
 =?us-ascii?Q?m1pOuTO9KdiKAu9wllViMbkseME+kGIznk/38ILBPfJkSQ5onDvFn88BsPim?=
 =?us-ascii?Q?icLWRlEUoMp9dXPVVkIL13zLCqr8J64I4LdHHjMCQkthILvUXU4R/3jUaI3/?=
 =?us-ascii?Q?Hxja2A8vlprqEMS+RCXlZKGjgVPFoUoRYgFIOuXBLNo8hQDVSIjJBrAxvzKQ?=
 =?us-ascii?Q?/pgy8YXTAQ8guQyzsiGmqMa9NNnZTFurtVSyoYxb+SZI7qZib7+cGuyJfrrI?=
 =?us-ascii?Q?1SWdxhKVVv+0EViQQNjxMsBgTfKWb/4Ln1KICskw3UMifXeBUzkVjciX2Cf0?=
 =?us-ascii?Q?6oZaPQTPJFDyCcu9qoo0S/k8rI2x1bfm1DVpVusnNfRjpYJSzSR1Xnjav8ZO?=
 =?us-ascii?Q?TplQYNdoDL9xqn7uJhAoNVcjb+fyFLvVAoe8Vh41b5Qa9YbFzVyPQZ/EqzZi?=
 =?us-ascii?Q?Vsw8EXTpcaX6ppTXZmOtb/x1oSez1p1hCa78CEdVOkXblnJyAXNNJ/mYux2p?=
 =?us-ascii?Q?kJ01Cd4751qiW8otX0R2W2KcroP6jULvUWADFMfcDL21X3GX8ifFcF5WtYah?=
 =?us-ascii?Q?UNyFd5tWMMMW14ee56aWi1sYC3WLZ6t8wtiAwlI8pJsMdSNIX5BkuDEtWtwN?=
 =?us-ascii?Q?K+6Onkg8bRJmJ3ZH7LdFV8rBfXp0O+jqL3aAbJgjv4T1ukQvWDM7WZwYQc3A?=
 =?us-ascii?Q?J68iSKPMC0En2FUPBij2l6tGIj4WoEMJLOnGMGO84OLKjueCkdpHULHxeIWb?=
 =?us-ascii?Q?hSJicLANFyo8K4YicXsZFS4aNhg7lRaTJTamap0fR+WDv+DlV5mg+hug84u/?=
 =?us-ascii?Q?FaaAmTnSD/avEFbLziz12AyE/gJJ04U4rGq+W/Mg2VMNwC27TynKCccnT3vl?=
 =?us-ascii?Q?83DgE4hkxGiThrMaf5rU2hi1cRKNxpvIhtXwAh6IlhRAY7M4tTpVHx0JsK5A?=
 =?us-ascii?Q?pZoswon50fbgnDTLS1c9UlzgXV8NjwRGcl81NTD22KPNDCk5LQh9MGfC+RqL?=
 =?us-ascii?Q?kg91Ga2GUnLpQkdL+U1QCs15Lo6zlxTGCCXoxOjHrtzpun1VmdndZlCB1GyL?=
 =?us-ascii?Q?U86SGUqfibzOMj9tQSLVCkckdwMWYjC4EvL3TBP+0FvMtJKOW39nU5JxRAEm?=
 =?us-ascii?Q?/ArkVVKVfu5Ml31Tun8/wKtFRuMhMwg1e/nmDEvtaZZU+4g+N6Hhb47uQgZ7?=
 =?us-ascii?Q?abfiviurcsBcTDMi41bHjzOV+7z99en9WpiQ5UOVJCtDGQG1/Qzs0OEiAVLE?=
 =?us-ascii?Q?tptIUxuCoeVy0VSBZG+pnARlQWJiBphyrLsqsWae8p38SvLyaRkt1CsyQfkY?=
 =?us-ascii?Q?3bf2oPnDQv3KsIUOcgHDF3bHvv1eZbW+8tI3W2l8h3LwKo4oZ/kaobG/y/Y0?=
 =?us-ascii?Q?nnXFNEL2TwCACGqN/CUEJyIrZV7ApRJGxWPWprImYyMvanvr3M8LsbU/9tki?=
 =?us-ascii?Q?FQ=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: 3825d6b7-1262-40fa-bef5-08db5b605915
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB6779.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 May 2023 07:35:58.7228
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: P4xlklBf4MOqH5VepKVPKm/hHLsowIULCIKBltczugmuqwEO0npZE45c4N+76z7cWI5fjlBrZmDfVvsqv49nRw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: IA1PR11MB8173
X-OriginatorOrg: intel.com
X-Spam-Status: No, score=-0.6 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
        DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,FAKE_REPLY_C,
        SPF_HELO_NONE,SPF_NONE,T_SCC_BODY_TEXT_LINE,URIBL_BLOCKED
        autolearn=ham autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

--ID8wQf9zGKtnYLaT
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline



Hello,

kernel test robot noticed "kernel-selftests.mm.hugepage-vmemmap.fail" on:

(we know that this commit adds hugetlb-read-hwpoison test, so we actually
want to seek some advice by this report, below will mention further)

commit: d84de15119b74f10be3c0a369561ca9b452d07d7 ("[PATCH v1 3/3] selftests/mm: add tests for HWPOISON hugetlbfs read")
url: https://github.com/intel-lab-lkp/linux/commits/Jiaqi-Yan/mm-hwpoison-find-subpage-in-hugetlb-HWPOISON-list/20230518-003149
base: https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git f1fcbaa18b28dec10281551dfe6ed3a3ed80e3d6
patch link: https://lore.kernel.org/all/20230517160948.811355-4-jiaqiyan@google.com/
patch subject: [PATCH v1 3/3] selftests/mm: add tests for HWPOISON hugetlbfs read

in testcase: kernel-selftests
version: kernel-selftests-x86_64-60acb023-1_20230329
with following parameters:

	sc_nr_hugepages: 2
	group: mm

test-description: The kernel contains a set of "self tests" under the tools/testing/selftests/ directory. These are intended to be small unit tests to exercise individual code paths in the kernel.
test-url: https://www.kernel.org/doc/Documentation/kselftest.txt


compiler: gcc-11
test machine: 36 threads 1 sockets Intel(R) Core(TM) i9-10980XE CPU @ 3.00GHz (Cascade Lake) with 32G memory

(please refer to attached dmesg/kmsg for entire log/backtrace)


If you fix the issue, kindly add following tag
| Reported-by: kernel test robot <oliver.sang@intel.com>
| Closes: https://lore.kernel.org/oe-lkp/202305231450.c71d2b01-oliver.sang@intel.com


from below log [1], the new added hugetlb-read-hwpoison test passed.
but will fail while running hugepage-vmemmap test later as:

# selftests: mm: hugepage-vmemmap
# mmap: Cannot allocate memory
not ok 10 selftests: mm: hugepage-vmemmap # exit=1

hugepage-vmemmap can pass while testing with parent kernel, as below [2]

at the same time, we observed lots of
"Not enough free huge pages to test, exiting!"
for various testing.

any advice for this behavior?

BTW, the system upon which we did this test has 32G memory.
not sure if there is a recommended memory size to run these tests?

Thanks!

[1]
(from test log for this d84de15119 kernel)

# selftests: mm: hugetlb-madvise
# Not enough free huge pages to test, exiting!
not ok 5 selftests: mm: hugetlb-madvise # exit=1
# selftests: mm: hugetlb-read-hwpoison
#  !!! read failed: Input/output error
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  ... Write/read chunk size=0x800
# HugeTLB read regression test...
#  ... expect to read 0x200000 bytes of data in total
#  ... actually read 0x200000 bytes of data in total
# HugeTLB read regression test...TEST_PASSED
# HugeTLB read HWPOISON test...
#  ... expect to read 0x101000 bytes of data in total
#  ... actually read 0x101000 bytes of data in total
# HugeTLB read HWPOISON test...TEST_PASSED
# HugeTLB seek then read HWPOISON test...
#  ... init val=4 with offset=0x102000
#  ... expect to read 0xfe000 bytes of data in total
#  ... actually read 0xfe000 bytes of data in total
# HugeTLB seek then read HWPOISON test...TEST_PASSED
#  ... Write/read chunk size=0x1000
# HugeTLB read regression test...
# HugeTLB read regression test...TEST_SKIPPED
# HugeTLB read HWPOISON test...
# HugeTLB read HWPOISON test...TEST_SKIPPED
# HugeTLB seek then read HWPOISON test...
# HugeTLB seek then read HWPOISON test...TEST_SKIPPED
#  ... Write/read chunk size=0x2000
# HugeTLB read regression test...
# HugeTLB read regression test...TEST_SKIPPED
# HugeTLB read HWPOISON test...
# HugeTLB read HWPOISON test...TEST_SKIPPED
# HugeTLB seek then read HWPOISON test...
# HugeTLB seek then read HWPOISON test...TEST_SKIPPED
#  ... Write/read chunk size=0x4000
# HugeTLB read regression test...
# HugeTLB read regression test...TEST_SKIPPED
# HugeTLB read HWPOISON test...
# HugeTLB read HWPOISON test...TEST_SKIPPED
# HugeTLB seek then read HWPOISON test...
# HugeTLB seek then read HWPOISON test...TEST_SKIPPED
ok 6 selftests: mm: hugetlb-read-hwpoison
# selftests: mm: hugepage-mmap
# mmap: Cannot allocate memory
not ok 7 selftests: mm: hugepage-mmap # exit=1
# selftests: mm: hugepage-mremap
# mmap1: Cannot allocate memory
# Map haddr: Returned address is 0xffffffffffffffff
not ok 8 selftests: mm: hugepage-mremap # exit=1
# selftests: mm: hugepage-shm
# shmget: Cannot allocate memory
not ok 9 selftests: mm: hugepage-shm # exit=1
# selftests: mm: hugepage-vmemmap
# mmap: Cannot allocate memory
not ok 10 selftests: mm: hugepage-vmemmap # exit=1


[2]
(from test log for parent kernel)

# selftests: mm: hugetlb-madvise
# Not enough free huge pages to test, exiting!
not ok 5 selftests: mm: hugetlb-madvise # exit=1
# selftests: mm: hugepage-mmap
# mmap: Cannot allocate memory
not ok 6 selftests: mm: hugepage-mmap # exit=1
# selftests: mm: hugepage-mremap
# mmap1: Cannot allocate memory
# Map haddr: Returned address is 0xffffffffffffffff
not ok 7 selftests: mm: hugepage-mremap # exit=1
# selftests: mm: hugepage-shm
# shmget: Cannot allocate memory
not ok 8 selftests: mm: hugepage-shm # exit=1
# selftests: mm: hugepage-vmemmap
# Returned address is 0x7f6024e00000 whose pfn is 1b8600
ok 9 selftests: mm: hugepage-vmemmap


To reproduce:

        git clone https://github.com/intel/lkp-tests.git
        cd lkp-tests
        sudo bin/lkp install job.yaml           # job file is attached in this email
        bin/lkp split-job --compatible job.yaml # generate the yaml file for lkp run
        sudo bin/lkp run generated-yaml-file

        # if come across any failure that blocks the test,
        # please remove ~/.lkp and /lkp dir to run from a clean state.



-- 
0-DAY CI Kernel Test Service
https://github.com/intel/lkp-tests/wiki



--ID8wQf9zGKtnYLaT
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: attachment;
	filename="config-6.4.0-rc2-00003-gd84de15119b7"

#
# Automatically generated file; DO NOT EDIT.
# Linux/x86_64 6.4.0-rc2 Kernel Configuration
#
CONFIG_CC_VERSION_TEXT="gcc-11 (Debian 11.3.0-12) 11.3.0"
CONFIG_CC_IS_GCC=y
CONFIG_GCC_VERSION=110300
CONFIG_CLANG_VERSION=0
CONFIG_AS_IS_GNU=y
CONFIG_AS_VERSION=24000
CONFIG_LD_IS_BFD=y
CONFIG_LD_VERSION=24000
CONFIG_LLD_VERSION=0
CONFIG_CC_CAN_LINK=y
CONFIG_CC_CAN_LINK_STATIC=y
CONFIG_CC_HAS_ASM_GOTO_OUTPUT=y
CONFIG_CC_HAS_ASM_GOTO_TIED_OUTPUT=y
CONFIG_TOOLS_SUPPORT_RELR=y
CONFIG_CC_HAS_ASM_INLINE=y
CONFIG_CC_HAS_NO_PROFILE_FN_ATTR=y
CONFIG_PAHOLE_VERSION=125
CONFIG_CONSTRUCTORS=y
CONFIG_IRQ_WORK=y
CONFIG_BUILDTIME_TABLE_SORT=y
CONFIG_THREAD_INFO_IN_TASK=y

#
# General setup
#
CONFIG_INIT_ENV_ARG_LIMIT=32
# CONFIG_COMPILE_TEST is not set
# CONFIG_WERROR is not set
CONFIG_LOCALVERSION=""
CONFIG_LOCALVERSION_AUTO=y
CONFIG_BUILD_SALT=""
CONFIG_HAVE_KERNEL_GZIP=y
CONFIG_HAVE_KERNEL_BZIP2=y
CONFIG_HAVE_KERNEL_LZMA=y
CONFIG_HAVE_KERNEL_XZ=y
CONFIG_HAVE_KERNEL_LZO=y
CONFIG_HAVE_KERNEL_LZ4=y
CONFIG_HAVE_KERNEL_ZSTD=y
CONFIG_KERNEL_GZIP=y
# CONFIG_KERNEL_BZIP2 is not set
# CONFIG_KERNEL_LZMA is not set
# CONFIG_KERNEL_XZ is not set
# CONFIG_KERNEL_LZO is not set
# CONFIG_KERNEL_LZ4 is not set
# CONFIG_KERNEL_ZSTD is not set
CONFIG_DEFAULT_INIT=""
CONFIG_DEFAULT_HOSTNAME="(none)"
CONFIG_SYSVIPC=y
CONFIG_SYSVIPC_SYSCTL=y
CONFIG_SYSVIPC_COMPAT=y
CONFIG_POSIX_MQUEUE=y
CONFIG_POSIX_MQUEUE_SYSCTL=y
# CONFIG_WATCH_QUEUE is not set
CONFIG_CROSS_MEMORY_ATTACH=y
# CONFIG_USELIB is not set
CONFIG_AUDIT=y
CONFIG_HAVE_ARCH_AUDITSYSCALL=y
CONFIG_AUDITSYSCALL=y

#
# IRQ subsystem
#
CONFIG_GENERIC_IRQ_PROBE=y
CONFIG_GENERIC_IRQ_SHOW=y
CONFIG_GENERIC_IRQ_EFFECTIVE_AFF_MASK=y
CONFIG_GENERIC_PENDING_IRQ=y
CONFIG_GENERIC_IRQ_MIGRATION=y
CONFIG_GENERIC_IRQ_INJECTION=y
CONFIG_HARDIRQS_SW_RESEND=y
CONFIG_IRQ_DOMAIN=y
CONFIG_IRQ_SIM=y
CONFIG_IRQ_DOMAIN_HIERARCHY=y
CONFIG_GENERIC_MSI_IRQ=y
CONFIG_IRQ_MSI_IOMMU=y
CONFIG_GENERIC_IRQ_MATRIX_ALLOCATOR=y
CONFIG_GENERIC_IRQ_RESERVATION_MODE=y
CONFIG_IRQ_FORCED_THREADING=y
CONFIG_SPARSE_IRQ=y
# CONFIG_GENERIC_IRQ_DEBUGFS is not set
# end of IRQ subsystem

CONFIG_CLOCKSOURCE_WATCHDOG=y
CONFIG_ARCH_CLOCKSOURCE_INIT=y
CONFIG_CLOCKSOURCE_VALIDATE_LAST_CYCLE=y
CONFIG_GENERIC_TIME_VSYSCALL=y
CONFIG_GENERIC_CLOCKEVENTS=y
CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
CONFIG_GENERIC_CLOCKEVENTS_MIN_ADJUST=y
CONFIG_GENERIC_CMOS_UPDATE=y
CONFIG_HAVE_POSIX_CPU_TIMERS_TASK_WORK=y
CONFIG_POSIX_CPU_TIMERS_TASK_WORK=y
CONFIG_CONTEXT_TRACKING=y
CONFIG_CONTEXT_TRACKING_IDLE=y

#
# Timers subsystem
#
CONFIG_TICK_ONESHOT=y
CONFIG_NO_HZ_COMMON=y
# CONFIG_HZ_PERIODIC is not set
# CONFIG_NO_HZ_IDLE is not set
CONFIG_NO_HZ_FULL=y
CONFIG_CONTEXT_TRACKING_USER=y
# CONFIG_CONTEXT_TRACKING_USER_FORCE is not set
CONFIG_NO_HZ=y
CONFIG_HIGH_RES_TIMERS=y
CONFIG_CLOCKSOURCE_WATCHDOG_MAX_SKEW_US=125
# end of Timers subsystem

CONFIG_BPF=y
CONFIG_HAVE_EBPF_JIT=y
CONFIG_ARCH_WANT_DEFAULT_BPF_JIT=y

#
# BPF subsystem
#
CONFIG_BPF_SYSCALL=y
CONFIG_BPF_JIT=y
CONFIG_BPF_JIT_ALWAYS_ON=y
CONFIG_BPF_JIT_DEFAULT_ON=y
CONFIG_BPF_UNPRIV_DEFAULT_OFF=y
# CONFIG_BPF_PRELOAD is not set
# CONFIG_BPF_LSM is not set
# end of BPF subsystem

CONFIG_PREEMPT_VOLUNTARY_BUILD=y
# CONFIG_PREEMPT_NONE is not set
CONFIG_PREEMPT_VOLUNTARY=y
# CONFIG_PREEMPT is not set
CONFIG_PREEMPT_COUNT=y
# CONFIG_PREEMPT_DYNAMIC is not set
# CONFIG_SCHED_CORE is not set

#
# CPU/Task time and stats accounting
#
CONFIG_VIRT_CPU_ACCOUNTING=y
CONFIG_VIRT_CPU_ACCOUNTING_GEN=y
CONFIG_IRQ_TIME_ACCOUNTING=y
CONFIG_HAVE_SCHED_AVG_IRQ=y
CONFIG_BSD_PROCESS_ACCT=y
CONFIG_BSD_PROCESS_ACCT_V3=y
CONFIG_TASKSTATS=y
CONFIG_TASK_DELAY_ACCT=y
CONFIG_TASK_XACCT=y
CONFIG_TASK_IO_ACCOUNTING=y
# CONFIG_PSI is not set
# end of CPU/Task time and stats accounting

CONFIG_CPU_ISOLATION=y

#
# RCU Subsystem
#
CONFIG_TREE_RCU=y
# CONFIG_RCU_EXPERT is not set
CONFIG_TREE_SRCU=y
CONFIG_TASKS_RCU_GENERIC=y
CONFIG_TASKS_RUDE_RCU=y
CONFIG_TASKS_TRACE_RCU=y
CONFIG_RCU_STALL_COMMON=y
CONFIG_RCU_NEED_SEGCBLIST=y
CONFIG_RCU_NOCB_CPU=y
# CONFIG_RCU_NOCB_CPU_DEFAULT_ALL is not set
# CONFIG_RCU_LAZY is not set
# end of RCU Subsystem

CONFIG_IKCONFIG=y
CONFIG_IKCONFIG_PROC=y
# CONFIG_IKHEADERS is not set
CONFIG_LOG_BUF_SHIFT=20
CONFIG_LOG_CPU_MAX_BUF_SHIFT=12
# CONFIG_PRINTK_INDEX is not set
CONFIG_HAVE_UNSTABLE_SCHED_CLOCK=y

#
# Scheduler features
#
# CONFIG_UCLAMP_TASK is not set
# end of Scheduler features

CONFIG_ARCH_SUPPORTS_NUMA_BALANCING=y
CONFIG_ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH=y
CONFIG_CC_HAS_INT128=y
CONFIG_CC_IMPLICIT_FALLTHROUGH="-Wimplicit-fallthrough=5"
CONFIG_GCC11_NO_ARRAY_BOUNDS=y
CONFIG_CC_NO_ARRAY_BOUNDS=y
CONFIG_ARCH_SUPPORTS_INT128=y
CONFIG_NUMA_BALANCING=y
CONFIG_NUMA_BALANCING_DEFAULT_ENABLED=y
CONFIG_CGROUPS=y
CONFIG_PAGE_COUNTER=y
# CONFIG_CGROUP_FAVOR_DYNMODS is not set
CONFIG_MEMCG=y
CONFIG_MEMCG_KMEM=y
CONFIG_BLK_CGROUP=y
CONFIG_CGROUP_WRITEBACK=y
CONFIG_CGROUP_SCHED=y
CONFIG_FAIR_GROUP_SCHED=y
CONFIG_CFS_BANDWIDTH=y
CONFIG_RT_GROUP_SCHED=y
CONFIG_SCHED_MM_CID=y
CONFIG_CGROUP_PIDS=y
CONFIG_CGROUP_RDMA=y
CONFIG_CGROUP_FREEZER=y
CONFIG_CGROUP_HUGETLB=y
CONFIG_CPUSETS=y
CONFIG_PROC_PID_CPUSET=y
CONFIG_CGROUP_DEVICE=y
CONFIG_CGROUP_CPUACCT=y
CONFIG_CGROUP_PERF=y
# CONFIG_CGROUP_BPF is not set
# CONFIG_CGROUP_MISC is not set
# CONFIG_CGROUP_DEBUG is not set
CONFIG_SOCK_CGROUP_DATA=y
CONFIG_NAMESPACES=y
CONFIG_UTS_NS=y
CONFIG_TIME_NS=y
CONFIG_IPC_NS=y
CONFIG_USER_NS=y
CONFIG_PID_NS=y
CONFIG_NET_NS=y
CONFIG_CHECKPOINT_RESTORE=y
CONFIG_SCHED_AUTOGROUP=y
CONFIG_RELAY=y
CONFIG_BLK_DEV_INITRD=y
CONFIG_INITRAMFS_SOURCE=""
CONFIG_RD_GZIP=y
CONFIG_RD_BZIP2=y
CONFIG_RD_LZMA=y
CONFIG_RD_XZ=y
CONFIG_RD_LZO=y
CONFIG_RD_LZ4=y
CONFIG_RD_ZSTD=y
# CONFIG_BOOT_CONFIG is not set
CONFIG_INITRAMFS_PRESERVE_MTIME=y
CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
CONFIG_LD_ORPHAN_WARN=y
CONFIG_LD_ORPHAN_WARN_LEVEL="warn"
CONFIG_SYSCTL=y
CONFIG_HAVE_UID16=y
CONFIG_SYSCTL_EXCEPTION_TRACE=y
CONFIG_HAVE_PCSPKR_PLATFORM=y
CONFIG_EXPERT=y
CONFIG_UID16=y
CONFIG_MULTIUSER=y
CONFIG_SGETMASK_SYSCALL=y
CONFIG_SYSFS_SYSCALL=y
CONFIG_FHANDLE=y
CONFIG_POSIX_TIMERS=y
CONFIG_PRINTK=y
CONFIG_BUG=y
CONFIG_ELF_CORE=y
CONFIG_PCSPKR_PLATFORM=y
CONFIG_BASE_FULL=y
CONFIG_FUTEX=y
CONFIG_FUTEX_PI=y
CONFIG_EPOLL=y
CONFIG_SIGNALFD=y
CONFIG_TIMERFD=y
CONFIG_EVENTFD=y
CONFIG_SHMEM=y
CONFIG_AIO=y
CONFIG_IO_URING=y
CONFIG_ADVISE_SYSCALLS=y
CONFIG_MEMBARRIER=y
CONFIG_KALLSYMS=y
# CONFIG_KALLSYMS_SELFTEST is not set
CONFIG_KALLSYMS_ALL=y
CONFIG_KALLSYMS_ABSOLUTE_PERCPU=y
CONFIG_KALLSYMS_BASE_RELATIVE=y
CONFIG_ARCH_HAS_MEMBARRIER_SYNC_CORE=y
CONFIG_KCMP=y
CONFIG_RSEQ=y
# CONFIG_DEBUG_RSEQ is not set
CONFIG_EMBEDDED=y
CONFIG_HAVE_PERF_EVENTS=y
CONFIG_GUEST_PERF_EVENTS=y
# CONFIG_PC104 is not set

#
# Kernel Performance Events And Counters
#
CONFIG_PERF_EVENTS=y
# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
# end of Kernel Performance Events And Counters

CONFIG_SYSTEM_DATA_VERIFICATION=y
CONFIG_PROFILING=y
CONFIG_TRACEPOINTS=y
# end of General setup

CONFIG_64BIT=y
CONFIG_X86_64=y
CONFIG_X86=y
CONFIG_INSTRUCTION_DECODER=y
CONFIG_OUTPUT_FORMAT="elf64-x86-64"
CONFIG_LOCKDEP_SUPPORT=y
CONFIG_STACKTRACE_SUPPORT=y
CONFIG_MMU=y
CONFIG_ARCH_MMAP_RND_BITS_MIN=28
CONFIG_ARCH_MMAP_RND_BITS_MAX=32
CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MIN=8
CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MAX=16
CONFIG_GENERIC_ISA_DMA=y
CONFIG_GENERIC_CSUM=y
CONFIG_GENERIC_BUG=y
CONFIG_GENERIC_BUG_RELATIVE_POINTERS=y
CONFIG_ARCH_MAY_HAVE_PC_FDC=y
CONFIG_GENERIC_CALIBRATE_DELAY=y
CONFIG_ARCH_HAS_CPU_RELAX=y
CONFIG_ARCH_HIBERNATION_POSSIBLE=y
CONFIG_ARCH_SUSPEND_POSSIBLE=y
CONFIG_AUDIT_ARCH=y
CONFIG_KASAN_SHADOW_OFFSET=0xdffffc0000000000
CONFIG_HAVE_INTEL_TXT=y
CONFIG_X86_64_SMP=y
CONFIG_ARCH_SUPPORTS_UPROBES=y
CONFIG_FIX_EARLYCON_MEM=y
CONFIG_DYNAMIC_PHYSICAL_MASK=y
CONFIG_PGTABLE_LEVELS=5
CONFIG_CC_HAS_SANE_STACKPROTECTOR=y

#
# Processor type and features
#
CONFIG_SMP=y
CONFIG_X86_FEATURE_NAMES=y
CONFIG_X86_X2APIC=y
CONFIG_X86_MPPARSE=y
# CONFIG_GOLDFISH is not set
CONFIG_X86_CPU_RESCTRL=y
CONFIG_X86_EXTENDED_PLATFORM=y
# CONFIG_X86_NUMACHIP is not set
# CONFIG_X86_VSMP is not set
CONFIG_X86_UV=y
# CONFIG_X86_GOLDFISH is not set
# CONFIG_X86_INTEL_MID is not set
CONFIG_X86_INTEL_LPSS=y
# CONFIG_X86_AMD_PLATFORM_DEVICE is not set
CONFIG_IOSF_MBI=y
# CONFIG_IOSF_MBI_DEBUG is not set
CONFIG_X86_SUPPORTS_MEMORY_FAILURE=y
# CONFIG_SCHED_OMIT_FRAME_POINTER is not set
CONFIG_HYPERVISOR_GUEST=y
CONFIG_PARAVIRT=y
# CONFIG_PARAVIRT_DEBUG is not set
CONFIG_PARAVIRT_SPINLOCKS=y
CONFIG_X86_HV_CALLBACK_VECTOR=y
# CONFIG_XEN is not set
CONFIG_KVM_GUEST=y
CONFIG_ARCH_CPUIDLE_HALTPOLL=y
# CONFIG_PVH is not set
CONFIG_PARAVIRT_TIME_ACCOUNTING=y
CONFIG_PARAVIRT_CLOCK=y
# CONFIG_JAILHOUSE_GUEST is not set
# CONFIG_ACRN_GUEST is not set
CONFIG_INTEL_TDX_GUEST=y
# CONFIG_MK8 is not set
# CONFIG_MPSC is not set
# CONFIG_MCORE2 is not set
# CONFIG_MATOM is not set
CONFIG_GENERIC_CPU=y
CONFIG_X86_INTERNODE_CACHE_SHIFT=6
CONFIG_X86_L1_CACHE_SHIFT=6
CONFIG_X86_TSC=y
CONFIG_X86_CMPXCHG64=y
CONFIG_X86_CMOV=y
CONFIG_X86_MINIMUM_CPU_FAMILY=64
CONFIG_X86_DEBUGCTLMSR=y
CONFIG_IA32_FEAT_CTL=y
CONFIG_X86_VMX_FEATURE_NAMES=y
CONFIG_PROCESSOR_SELECT=y
CONFIG_CPU_SUP_INTEL=y
# CONFIG_CPU_SUP_AMD is not set
# CONFIG_CPU_SUP_HYGON is not set
# CONFIG_CPU_SUP_CENTAUR is not set
# CONFIG_CPU_SUP_ZHAOXIN is not set
CONFIG_HPET_TIMER=y
CONFIG_HPET_EMULATE_RTC=y
CONFIG_DMI=y
CONFIG_BOOT_VESA_SUPPORT=y
CONFIG_MAXSMP=y
CONFIG_NR_CPUS_RANGE_BEGIN=8192
CONFIG_NR_CPUS_RANGE_END=8192
CONFIG_NR_CPUS_DEFAULT=8192
CONFIG_NR_CPUS=8192
CONFIG_SCHED_CLUSTER=y
CONFIG_SCHED_SMT=y
CONFIG_SCHED_MC=y
CONFIG_SCHED_MC_PRIO=y
CONFIG_X86_LOCAL_APIC=y
CONFIG_X86_IO_APIC=y
CONFIG_X86_REROUTE_FOR_BROKEN_BOOT_IRQS=y
CONFIG_X86_MCE=y
CONFIG_X86_MCELOG_LEGACY=y
CONFIG_X86_MCE_INTEL=y
CONFIG_X86_MCE_THRESHOLD=y
CONFIG_X86_MCE_INJECT=m

#
# Performance monitoring
#
CONFIG_PERF_EVENTS_INTEL_UNCORE=m
CONFIG_PERF_EVENTS_INTEL_RAPL=m
CONFIG_PERF_EVENTS_INTEL_CSTATE=m
# end of Performance monitoring

CONFIG_X86_16BIT=y
CONFIG_X86_ESPFIX64=y
CONFIG_X86_VSYSCALL_EMULATION=y
CONFIG_X86_IOPL_IOPERM=y
CONFIG_MICROCODE=y
CONFIG_MICROCODE_INTEL=y
CONFIG_MICROCODE_LATE_LOADING=y
CONFIG_X86_MSR=y
CONFIG_X86_CPUID=y
CONFIG_X86_5LEVEL=y
CONFIG_X86_DIRECT_GBPAGES=y
# CONFIG_X86_CPA_STATISTICS is not set
CONFIG_X86_MEM_ENCRYPT=y
CONFIG_NUMA=y
# CONFIG_AMD_NUMA is not set
CONFIG_X86_64_ACPI_NUMA=y
CONFIG_NUMA_EMU=y
CONFIG_NODES_SHIFT=10
CONFIG_ARCH_SPARSEMEM_ENABLE=y
CONFIG_ARCH_SPARSEMEM_DEFAULT=y
# CONFIG_ARCH_MEMORY_PROBE is not set
CONFIG_ARCH_PROC_KCORE_TEXT=y
CONFIG_ILLEGAL_POINTER_VALUE=0xdead000000000000
CONFIG_X86_PMEM_LEGACY_DEVICE=y
CONFIG_X86_PMEM_LEGACY=m
CONFIG_X86_CHECK_BIOS_CORRUPTION=y
# CONFIG_X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK is not set
CONFIG_MTRR=y
CONFIG_MTRR_SANITIZER=y
CONFIG_MTRR_SANITIZER_ENABLE_DEFAULT=1
CONFIG_MTRR_SANITIZER_SPARE_REG_NR_DEFAULT=1
CONFIG_X86_PAT=y
CONFIG_ARCH_USES_PG_UNCACHED=y
CONFIG_X86_UMIP=y
CONFIG_CC_HAS_IBT=y
CONFIG_X86_KERNEL_IBT=y
CONFIG_X86_INTEL_MEMORY_PROTECTION_KEYS=y
CONFIG_X86_INTEL_TSX_MODE_OFF=y
# CONFIG_X86_INTEL_TSX_MODE_ON is not set
# CONFIG_X86_INTEL_TSX_MODE_AUTO is not set
CONFIG_X86_SGX=y
CONFIG_EFI=y
CONFIG_EFI_STUB=y
CONFIG_EFI_HANDOVER_PROTOCOL=y
CONFIG_EFI_MIXED=y
# CONFIG_EFI_FAKE_MEMMAP is not set
CONFIG_EFI_RUNTIME_MAP=y
# CONFIG_HZ_100 is not set
# CONFIG_HZ_250 is not set
# CONFIG_HZ_300 is not set
CONFIG_HZ_1000=y
CONFIG_HZ=1000
CONFIG_SCHED_HRTICK=y
CONFIG_KEXEC=y
CONFIG_KEXEC_FILE=y
CONFIG_ARCH_HAS_KEXEC_PURGATORY=y
# CONFIG_KEXEC_SIG is not set
CONFIG_CRASH_DUMP=y
CONFIG_KEXEC_JUMP=y
CONFIG_PHYSICAL_START=0x1000000
CONFIG_RELOCATABLE=y
# CONFIG_RANDOMIZE_BASE is not set
CONFIG_PHYSICAL_ALIGN=0x200000
CONFIG_DYNAMIC_MEMORY_LAYOUT=y
# CONFIG_ADDRESS_MASKING is not set
CONFIG_HOTPLUG_CPU=y
CONFIG_BOOTPARAM_HOTPLUG_CPU0=y
# CONFIG_DEBUG_HOTPLUG_CPU0 is not set
# CONFIG_COMPAT_VDSO is not set
CONFIG_LEGACY_VSYSCALL_XONLY=y
# CONFIG_LEGACY_VSYSCALL_NONE is not set
# CONFIG_CMDLINE_BOOL is not set
CONFIG_MODIFY_LDT_SYSCALL=y
# CONFIG_STRICT_SIGALTSTACK_SIZE is not set
CONFIG_HAVE_LIVEPATCH=y
CONFIG_LIVEPATCH=y
# end of Processor type and features

CONFIG_CC_HAS_SLS=y
CONFIG_CC_HAS_RETURN_THUNK=y
CONFIG_CC_HAS_ENTRY_PADDING=y
CONFIG_FUNCTION_PADDING_CFI=11
CONFIG_FUNCTION_PADDING_BYTES=16
CONFIG_SPECULATION_MITIGATIONS=y
CONFIG_PAGE_TABLE_ISOLATION=y
# CONFIG_RETPOLINE is not set
CONFIG_CPU_IBRS_ENTRY=y
# CONFIG_SLS is not set
CONFIG_ARCH_HAS_ADD_PAGES=y
CONFIG_ARCH_MHP_MEMMAP_ON_MEMORY_ENABLE=y

#
# Power management and ACPI options
#
CONFIG_ARCH_HIBERNATION_HEADER=y
CONFIG_SUSPEND=y
CONFIG_SUSPEND_FREEZER=y
# CONFIG_SUSPEND_SKIP_SYNC is not set
CONFIG_HIBERNATE_CALLBACKS=y
CONFIG_HIBERNATION=y
CONFIG_HIBERNATION_SNAPSHOT_DEV=y
CONFIG_PM_STD_PARTITION=""
CONFIG_PM_SLEEP=y
CONFIG_PM_SLEEP_SMP=y
# CONFIG_PM_AUTOSLEEP is not set
# CONFIG_PM_USERSPACE_AUTOSLEEP is not set
# CONFIG_PM_WAKELOCKS is not set
CONFIG_PM=y
CONFIG_PM_DEBUG=y
# CONFIG_PM_ADVANCED_DEBUG is not set
# CONFIG_PM_TEST_SUSPEND is not set
CONFIG_PM_SLEEP_DEBUG=y
# CONFIG_DPM_WATCHDOG is not set
# CONFIG_PM_TRACE_RTC is not set
CONFIG_PM_CLK=y
# CONFIG_WQ_POWER_EFFICIENT_DEFAULT is not set
# CONFIG_ENERGY_MODEL is not set
CONFIG_ARCH_SUPPORTS_ACPI=y
CONFIG_ACPI=y
CONFIG_ACPI_LEGACY_TABLES_LOOKUP=y
CONFIG_ARCH_MIGHT_HAVE_ACPI_PDC=y
CONFIG_ACPI_SYSTEM_POWER_STATES_SUPPORT=y
# CONFIG_ACPI_DEBUGGER is not set
CONFIG_ACPI_SPCR_TABLE=y
# CONFIG_ACPI_FPDT is not set
CONFIG_ACPI_LPIT=y
CONFIG_ACPI_SLEEP=y
CONFIG_ACPI_REV_OVERRIDE_POSSIBLE=y
CONFIG_ACPI_EC_DEBUGFS=m
CONFIG_ACPI_AC=y
CONFIG_ACPI_BATTERY=y
CONFIG_ACPI_BUTTON=y
CONFIG_ACPI_VIDEO=m
CONFIG_ACPI_FAN=y
CONFIG_ACPI_TAD=m
CONFIG_ACPI_DOCK=y
CONFIG_ACPI_CPU_FREQ_PSS=y
CONFIG_ACPI_PROCESSOR_CSTATE=y
CONFIG_ACPI_PROCESSOR_IDLE=y
CONFIG_ACPI_CPPC_LIB=y
CONFIG_ACPI_PROCESSOR=y
CONFIG_ACPI_IPMI=m
CONFIG_ACPI_HOTPLUG_CPU=y
CONFIG_ACPI_PROCESSOR_AGGREGATOR=m
CONFIG_ACPI_THERMAL=y
CONFIG_ACPI_PLATFORM_PROFILE=m
CONFIG_ARCH_HAS_ACPI_TABLE_UPGRADE=y
CONFIG_ACPI_TABLE_UPGRADE=y
# CONFIG_ACPI_DEBUG is not set
CONFIG_ACPI_PCI_SLOT=y
CONFIG_ACPI_CONTAINER=y
CONFIG_ACPI_HOTPLUG_MEMORY=y
CONFIG_ACPI_HOTPLUG_IOAPIC=y
CONFIG_ACPI_SBS=m
CONFIG_ACPI_HED=y
# CONFIG_ACPI_CUSTOM_METHOD is not set
CONFIG_ACPI_BGRT=y
# CONFIG_ACPI_REDUCED_HARDWARE_ONLY is not set
CONFIG_ACPI_NFIT=m
# CONFIG_NFIT_SECURITY_DEBUG is not set
CONFIG_ACPI_NUMA=y
# CONFIG_ACPI_HMAT is not set
CONFIG_HAVE_ACPI_APEI=y
CONFIG_HAVE_ACPI_APEI_NMI=y
CONFIG_ACPI_APEI=y
CONFIG_ACPI_APEI_GHES=y
CONFIG_ACPI_APEI_PCIEAER=y
CONFIG_ACPI_APEI_MEMORY_FAILURE=y
CONFIG_ACPI_APEI_EINJ=m
# CONFIG_ACPI_APEI_ERST_DEBUG is not set
# CONFIG_ACPI_DPTF is not set
CONFIG_ACPI_WATCHDOG=y
CONFIG_ACPI_EXTLOG=m
CONFIG_ACPI_ADXL=y
# CONFIG_ACPI_CONFIGFS is not set
# CONFIG_ACPI_PFRUT is not set
CONFIG_ACPI_PCC=y
# CONFIG_ACPI_FFH is not set
# CONFIG_PMIC_OPREGION is not set
CONFIG_ACPI_PRMT=y
CONFIG_X86_PM_TIMER=y

#
# CPU Frequency scaling
#
CONFIG_CPU_FREQ=y
CONFIG_CPU_FREQ_GOV_ATTR_SET=y
CONFIG_CPU_FREQ_GOV_COMMON=y
CONFIG_CPU_FREQ_STAT=y
CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y
# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
# CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL is not set
CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
CONFIG_CPU_FREQ_GOV_POWERSAVE=y
CONFIG_CPU_FREQ_GOV_USERSPACE=y
CONFIG_CPU_FREQ_GOV_ONDEMAND=y
CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y
CONFIG_CPU_FREQ_GOV_SCHEDUTIL=y

#
# CPU frequency scaling drivers
#
CONFIG_X86_INTEL_PSTATE=y
# CONFIG_X86_PCC_CPUFREQ is not set
# CONFIG_X86_AMD_PSTATE is not set
# CONFIG_X86_AMD_PSTATE_UT is not set
CONFIG_X86_ACPI_CPUFREQ=m
# CONFIG_X86_POWERNOW_K8 is not set
# CONFIG_X86_SPEEDSTEP_CENTRINO is not set
CONFIG_X86_P4_CLOCKMOD=m

#
# shared options
#
CONFIG_X86_SPEEDSTEP_LIB=m
# end of CPU Frequency scaling

#
# CPU Idle
#
CONFIG_CPU_IDLE=y
# CONFIG_CPU_IDLE_GOV_LADDER is not set
CONFIG_CPU_IDLE_GOV_MENU=y
# CONFIG_CPU_IDLE_GOV_TEO is not set
CONFIG_CPU_IDLE_GOV_HALTPOLL=y
CONFIG_HALTPOLL_CPUIDLE=y
# end of CPU Idle

CONFIG_INTEL_IDLE=y
# end of Power management and ACPI options

#
# Bus options (PCI etc.)
#
CONFIG_PCI_DIRECT=y
CONFIG_PCI_MMCONFIG=y
CONFIG_MMCONF_FAM10H=y
# CONFIG_PCI_CNB20LE_QUIRK is not set
# CONFIG_ISA_BUS is not set
CONFIG_ISA_DMA_API=y
# end of Bus options (PCI etc.)

#
# Binary Emulations
#
CONFIG_IA32_EMULATION=y
# CONFIG_X86_X32_ABI is not set
CONFIG_COMPAT_32=y
CONFIG_COMPAT=y
CONFIG_COMPAT_FOR_U64_ALIGNMENT=y
# end of Binary Emulations

CONFIG_HAVE_KVM=y
CONFIG_HAVE_KVM_PFNCACHE=y
CONFIG_HAVE_KVM_IRQCHIP=y
CONFIG_HAVE_KVM_IRQFD=y
CONFIG_HAVE_KVM_IRQ_ROUTING=y
CONFIG_HAVE_KVM_DIRTY_RING=y
CONFIG_HAVE_KVM_DIRTY_RING_TSO=y
CONFIG_HAVE_KVM_DIRTY_RING_ACQ_REL=y
CONFIG_HAVE_KVM_EVENTFD=y
CONFIG_KVM_MMIO=y
CONFIG_KVM_ASYNC_PF=y
CONFIG_HAVE_KVM_MSI=y
CONFIG_HAVE_KVM_CPU_RELAX_INTERCEPT=y
CONFIG_KVM_VFIO=y
CONFIG_KVM_GENERIC_DIRTYLOG_READ_PROTECT=y
CONFIG_KVM_COMPAT=y
CONFIG_HAVE_KVM_IRQ_BYPASS=y
CONFIG_HAVE_KVM_NO_POLL=y
CONFIG_KVM_XFER_TO_GUEST_WORK=y
CONFIG_HAVE_KVM_PM_NOTIFIER=y
CONFIG_KVM_GENERIC_HARDWARE_ENABLING=y
CONFIG_VIRTUALIZATION=y
CONFIG_KVM=m
# CONFIG_KVM_WERROR is not set
CONFIG_KVM_INTEL=m
# CONFIG_X86_SGX_KVM is not set
# CONFIG_KVM_AMD is not set
CONFIG_KVM_SMM=y
# CONFIG_KVM_XEN is not set
CONFIG_AS_AVX512=y
CONFIG_AS_SHA1_NI=y
CONFIG_AS_SHA256_NI=y
CONFIG_AS_TPAUSE=y
CONFIG_AS_GFNI=y

#
# General architecture-dependent options
#
CONFIG_CRASH_CORE=y
CONFIG_KEXEC_CORE=y
CONFIG_HAVE_IMA_KEXEC=y
CONFIG_HOTPLUG_SMT=y
CONFIG_GENERIC_ENTRY=y
CONFIG_KPROBES=y
CONFIG_JUMP_LABEL=y
# CONFIG_STATIC_KEYS_SELFTEST is not set
# CONFIG_STATIC_CALL_SELFTEST is not set
CONFIG_OPTPROBES=y
CONFIG_KPROBES_ON_FTRACE=y
CONFIG_UPROBES=y
CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
CONFIG_ARCH_USE_BUILTIN_BSWAP=y
CONFIG_KRETPROBES=y
CONFIG_KRETPROBE_ON_RETHOOK=y
CONFIG_USER_RETURN_NOTIFIER=y
CONFIG_HAVE_IOREMAP_PROT=y
CONFIG_HAVE_KPROBES=y
CONFIG_HAVE_KRETPROBES=y
CONFIG_HAVE_OPTPROBES=y
CONFIG_HAVE_KPROBES_ON_FTRACE=y
CONFIG_ARCH_CORRECT_STACKTRACE_ON_KRETPROBE=y
CONFIG_HAVE_FUNCTION_ERROR_INJECTION=y
CONFIG_HAVE_NMI=y
CONFIG_TRACE_IRQFLAGS_SUPPORT=y
CONFIG_TRACE_IRQFLAGS_NMI_SUPPORT=y
CONFIG_HAVE_ARCH_TRACEHOOK=y
CONFIG_HAVE_DMA_CONTIGUOUS=y
CONFIG_GENERIC_SMP_IDLE_THREAD=y
CONFIG_ARCH_HAS_FORTIFY_SOURCE=y
CONFIG_ARCH_HAS_SET_MEMORY=y
CONFIG_ARCH_HAS_SET_DIRECT_MAP=y
CONFIG_HAVE_ARCH_THREAD_STRUCT_WHITELIST=y
CONFIG_ARCH_WANTS_DYNAMIC_TASK_STRUCT=y
CONFIG_ARCH_WANTS_NO_INSTR=y
CONFIG_HAVE_ASM_MODVERSIONS=y
CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
CONFIG_HAVE_RSEQ=y
CONFIG_HAVE_RUST=y
CONFIG_HAVE_FUNCTION_ARG_ACCESS_API=y
CONFIG_HAVE_HW_BREAKPOINT=y
CONFIG_HAVE_MIXED_BREAKPOINTS_REGS=y
CONFIG_HAVE_USER_RETURN_NOTIFIER=y
CONFIG_HAVE_PERF_EVENTS_NMI=y
CONFIG_HAVE_HARDLOCKUP_DETECTOR_PERF=y
CONFIG_HAVE_PERF_REGS=y
CONFIG_HAVE_PERF_USER_STACK_DUMP=y
CONFIG_HAVE_ARCH_JUMP_LABEL=y
CONFIG_HAVE_ARCH_JUMP_LABEL_RELATIVE=y
CONFIG_MMU_GATHER_TABLE_FREE=y
CONFIG_MMU_GATHER_RCU_TABLE_FREE=y
CONFIG_MMU_GATHER_MERGE_VMAS=y
CONFIG_MMU_LAZY_TLB_REFCOUNT=y
CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
CONFIG_ARCH_HAS_NMI_SAFE_THIS_CPU_OPS=y
CONFIG_HAVE_ALIGNED_STRUCT_PAGE=y
CONFIG_HAVE_CMPXCHG_LOCAL=y
CONFIG_HAVE_CMPXCHG_DOUBLE=y
CONFIG_ARCH_WANT_COMPAT_IPC_PARSE_VERSION=y
CONFIG_ARCH_WANT_OLD_COMPAT_IPC=y
CONFIG_HAVE_ARCH_SECCOMP=y
CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
CONFIG_SECCOMP=y
CONFIG_SECCOMP_FILTER=y
# CONFIG_SECCOMP_CACHE_DEBUG is not set
CONFIG_HAVE_ARCH_STACKLEAK=y
CONFIG_HAVE_STACKPROTECTOR=y
CONFIG_STACKPROTECTOR=y
CONFIG_STACKPROTECTOR_STRONG=y
CONFIG_ARCH_SUPPORTS_LTO_CLANG=y
CONFIG_ARCH_SUPPORTS_LTO_CLANG_THIN=y
CONFIG_LTO_NONE=y
CONFIG_ARCH_SUPPORTS_CFI_CLANG=y
CONFIG_HAVE_ARCH_WITHIN_STACK_FRAMES=y
CONFIG_HAVE_CONTEXT_TRACKING_USER=y
CONFIG_HAVE_CONTEXT_TRACKING_USER_OFFSTACK=y
CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN=y
CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
CONFIG_HAVE_MOVE_PUD=y
CONFIG_HAVE_MOVE_PMD=y
CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE=y
CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE_PUD=y
CONFIG_HAVE_ARCH_HUGE_VMAP=y
CONFIG_HAVE_ARCH_HUGE_VMALLOC=y
CONFIG_ARCH_WANT_HUGE_PMD_SHARE=y
CONFIG_HAVE_ARCH_SOFT_DIRTY=y
CONFIG_HAVE_MOD_ARCH_SPECIFIC=y
CONFIG_MODULES_USE_ELF_RELA=y
CONFIG_HAVE_IRQ_EXIT_ON_IRQ_STACK=y
CONFIG_HAVE_SOFTIRQ_ON_OWN_STACK=y
CONFIG_SOFTIRQ_ON_OWN_STACK=y
CONFIG_ARCH_HAS_ELF_RANDOMIZE=y
CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
CONFIG_HAVE_EXIT_THREAD=y
CONFIG_ARCH_MMAP_RND_BITS=28
CONFIG_HAVE_ARCH_MMAP_RND_COMPAT_BITS=y
CONFIG_ARCH_MMAP_RND_COMPAT_BITS=8
CONFIG_HAVE_ARCH_COMPAT_MMAP_BASES=y
CONFIG_PAGE_SIZE_LESS_THAN_64KB=y
CONFIG_PAGE_SIZE_LESS_THAN_256KB=y
CONFIG_HAVE_OBJTOOL=y
CONFIG_HAVE_JUMP_LABEL_HACK=y
CONFIG_HAVE_NOINSTR_HACK=y
CONFIG_HAVE_NOINSTR_VALIDATION=y
CONFIG_HAVE_UACCESS_VALIDATION=y
CONFIG_HAVE_STACK_VALIDATION=y
CONFIG_HAVE_RELIABLE_STACKTRACE=y
CONFIG_OLD_SIGSUSPEND3=y
CONFIG_COMPAT_OLD_SIGACTION=y
CONFIG_COMPAT_32BIT_TIME=y
CONFIG_HAVE_ARCH_VMAP_STACK=y
CONFIG_VMAP_STACK=y
CONFIG_HAVE_ARCH_RANDOMIZE_KSTACK_OFFSET=y
CONFIG_RANDOMIZE_KSTACK_OFFSET=y
CONFIG_RANDOMIZE_KSTACK_OFFSET_DEFAULT=y
CONFIG_ARCH_HAS_STRICT_KERNEL_RWX=y
CONFIG_STRICT_KERNEL_RWX=y
CONFIG_ARCH_HAS_STRICT_MODULE_RWX=y
CONFIG_STRICT_MODULE_RWX=y
CONFIG_HAVE_ARCH_PREL32_RELOCATIONS=y
CONFIG_ARCH_USE_MEMREMAP_PROT=y
# CONFIG_LOCK_EVENT_COUNTS is not set
CONFIG_ARCH_HAS_MEM_ENCRYPT=y
CONFIG_ARCH_HAS_CC_PLATFORM=y
CONFIG_HAVE_STATIC_CALL=y
CONFIG_HAVE_STATIC_CALL_INLINE=y
CONFIG_HAVE_PREEMPT_DYNAMIC=y
CONFIG_HAVE_PREEMPT_DYNAMIC_CALL=y
CONFIG_ARCH_WANT_LD_ORPHAN_WARN=y
CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y
CONFIG_ARCH_SUPPORTS_PAGE_TABLE_CHECK=y
CONFIG_ARCH_HAS_ELFCORE_COMPAT=y
CONFIG_ARCH_HAS_PARANOID_L1D_FLUSH=y
CONFIG_DYNAMIC_SIGFRAME=y
CONFIG_HAVE_ARCH_NODE_DEV_GROUP=y
CONFIG_ARCH_HAS_NONLEAF_PMD_YOUNG=y

#
# GCOV-based kernel profiling
#
# CONFIG_GCOV_KERNEL is not set
CONFIG_ARCH_HAS_GCOV_PROFILE_ALL=y
# end of GCOV-based kernel profiling

CONFIG_HAVE_GCC_PLUGINS=y
CONFIG_GCC_PLUGINS=y
# CONFIG_GCC_PLUGIN_LATENT_ENTROPY is not set
CONFIG_FUNCTION_ALIGNMENT_4B=y
CONFIG_FUNCTION_ALIGNMENT_16B=y
CONFIG_FUNCTION_ALIGNMENT=16
# end of General architecture-dependent options

CONFIG_RT_MUTEXES=y
CONFIG_BASE_SMALL=0
CONFIG_MODULE_SIG_FORMAT=y
CONFIG_MODULES=y
# CONFIG_MODULE_DEBUG is not set
CONFIG_MODULE_FORCE_LOAD=y
CONFIG_MODULE_UNLOAD=y
# CONFIG_MODULE_FORCE_UNLOAD is not set
# CONFIG_MODULE_UNLOAD_TAINT_TRACKING is not set
# CONFIG_MODVERSIONS is not set
# CONFIG_MODULE_SRCVERSION_ALL is not set
CONFIG_MODULE_SIG=y
# CONFIG_MODULE_SIG_FORCE is not set
CONFIG_MODULE_SIG_ALL=y
# CONFIG_MODULE_SIG_SHA1 is not set
# CONFIG_MODULE_SIG_SHA224 is not set
CONFIG_MODULE_SIG_SHA256=y
# CONFIG_MODULE_SIG_SHA384 is not set
# CONFIG_MODULE_SIG_SHA512 is not set
CONFIG_MODULE_SIG_HASH="sha256"
CONFIG_MODULE_COMPRESS_NONE=y
# CONFIG_MODULE_COMPRESS_GZIP is not set
# CONFIG_MODULE_COMPRESS_XZ is not set
# CONFIG_MODULE_COMPRESS_ZSTD is not set
# CONFIG_MODULE_ALLOW_MISSING_NAMESPACE_IMPORTS is not set
CONFIG_MODPROBE_PATH="/sbin/modprobe"
# CONFIG_TRIM_UNUSED_KSYMS is not set
CONFIG_MODULES_TREE_LOOKUP=y
CONFIG_BLOCK=y
CONFIG_BLOCK_LEGACY_AUTOLOAD=y
CONFIG_BLK_CGROUP_RWSTAT=y
CONFIG_BLK_CGROUP_PUNT_BIO=y
CONFIG_BLK_DEV_BSG_COMMON=y
CONFIG_BLK_ICQ=y
CONFIG_BLK_DEV_BSGLIB=y
CONFIG_BLK_DEV_INTEGRITY=y
CONFIG_BLK_DEV_INTEGRITY_T10=m
# CONFIG_BLK_DEV_ZONED is not set
CONFIG_BLK_DEV_THROTTLING=y
# CONFIG_BLK_DEV_THROTTLING_LOW is not set
CONFIG_BLK_WBT=y
CONFIG_BLK_WBT_MQ=y
# CONFIG_BLK_CGROUP_IOLATENCY is not set
# CONFIG_BLK_CGROUP_IOCOST is not set
# CONFIG_BLK_CGROUP_IOPRIO is not set
CONFIG_BLK_DEBUG_FS=y
# CONFIG_BLK_SED_OPAL is not set
# CONFIG_BLK_INLINE_ENCRYPTION is not set

#
# Partition Types
#
# CONFIG_PARTITION_ADVANCED is not set
CONFIG_MSDOS_PARTITION=y
CONFIG_EFI_PARTITION=y
# end of Partition Types

CONFIG_BLK_MQ_PCI=y
CONFIG_BLK_MQ_VIRTIO=y
CONFIG_BLK_PM=y
CONFIG_BLOCK_HOLDER_DEPRECATED=y
CONFIG_BLK_MQ_STACKING=y

#
# IO Schedulers
#
CONFIG_MQ_IOSCHED_DEADLINE=y
CONFIG_MQ_IOSCHED_KYBER=y
CONFIG_IOSCHED_BFQ=y
CONFIG_BFQ_GROUP_IOSCHED=y
# CONFIG_BFQ_CGROUP_DEBUG is not set
# end of IO Schedulers

CONFIG_PREEMPT_NOTIFIERS=y
CONFIG_PADATA=y
CONFIG_ASN1=y
CONFIG_UNINLINE_SPIN_UNLOCK=y
CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
CONFIG_MUTEX_SPIN_ON_OWNER=y
CONFIG_RWSEM_SPIN_ON_OWNER=y
CONFIG_LOCK_SPIN_ON_OWNER=y
CONFIG_ARCH_USE_QUEUED_SPINLOCKS=y
CONFIG_QUEUED_SPINLOCKS=y
CONFIG_ARCH_USE_QUEUED_RWLOCKS=y
CONFIG_QUEUED_RWLOCKS=y
CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE=y
CONFIG_ARCH_HAS_SYNC_CORE_BEFORE_USERMODE=y
CONFIG_ARCH_HAS_SYSCALL_WRAPPER=y
CONFIG_FREEZER=y

#
# Executable file formats
#
CONFIG_BINFMT_ELF=y
CONFIG_COMPAT_BINFMT_ELF=y
CONFIG_ELFCORE=y
CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
CONFIG_BINFMT_SCRIPT=y
CONFIG_BINFMT_MISC=m
CONFIG_COREDUMP=y
# end of Executable file formats

#
# Memory Management options
#
CONFIG_ZPOOL=y
CONFIG_SWAP=y
CONFIG_ZSWAP=y
# CONFIG_ZSWAP_DEFAULT_ON is not set
# CONFIG_ZSWAP_COMPRESSOR_DEFAULT_DEFLATE is not set
CONFIG_ZSWAP_COMPRESSOR_DEFAULT_LZO=y
# CONFIG_ZSWAP_COMPRESSOR_DEFAULT_842 is not set
# CONFIG_ZSWAP_COMPRESSOR_DEFAULT_LZ4 is not set
# CONFIG_ZSWAP_COMPRESSOR_DEFAULT_LZ4HC is not set
# CONFIG_ZSWAP_COMPRESSOR_DEFAULT_ZSTD is not set
CONFIG_ZSWAP_COMPRESSOR_DEFAULT="lzo"
CONFIG_ZSWAP_ZPOOL_DEFAULT_ZBUD=y
# CONFIG_ZSWAP_ZPOOL_DEFAULT_Z3FOLD is not set
# CONFIG_ZSWAP_ZPOOL_DEFAULT_ZSMALLOC is not set
CONFIG_ZSWAP_ZPOOL_DEFAULT="zbud"
CONFIG_ZBUD=y
# CONFIG_Z3FOLD is not set
CONFIG_ZSMALLOC=y
CONFIG_ZSMALLOC_STAT=y
CONFIG_ZSMALLOC_CHAIN_SIZE=8

#
# SLAB allocator options
#
# CONFIG_SLAB is not set
CONFIG_SLUB=y
# CONFIG_SLUB_TINY is not set
CONFIG_SLAB_MERGE_DEFAULT=y
CONFIG_SLAB_FREELIST_RANDOM=y
CONFIG_SLAB_FREELIST_HARDENED=y
# CONFIG_SLUB_STATS is not set
CONFIG_SLUB_CPU_PARTIAL=y
# end of SLAB allocator options

CONFIG_SHUFFLE_PAGE_ALLOCATOR=y
# CONFIG_COMPAT_BRK is not set
CONFIG_SPARSEMEM=y
CONFIG_SPARSEMEM_EXTREME=y
CONFIG_SPARSEMEM_VMEMMAP_ENABLE=y
CONFIG_SPARSEMEM_VMEMMAP=y
CONFIG_ARCH_WANT_OPTIMIZE_VMEMMAP=y
CONFIG_HAVE_FAST_GUP=y
CONFIG_NUMA_KEEP_MEMINFO=y
CONFIG_MEMORY_ISOLATION=y
CONFIG_EXCLUSIVE_SYSTEM_RAM=y
CONFIG_HAVE_BOOTMEM_INFO_NODE=y
CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
CONFIG_ARCH_ENABLE_MEMORY_HOTREMOVE=y
CONFIG_MEMORY_HOTPLUG=y
# CONFIG_MEMORY_HOTPLUG_DEFAULT_ONLINE is not set
CONFIG_MEMORY_HOTREMOVE=y
CONFIG_MHP_MEMMAP_ON_MEMORY=y
CONFIG_SPLIT_PTLOCK_CPUS=4
CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK=y
CONFIG_MEMORY_BALLOON=y
CONFIG_BALLOON_COMPACTION=y
CONFIG_COMPACTION=y
CONFIG_COMPACT_UNEVICTABLE_DEFAULT=1
CONFIG_PAGE_REPORTING=y
CONFIG_MIGRATION=y
CONFIG_DEVICE_MIGRATION=y
CONFIG_ARCH_ENABLE_HUGEPAGE_MIGRATION=y
CONFIG_ARCH_ENABLE_THP_MIGRATION=y
CONFIG_CONTIG_ALLOC=y
CONFIG_PHYS_ADDR_T_64BIT=y
CONFIG_MMU_NOTIFIER=y
CONFIG_KSM=y
CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
CONFIG_ARCH_SUPPORTS_MEMORY_FAILURE=y
CONFIG_MEMORY_FAILURE=y
CONFIG_HWPOISON_INJECT=m
CONFIG_ARCH_WANT_GENERAL_HUGETLB=y
CONFIG_ARCH_WANTS_THP_SWAP=y
CONFIG_TRANSPARENT_HUGEPAGE=y
CONFIG_TRANSPARENT_HUGEPAGE_ALWAYS=y
# CONFIG_TRANSPARENT_HUGEPAGE_MADVISE is not set
CONFIG_THP_SWAP=y
# CONFIG_READ_ONLY_THP_FOR_FS is not set
CONFIG_NEED_PER_CPU_EMBED_FIRST_CHUNK=y
CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK=y
CONFIG_USE_PERCPU_NUMA_NODE_ID=y
CONFIG_HAVE_SETUP_PER_CPU_AREA=y
CONFIG_FRONTSWAP=y
# CONFIG_CMA is not set
CONFIG_MEM_SOFT_DIRTY=y
CONFIG_GENERIC_EARLY_IOREMAP=y
CONFIG_DEFERRED_STRUCT_PAGE_INIT=y
CONFIG_PAGE_IDLE_FLAG=y
CONFIG_IDLE_PAGE_TRACKING=y
CONFIG_ARCH_HAS_CACHE_LINE_SIZE=y
CONFIG_ARCH_HAS_CURRENT_STACK_POINTER=y
CONFIG_ARCH_HAS_PTE_DEVMAP=y
CONFIG_ARCH_HAS_ZONE_DMA_SET=y
CONFIG_ZONE_DMA=y
CONFIG_ZONE_DMA32=y
CONFIG_ZONE_DEVICE=y
CONFIG_HMM_MIRROR=y
CONFIG_GET_FREE_REGION=y
CONFIG_DEVICE_PRIVATE=y
CONFIG_VMAP_PFN=y
CONFIG_ARCH_USES_HIGH_VMA_FLAGS=y
CONFIG_ARCH_HAS_PKEYS=y
CONFIG_VM_EVENT_COUNTERS=y
# CONFIG_PERCPU_STATS is not set
CONFIG_GUP_TEST=y
# CONFIG_DMAPOOL_TEST is not set
CONFIG_ARCH_HAS_PTE_SPECIAL=y
CONFIG_SECRETMEM=y
CONFIG_ANON_VMA_NAME=y
CONFIG_USERFAULTFD=y
CONFIG_HAVE_ARCH_USERFAULTFD_WP=y
CONFIG_HAVE_ARCH_USERFAULTFD_MINOR=y
CONFIG_PTE_MARKER_UFFD_WP=y
# CONFIG_LRU_GEN is not set
CONFIG_ARCH_SUPPORTS_PER_VMA_LOCK=y
CONFIG_PER_VMA_LOCK=y

#
# Data Access Monitoring
#
CONFIG_DAMON=y
CONFIG_DAMON_VADDR=y
CONFIG_DAMON_PADDR=y
CONFIG_DAMON_SYSFS=y
CONFIG_DAMON_DBGFS=y
# CONFIG_DAMON_RECLAIM is not set
# CONFIG_DAMON_LRU_SORT is not set
# end of Data Access Monitoring
# end of Memory Management options

CONFIG_NET=y
CONFIG_NET_INGRESS=y
CONFIG_NET_EGRESS=y
CONFIG_NET_REDIRECT=y
CONFIG_SKB_EXTENSIONS=y

#
# Networking options
#
CONFIG_PACKET=y
CONFIG_PACKET_DIAG=m
CONFIG_UNIX=y
CONFIG_UNIX_SCM=y
CONFIG_AF_UNIX_OOB=y
CONFIG_UNIX_DIAG=m
CONFIG_TLS=m
CONFIG_TLS_DEVICE=y
# CONFIG_TLS_TOE is not set
CONFIG_XFRM=y
CONFIG_XFRM_OFFLOAD=y
CONFIG_XFRM_ALGO=y
CONFIG_XFRM_USER=y
# CONFIG_XFRM_USER_COMPAT is not set
# CONFIG_XFRM_INTERFACE is not set
CONFIG_XFRM_SUB_POLICY=y
CONFIG_XFRM_MIGRATE=y
CONFIG_XFRM_STATISTICS=y
CONFIG_XFRM_AH=m
CONFIG_XFRM_ESP=m
CONFIG_XFRM_IPCOMP=m
# CONFIG_NET_KEY is not set
CONFIG_XDP_SOCKETS=y
# CONFIG_XDP_SOCKETS_DIAG is not set
CONFIG_NET_HANDSHAKE=y
CONFIG_INET=y
CONFIG_IP_MULTICAST=y
CONFIG_IP_ADVANCED_ROUTER=y
CONFIG_IP_FIB_TRIE_STATS=y
CONFIG_IP_MULTIPLE_TABLES=y
CONFIG_IP_ROUTE_MULTIPATH=y
CONFIG_IP_ROUTE_VERBOSE=y
CONFIG_IP_ROUTE_CLASSID=y
CONFIG_IP_PNP=y
CONFIG_IP_PNP_DHCP=y
# CONFIG_IP_PNP_BOOTP is not set
# CONFIG_IP_PNP_RARP is not set
CONFIG_NET_IPIP=m
CONFIG_NET_IPGRE_DEMUX=m
CONFIG_NET_IP_TUNNEL=m
CONFIG_NET_IPGRE=m
CONFIG_NET_IPGRE_BROADCAST=y
CONFIG_IP_MROUTE_COMMON=y
CONFIG_IP_MROUTE=y
CONFIG_IP_MROUTE_MULTIPLE_TABLES=y
CONFIG_IP_PIMSM_V1=y
CONFIG_IP_PIMSM_V2=y
CONFIG_SYN_COOKIES=y
CONFIG_NET_IPVTI=m
CONFIG_NET_UDP_TUNNEL=m
CONFIG_NET_FOU=m
CONFIG_NET_FOU_IP_TUNNELS=y
CONFIG_INET_AH=m
CONFIG_INET_ESP=m
CONFIG_INET_ESP_OFFLOAD=m
# CONFIG_INET_ESPINTCP is not set
CONFIG_INET_IPCOMP=m
CONFIG_INET_TABLE_PERTURB_ORDER=16
CONFIG_INET_XFRM_TUNNEL=m
CONFIG_INET_TUNNEL=m
CONFIG_INET_DIAG=m
CONFIG_INET_TCP_DIAG=m
CONFIG_INET_UDP_DIAG=m
CONFIG_INET_RAW_DIAG=m
# CONFIG_INET_DIAG_DESTROY is not set
CONFIG_TCP_CONG_ADVANCED=y
CONFIG_TCP_CONG_BIC=m
CONFIG_TCP_CONG_CUBIC=y
CONFIG_TCP_CONG_WESTWOOD=m
CONFIG_TCP_CONG_HTCP=m
CONFIG_TCP_CONG_HSTCP=m
CONFIG_TCP_CONG_HYBLA=m
CONFIG_TCP_CONG_VEGAS=m
CONFIG_TCP_CONG_NV=m
CONFIG_TCP_CONG_SCALABLE=m
CONFIG_TCP_CONG_LP=m
CONFIG_TCP_CONG_VENO=m
CONFIG_TCP_CONG_YEAH=m
CONFIG_TCP_CONG_ILLINOIS=m
CONFIG_TCP_CONG_DCTCP=m
# CONFIG_TCP_CONG_CDG is not set
CONFIG_TCP_CONG_BBR=m
CONFIG_DEFAULT_CUBIC=y
# CONFIG_DEFAULT_RENO is not set
CONFIG_DEFAULT_TCP_CONG="cubic"
CONFIG_TCP_MD5SIG=y
CONFIG_IPV6=y
CONFIG_IPV6_ROUTER_PREF=y
CONFIG_IPV6_ROUTE_INFO=y
CONFIG_IPV6_OPTIMISTIC_DAD=y
CONFIG_INET6_AH=m
CONFIG_INET6_ESP=m
CONFIG_INET6_ESP_OFFLOAD=m
# CONFIG_INET6_ESPINTCP is not set
CONFIG_INET6_IPCOMP=m
CONFIG_IPV6_MIP6=m
# CONFIG_IPV6_ILA is not set
CONFIG_INET6_XFRM_TUNNEL=m
CONFIG_INET6_TUNNEL=m
CONFIG_IPV6_VTI=m
CONFIG_IPV6_SIT=m
CONFIG_IPV6_SIT_6RD=y
CONFIG_IPV6_NDISC_NODETYPE=y
CONFIG_IPV6_TUNNEL=m
CONFIG_IPV6_GRE=m
CONFIG_IPV6_FOU=m
CONFIG_IPV6_FOU_TUNNEL=m
CONFIG_IPV6_MULTIPLE_TABLES=y
# CONFIG_IPV6_SUBTREES is not set
CONFIG_IPV6_MROUTE=y
CONFIG_IPV6_MROUTE_MULTIPLE_TABLES=y
CONFIG_IPV6_PIMSM_V2=y
# CONFIG_IPV6_SEG6_LWTUNNEL is not set
# CONFIG_IPV6_SEG6_HMAC is not set
# CONFIG_IPV6_RPL_LWTUNNEL is not set
CONFIG_IPV6_IOAM6_LWTUNNEL=y
CONFIG_NETLABEL=y
CONFIG_MPTCP=y
CONFIG_INET_MPTCP_DIAG=m
CONFIG_MPTCP_IPV6=y
CONFIG_NETWORK_SECMARK=y
CONFIG_NET_PTP_CLASSIFY=y
CONFIG_NETWORK_PHY_TIMESTAMPING=y
CONFIG_NETFILTER=y
CONFIG_NETFILTER_ADVANCED=y
CONFIG_BRIDGE_NETFILTER=m

#
# Core Netfilter Configuration
#
CONFIG_NETFILTER_INGRESS=y
CONFIG_NETFILTER_EGRESS=y
CONFIG_NETFILTER_SKIP_EGRESS=y
CONFIG_NETFILTER_NETLINK=m
CONFIG_NETFILTER_FAMILY_BRIDGE=y
CONFIG_NETFILTER_FAMILY_ARP=y
CONFIG_NETFILTER_BPF_LINK=y
# CONFIG_NETFILTER_NETLINK_HOOK is not set
# CONFIG_NETFILTER_NETLINK_ACCT is not set
CONFIG_NETFILTER_NETLINK_QUEUE=m
CONFIG_NETFILTER_NETLINK_LOG=m
CONFIG_NETFILTER_NETLINK_OSF=m
CONFIG_NF_CONNTRACK=m
CONFIG_NF_LOG_SYSLOG=m
CONFIG_NETFILTER_CONNCOUNT=m
CONFIG_NF_CONNTRACK_MARK=y
CONFIG_NF_CONNTRACK_SECMARK=y
CONFIG_NF_CONNTRACK_ZONES=y
CONFIG_NF_CONNTRACK_PROCFS=y
CONFIG_NF_CONNTRACK_EVENTS=y
CONFIG_NF_CONNTRACK_TIMEOUT=y
CONFIG_NF_CONNTRACK_TIMESTAMP=y
CONFIG_NF_CONNTRACK_LABELS=y
CONFIG_NF_CONNTRACK_OVS=y
CONFIG_NF_CT_PROTO_DCCP=y
CONFIG_NF_CT_PROTO_GRE=y
CONFIG_NF_CT_PROTO_SCTP=y
CONFIG_NF_CT_PROTO_UDPLITE=y
CONFIG_NF_CONNTRACK_AMANDA=m
CONFIG_NF_CONNTRACK_FTP=m
CONFIG_NF_CONNTRACK_H323=m
CONFIG_NF_CONNTRACK_IRC=m
CONFIG_NF_CONNTRACK_BROADCAST=m
CONFIG_NF_CONNTRACK_NETBIOS_NS=m
CONFIG_NF_CONNTRACK_SNMP=m
CONFIG_NF_CONNTRACK_PPTP=m
CONFIG_NF_CONNTRACK_SANE=m
CONFIG_NF_CONNTRACK_SIP=m
CONFIG_NF_CONNTRACK_TFTP=m
CONFIG_NF_CT_NETLINK=m
CONFIG_NF_CT_NETLINK_TIMEOUT=m
CONFIG_NF_CT_NETLINK_HELPER=m
CONFIG_NETFILTER_NETLINK_GLUE_CT=y
CONFIG_NF_NAT=m
CONFIG_NF_NAT_AMANDA=m
CONFIG_NF_NAT_FTP=m
CONFIG_NF_NAT_IRC=m
CONFIG_NF_NAT_SIP=m
CONFIG_NF_NAT_TFTP=m
CONFIG_NF_NAT_REDIRECT=y
CONFIG_NF_NAT_MASQUERADE=y
CONFIG_NF_NAT_OVS=y
CONFIG_NETFILTER_SYNPROXY=m
CONFIG_NF_TABLES=m
CONFIG_NF_TABLES_INET=y
CONFIG_NF_TABLES_NETDEV=y
CONFIG_NFT_NUMGEN=m
CONFIG_NFT_CT=m
CONFIG_NFT_FLOW_OFFLOAD=m
CONFIG_NFT_CONNLIMIT=m
CONFIG_NFT_LOG=m
CONFIG_NFT_LIMIT=m
CONFIG_NFT_MASQ=m
CONFIG_NFT_REDIR=m
CONFIG_NFT_NAT=m
# CONFIG_NFT_TUNNEL is not set
CONFIG_NFT_QUEUE=m
CONFIG_NFT_QUOTA=m
CONFIG_NFT_REJECT=m
CONFIG_NFT_REJECT_INET=m
CONFIG_NFT_COMPAT=m
CONFIG_NFT_HASH=m
CONFIG_NFT_FIB=m
CONFIG_NFT_FIB_INET=m
# CONFIG_NFT_XFRM is not set
CONFIG_NFT_SOCKET=m
# CONFIG_NFT_OSF is not set
CONFIG_NFT_TPROXY=m
CONFIG_NFT_SYNPROXY=m
CONFIG_NF_DUP_NETDEV=m
CONFIG_NFT_DUP_NETDEV=m
CONFIG_NFT_FWD_NETDEV=m
CONFIG_NFT_FIB_NETDEV=m
# CONFIG_NFT_REJECT_NETDEV is not set
CONFIG_NF_FLOW_TABLE_INET=m
CONFIG_NF_FLOW_TABLE=m
# CONFIG_NF_FLOW_TABLE_PROCFS is not set
CONFIG_NETFILTER_XTABLES=y
# CONFIG_NETFILTER_XTABLES_COMPAT is not set

#
# Xtables combined modules
#
CONFIG_NETFILTER_XT_MARK=m
CONFIG_NETFILTER_XT_CONNMARK=m
CONFIG_NETFILTER_XT_SET=m

#
# Xtables targets
#
CONFIG_NETFILTER_XT_TARGET_AUDIT=m
CONFIG_NETFILTER_XT_TARGET_CHECKSUM=m
CONFIG_NETFILTER_XT_TARGET_CLASSIFY=m
CONFIG_NETFILTER_XT_TARGET_CONNMARK=m
CONFIG_NETFILTER_XT_TARGET_CONNSECMARK=m
CONFIG_NETFILTER_XT_TARGET_CT=m
CONFIG_NETFILTER_XT_TARGET_DSCP=m
CONFIG_NETFILTER_XT_TARGET_HL=m
CONFIG_NETFILTER_XT_TARGET_HMARK=m
CONFIG_NETFILTER_XT_TARGET_IDLETIMER=m
# CONFIG_NETFILTER_XT_TARGET_LED is not set
CONFIG_NETFILTER_XT_TARGET_LOG=m
CONFIG_NETFILTER_XT_TARGET_MARK=m
CONFIG_NETFILTER_XT_NAT=m
CONFIG_NETFILTER_XT_TARGET_NETMAP=m
CONFIG_NETFILTER_XT_TARGET_NFLOG=m
CONFIG_NETFILTER_XT_TARGET_NFQUEUE=m
CONFIG_NETFILTER_XT_TARGET_NOTRACK=m
CONFIG_NETFILTER_XT_TARGET_RATEEST=m
CONFIG_NETFILTER_XT_TARGET_REDIRECT=m
CONFIG_NETFILTER_XT_TARGET_MASQUERADE=m
CONFIG_NETFILTER_XT_TARGET_TEE=m
CONFIG_NETFILTER_XT_TARGET_TPROXY=m
CONFIG_NETFILTER_XT_TARGET_TRACE=m
CONFIG_NETFILTER_XT_TARGET_SECMARK=m
CONFIG_NETFILTER_XT_TARGET_TCPMSS=m
CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP=m

#
# Xtables matches
#
CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=m
CONFIG_NETFILTER_XT_MATCH_BPF=m
CONFIG_NETFILTER_XT_MATCH_CGROUP=m
CONFIG_NETFILTER_XT_MATCH_CLUSTER=m
CONFIG_NETFILTER_XT_MATCH_COMMENT=m
CONFIG_NETFILTER_XT_MATCH_CONNBYTES=m
CONFIG_NETFILTER_XT_MATCH_CONNLABEL=m
CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=m
CONFIG_NETFILTER_XT_MATCH_CONNMARK=m
CONFIG_NETFILTER_XT_MATCH_CONNTRACK=m
CONFIG_NETFILTER_XT_MATCH_CPU=m
CONFIG_NETFILTER_XT_MATCH_DCCP=m
CONFIG_NETFILTER_XT_MATCH_DEVGROUP=m
CONFIG_NETFILTER_XT_MATCH_DSCP=m
CONFIG_NETFILTER_XT_MATCH_ECN=m
CONFIG_NETFILTER_XT_MATCH_ESP=m
CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=m
CONFIG_NETFILTER_XT_MATCH_HELPER=m
CONFIG_NETFILTER_XT_MATCH_HL=m
# CONFIG_NETFILTER_XT_MATCH_IPCOMP is not set
CONFIG_NETFILTER_XT_MATCH_IPRANGE=m
CONFIG_NETFILTER_XT_MATCH_IPVS=m
# CONFIG_NETFILTER_XT_MATCH_L2TP is not set
CONFIG_NETFILTER_XT_MATCH_LENGTH=m
CONFIG_NETFILTER_XT_MATCH_LIMIT=m
CONFIG_NETFILTER_XT_MATCH_MAC=m
CONFIG_NETFILTER_XT_MATCH_MARK=m
CONFIG_NETFILTER_XT_MATCH_MULTIPORT=m
# CONFIG_NETFILTER_XT_MATCH_NFACCT is not set
CONFIG_NETFILTER_XT_MATCH_OSF=m
CONFIG_NETFILTER_XT_MATCH_OWNER=m
CONFIG_NETFILTER_XT_MATCH_POLICY=m
CONFIG_NETFILTER_XT_MATCH_PHYSDEV=m
CONFIG_NETFILTER_XT_MATCH_PKTTYPE=m
CONFIG_NETFILTER_XT_MATCH_QUOTA=m
CONFIG_NETFILTER_XT_MATCH_RATEEST=m
CONFIG_NETFILTER_XT_MATCH_REALM=m
CONFIG_NETFILTER_XT_MATCH_RECENT=m
CONFIG_NETFILTER_XT_MATCH_SCTP=m
CONFIG_NETFILTER_XT_MATCH_SOCKET=m
CONFIG_NETFILTER_XT_MATCH_STATE=m
CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
CONFIG_NETFILTER_XT_MATCH_STRING=m
CONFIG_NETFILTER_XT_MATCH_TCPMSS=m
# CONFIG_NETFILTER_XT_MATCH_TIME is not set
# CONFIG_NETFILTER_XT_MATCH_U32 is not set
# end of Core Netfilter Configuration

CONFIG_IP_SET=m
CONFIG_IP_SET_MAX=256
CONFIG_IP_SET_BITMAP_IP=m
CONFIG_IP_SET_BITMAP_IPMAC=m
CONFIG_IP_SET_BITMAP_PORT=m
CONFIG_IP_SET_HASH_IP=m
CONFIG_IP_SET_HASH_IPMARK=m
CONFIG_IP_SET_HASH_IPPORT=m
CONFIG_IP_SET_HASH_IPPORTIP=m
CONFIG_IP_SET_HASH_IPPORTNET=m
CONFIG_IP_SET_HASH_IPMAC=m
CONFIG_IP_SET_HASH_MAC=m
CONFIG_IP_SET_HASH_NETPORTNET=m
CONFIG_IP_SET_HASH_NET=m
CONFIG_IP_SET_HASH_NETNET=m
CONFIG_IP_SET_HASH_NETPORT=m
CONFIG_IP_SET_HASH_NETIFACE=m
CONFIG_IP_SET_LIST_SET=m
CONFIG_IP_VS=m
CONFIG_IP_VS_IPV6=y
# CONFIG_IP_VS_DEBUG is not set
CONFIG_IP_VS_TAB_BITS=12

#
# IPVS transport protocol load balancing support
#
CONFIG_IP_VS_PROTO_TCP=y
CONFIG_IP_VS_PROTO_UDP=y
CONFIG_IP_VS_PROTO_AH_ESP=y
CONFIG_IP_VS_PROTO_ESP=y
CONFIG_IP_VS_PROTO_AH=y
CONFIG_IP_VS_PROTO_SCTP=y

#
# IPVS scheduler
#
CONFIG_IP_VS_RR=m
CONFIG_IP_VS_WRR=m
CONFIG_IP_VS_LC=m
CONFIG_IP_VS_WLC=m
CONFIG_IP_VS_FO=m
CONFIG_IP_VS_OVF=m
CONFIG_IP_VS_LBLC=m
CONFIG_IP_VS_LBLCR=m
CONFIG_IP_VS_DH=m
CONFIG_IP_VS_SH=m
# CONFIG_IP_VS_MH is not set
CONFIG_IP_VS_SED=m
CONFIG_IP_VS_NQ=m
# CONFIG_IP_VS_TWOS is not set

#
# IPVS SH scheduler
#
CONFIG_IP_VS_SH_TAB_BITS=8

#
# IPVS MH scheduler
#
CONFIG_IP_VS_MH_TAB_INDEX=12

#
# IPVS application helper
#
CONFIG_IP_VS_FTP=m
CONFIG_IP_VS_NFCT=y
CONFIG_IP_VS_PE_SIP=m

#
# IP: Netfilter Configuration
#
CONFIG_NF_DEFRAG_IPV4=m
CONFIG_NF_SOCKET_IPV4=m
CONFIG_NF_TPROXY_IPV4=m
CONFIG_NF_TABLES_IPV4=y
CONFIG_NFT_REJECT_IPV4=m
CONFIG_NFT_DUP_IPV4=m
CONFIG_NFT_FIB_IPV4=m
CONFIG_NF_TABLES_ARP=y
CONFIG_NF_DUP_IPV4=m
CONFIG_NF_LOG_ARP=m
CONFIG_NF_LOG_IPV4=m
CONFIG_NF_REJECT_IPV4=m
CONFIG_NF_NAT_SNMP_BASIC=m
CONFIG_NF_NAT_PPTP=m
CONFIG_NF_NAT_H323=m
CONFIG_IP_NF_IPTABLES=m
CONFIG_IP_NF_MATCH_AH=m
CONFIG_IP_NF_MATCH_ECN=m
CONFIG_IP_NF_MATCH_RPFILTER=m
CONFIG_IP_NF_MATCH_TTL=m
CONFIG_IP_NF_FILTER=m
CONFIG_IP_NF_TARGET_REJECT=m
CONFIG_IP_NF_TARGET_SYNPROXY=m
CONFIG_IP_NF_NAT=m
CONFIG_IP_NF_TARGET_MASQUERADE=m
CONFIG_IP_NF_TARGET_NETMAP=m
CONFIG_IP_NF_TARGET_REDIRECT=m
CONFIG_IP_NF_MANGLE=m
CONFIG_IP_NF_TARGET_ECN=m
CONFIG_IP_NF_TARGET_TTL=m
CONFIG_IP_NF_RAW=m
CONFIG_IP_NF_SECURITY=m
CONFIG_IP_NF_ARPTABLES=m
CONFIG_IP_NF_ARPFILTER=m
CONFIG_IP_NF_ARP_MANGLE=m
# end of IP: Netfilter Configuration

#
# IPv6: Netfilter Configuration
#
CONFIG_NF_SOCKET_IPV6=m
CONFIG_NF_TPROXY_IPV6=m
CONFIG_NF_TABLES_IPV6=y
CONFIG_NFT_REJECT_IPV6=m
CONFIG_NFT_DUP_IPV6=m
CONFIG_NFT_FIB_IPV6=m
CONFIG_NF_DUP_IPV6=m
CONFIG_NF_REJECT_IPV6=m
CONFIG_NF_LOG_IPV6=m
CONFIG_IP6_NF_IPTABLES=m
CONFIG_IP6_NF_MATCH_AH=m
CONFIG_IP6_NF_MATCH_EUI64=m
CONFIG_IP6_NF_MATCH_FRAG=m
CONFIG_IP6_NF_MATCH_OPTS=m
CONFIG_IP6_NF_MATCH_HL=m
CONFIG_IP6_NF_MATCH_IPV6HEADER=m
CONFIG_IP6_NF_MATCH_MH=m
CONFIG_IP6_NF_MATCH_RPFILTER=m
CONFIG_IP6_NF_MATCH_RT=m
# CONFIG_IP6_NF_MATCH_SRH is not set
# CONFIG_IP6_NF_TARGET_HL is not set
CONFIG_IP6_NF_FILTER=m
CONFIG_IP6_NF_TARGET_REJECT=m
CONFIG_IP6_NF_TARGET_SYNPROXY=m
CONFIG_IP6_NF_MANGLE=m
CONFIG_IP6_NF_RAW=m
CONFIG_IP6_NF_SECURITY=m
CONFIG_IP6_NF_NAT=m
CONFIG_IP6_NF_TARGET_MASQUERADE=m
CONFIG_IP6_NF_TARGET_NPT=m
# end of IPv6: Netfilter Configuration

CONFIG_NF_DEFRAG_IPV6=m
CONFIG_NF_TABLES_BRIDGE=m
# CONFIG_NFT_BRIDGE_META is not set
CONFIG_NFT_BRIDGE_REJECT=m
# CONFIG_NF_CONNTRACK_BRIDGE is not set
CONFIG_BRIDGE_NF_EBTABLES=m
CONFIG_BRIDGE_EBT_BROUTE=m
CONFIG_BRIDGE_EBT_T_FILTER=m
CONFIG_BRIDGE_EBT_T_NAT=m
CONFIG_BRIDGE_EBT_802_3=m
CONFIG_BRIDGE_EBT_AMONG=m
CONFIG_BRIDGE_EBT_ARP=m
CONFIG_BRIDGE_EBT_IP=m
CONFIG_BRIDGE_EBT_IP6=m
CONFIG_BRIDGE_EBT_LIMIT=m
CONFIG_BRIDGE_EBT_MARK=m
CONFIG_BRIDGE_EBT_PKTTYPE=m
CONFIG_BRIDGE_EBT_STP=m
CONFIG_BRIDGE_EBT_VLAN=m
CONFIG_BRIDGE_EBT_ARPREPLY=m
CONFIG_BRIDGE_EBT_DNAT=m
CONFIG_BRIDGE_EBT_MARK_T=m
CONFIG_BRIDGE_EBT_REDIRECT=m
CONFIG_BRIDGE_EBT_SNAT=m
CONFIG_BRIDGE_EBT_LOG=m
CONFIG_BRIDGE_EBT_NFLOG=m
# CONFIG_BPFILTER is not set
# CONFIG_IP_DCCP is not set
CONFIG_IP_SCTP=m
# CONFIG_SCTP_DBG_OBJCNT is not set
# CONFIG_SCTP_DEFAULT_COOKIE_HMAC_MD5 is not set
CONFIG_SCTP_DEFAULT_COOKIE_HMAC_SHA1=y
# CONFIG_SCTP_DEFAULT_COOKIE_HMAC_NONE is not set
CONFIG_SCTP_COOKIE_HMAC_MD5=y
CONFIG_SCTP_COOKIE_HMAC_SHA1=y
CONFIG_INET_SCTP_DIAG=m
# CONFIG_RDS is not set
# CONFIG_TIPC is not set
# CONFIG_ATM is not set
# CONFIG_L2TP is not set
CONFIG_STP=y
CONFIG_GARP=y
CONFIG_MRP=y
CONFIG_BRIDGE=m
CONFIG_BRIDGE_IGMP_SNOOPING=y
CONFIG_BRIDGE_VLAN_FILTERING=y
# CONFIG_BRIDGE_MRP is not set
# CONFIG_BRIDGE_CFM is not set
# CONFIG_NET_DSA is not set
CONFIG_VLAN_8021Q=y
CONFIG_VLAN_8021Q_GVRP=y
CONFIG_VLAN_8021Q_MVRP=y
CONFIG_LLC=y
# CONFIG_LLC2 is not set
# CONFIG_ATALK is not set
# CONFIG_X25 is not set
# CONFIG_LAPB is not set
# CONFIG_PHONET is not set
# CONFIG_6LOWPAN is not set
# CONFIG_IEEE802154 is not set
CONFIG_NET_SCHED=y

#
# Queueing/Scheduling
#
CONFIG_NET_SCH_HTB=m
CONFIG_NET_SCH_HFSC=m
CONFIG_NET_SCH_PRIO=m
CONFIG_NET_SCH_MULTIQ=m
CONFIG_NET_SCH_RED=m
CONFIG_NET_SCH_SFB=m
CONFIG_NET_SCH_SFQ=m
CONFIG_NET_SCH_TEQL=m
CONFIG_NET_SCH_TBF=m
CONFIG_NET_SCH_CBS=m
CONFIG_NET_SCH_ETF=m
CONFIG_NET_SCH_MQPRIO_LIB=m
CONFIG_NET_SCH_TAPRIO=m
CONFIG_NET_SCH_GRED=m
CONFIG_NET_SCH_NETEM=y
CONFIG_NET_SCH_DRR=m
CONFIG_NET_SCH_MQPRIO=m
CONFIG_NET_SCH_SKBPRIO=m
CONFIG_NET_SCH_CHOKE=m
CONFIG_NET_SCH_QFQ=m
CONFIG_NET_SCH_CODEL=m
CONFIG_NET_SCH_FQ_CODEL=y
CONFIG_NET_SCH_CAKE=m
CONFIG_NET_SCH_FQ=m
CONFIG_NET_SCH_HHF=m
CONFIG_NET_SCH_PIE=m
CONFIG_NET_SCH_FQ_PIE=m
CONFIG_NET_SCH_INGRESS=y
CONFIG_NET_SCH_PLUG=m
CONFIG_NET_SCH_ETS=m
CONFIG_NET_SCH_DEFAULT=y
# CONFIG_DEFAULT_FQ is not set
# CONFIG_DEFAULT_CODEL is not set
CONFIG_DEFAULT_FQ_CODEL=y
# CONFIG_DEFAULT_FQ_PIE is not set
# CONFIG_DEFAULT_SFQ is not set
# CONFIG_DEFAULT_PFIFO_FAST is not set
CONFIG_DEFAULT_NET_SCH="fq_codel"

#
# Classification
#
CONFIG_NET_CLS=y
CONFIG_NET_CLS_BASIC=m
CONFIG_NET_CLS_ROUTE4=m
CONFIG_NET_CLS_FW=m
CONFIG_NET_CLS_U32=m
CONFIG_CLS_U32_PERF=y
CONFIG_CLS_U32_MARK=y
CONFIG_NET_CLS_FLOW=m
CONFIG_NET_CLS_CGROUP=y
CONFIG_NET_CLS_BPF=m
CONFIG_NET_CLS_FLOWER=m
CONFIG_NET_CLS_MATCHALL=m
CONFIG_NET_EMATCH=y
CONFIG_NET_EMATCH_STACK=32
CONFIG_NET_EMATCH_CMP=m
CONFIG_NET_EMATCH_NBYTE=m
CONFIG_NET_EMATCH_U32=m
CONFIG_NET_EMATCH_META=m
CONFIG_NET_EMATCH_TEXT=m
CONFIG_NET_EMATCH_CANID=m
CONFIG_NET_EMATCH_IPSET=m
CONFIG_NET_EMATCH_IPT=m
CONFIG_NET_CLS_ACT=y
CONFIG_NET_ACT_POLICE=m
CONFIG_NET_ACT_GACT=m
CONFIG_GACT_PROB=y
CONFIG_NET_ACT_MIRRED=m
CONFIG_NET_ACT_SAMPLE=m
CONFIG_NET_ACT_IPT=m
CONFIG_NET_ACT_NAT=m
CONFIG_NET_ACT_PEDIT=m
CONFIG_NET_ACT_SIMP=m
CONFIG_NET_ACT_SKBEDIT=m
CONFIG_NET_ACT_CSUM=m
CONFIG_NET_ACT_MPLS=m
CONFIG_NET_ACT_VLAN=m
CONFIG_NET_ACT_BPF=m
CONFIG_NET_ACT_CONNMARK=m
CONFIG_NET_ACT_CTINFO=m
CONFIG_NET_ACT_SKBMOD=m
CONFIG_NET_ACT_IFE=m
CONFIG_NET_ACT_TUNNEL_KEY=m
CONFIG_NET_ACT_CT=m
CONFIG_NET_ACT_GATE=m
CONFIG_NET_IFE_SKBMARK=m
CONFIG_NET_IFE_SKBPRIO=m
CONFIG_NET_IFE_SKBTCINDEX=m
# CONFIG_NET_TC_SKB_EXT is not set
CONFIG_NET_SCH_FIFO=y
CONFIG_DCB=y
CONFIG_DNS_RESOLVER=m
# CONFIG_BATMAN_ADV is not set
CONFIG_OPENVSWITCH=m
CONFIG_OPENVSWITCH_GRE=m
CONFIG_OPENVSWITCH_VXLAN=m
CONFIG_VSOCKETS=m
CONFIG_VSOCKETS_DIAG=m
CONFIG_VSOCKETS_LOOPBACK=m
CONFIG_VIRTIO_VSOCKETS=m
CONFIG_VIRTIO_VSOCKETS_COMMON=m
CONFIG_HYPERV_VSOCKETS=m
CONFIG_NETLINK_DIAG=m
CONFIG_MPLS=y
CONFIG_NET_MPLS_GSO=y
CONFIG_MPLS_ROUTING=m
CONFIG_MPLS_IPTUNNEL=m
CONFIG_NET_NSH=y
# CONFIG_HSR is not set
CONFIG_NET_SWITCHDEV=y
CONFIG_NET_L3_MASTER_DEV=y
# CONFIG_QRTR is not set
# CONFIG_NET_NCSI is not set
CONFIG_PCPU_DEV_REFCNT=y
CONFIG_MAX_SKB_FRAGS=17
CONFIG_RPS=y
CONFIG_RFS_ACCEL=y
CONFIG_SOCK_RX_QUEUE_MAPPING=y
CONFIG_XPS=y
CONFIG_CGROUP_NET_PRIO=y
CONFIG_CGROUP_NET_CLASSID=y
CONFIG_NET_RX_BUSY_POLL=y
CONFIG_BQL=y
CONFIG_NET_FLOW_LIMIT=y

#
# Network testing
#
CONFIG_NET_PKTGEN=m
CONFIG_NET_DROP_MONITOR=y
# end of Network testing
# end of Networking options

# CONFIG_HAMRADIO is not set
CONFIG_CAN=m
CONFIG_CAN_RAW=m
CONFIG_CAN_BCM=m
CONFIG_CAN_GW=m
# CONFIG_CAN_J1939 is not set
# CONFIG_CAN_ISOTP is not set
# CONFIG_BT is not set
# CONFIG_AF_RXRPC is not set
# CONFIG_AF_KCM is not set
CONFIG_STREAM_PARSER=y
# CONFIG_MCTP is not set
CONFIG_FIB_RULES=y
CONFIG_WIRELESS=y
CONFIG_CFG80211=m
# CONFIG_NL80211_TESTMODE is not set
# CONFIG_CFG80211_DEVELOPER_WARNINGS is not set
# CONFIG_CFG80211_CERTIFICATION_ONUS is not set
CONFIG_CFG80211_REQUIRE_SIGNED_REGDB=y
CONFIG_CFG80211_USE_KERNEL_REGDB_KEYS=y
CONFIG_CFG80211_DEFAULT_PS=y
# CONFIG_CFG80211_DEBUGFS is not set
CONFIG_CFG80211_CRDA_SUPPORT=y
# CONFIG_CFG80211_WEXT is not set
CONFIG_MAC80211=m
CONFIG_MAC80211_HAS_RC=y
CONFIG_MAC80211_RC_MINSTREL=y
CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y
CONFIG_MAC80211_RC_DEFAULT="minstrel_ht"
# CONFIG_MAC80211_MESH is not set
CONFIG_MAC80211_LEDS=y
CONFIG_MAC80211_DEBUGFS=y
# CONFIG_MAC80211_MESSAGE_TRACING is not set
# CONFIG_MAC80211_DEBUG_MENU is not set
CONFIG_MAC80211_STA_HASH_MAX_SIZE=0
CONFIG_RFKILL=m
CONFIG_RFKILL_LEDS=y
CONFIG_RFKILL_INPUT=y
# CONFIG_RFKILL_GPIO is not set
CONFIG_NET_9P=y
CONFIG_NET_9P_FD=y
CONFIG_NET_9P_VIRTIO=y
# CONFIG_NET_9P_DEBUG is not set
# CONFIG_CAIF is not set
CONFIG_CEPH_LIB=m
# CONFIG_CEPH_LIB_PRETTYDEBUG is not set
CONFIG_CEPH_LIB_USE_DNS_RESOLVER=y
CONFIG_NFC=m
# CONFIG_NFC_DIGITAL is not set
CONFIG_NFC_NCI=m
# CONFIG_NFC_NCI_SPI is not set
# CONFIG_NFC_NCI_UART is not set
# CONFIG_NFC_HCI is not set

#
# Near Field Communication (NFC) devices
#
CONFIG_NFC_VIRTUAL_NCI=m
# CONFIG_NFC_FDP is not set
# CONFIG_NFC_PN533_USB is not set
# CONFIG_NFC_PN533_I2C is not set
# CONFIG_NFC_MRVL_USB is not set
# CONFIG_NFC_ST_NCI_I2C is not set
# CONFIG_NFC_ST_NCI_SPI is not set
# CONFIG_NFC_NXP_NCI is not set
# CONFIG_NFC_S3FWRN5_I2C is not set
# end of Near Field Communication (NFC) devices

CONFIG_PSAMPLE=m
CONFIG_NET_IFE=m
CONFIG_LWTUNNEL=y
CONFIG_LWTUNNEL_BPF=y
CONFIG_DST_CACHE=y
CONFIG_GRO_CELLS=y
CONFIG_SOCK_VALIDATE_XMIT=y
CONFIG_NET_SELFTESTS=y
CONFIG_NET_SOCK_MSG=y
CONFIG_NET_DEVLINK=y
CONFIG_PAGE_POOL=y
CONFIG_PAGE_POOL_STATS=y
CONFIG_FAILOVER=m
CONFIG_ETHTOOL_NETLINK=y

#
# Device Drivers
#
CONFIG_HAVE_EISA=y
# CONFIG_EISA is not set
CONFIG_HAVE_PCI=y
CONFIG_PCI=y
CONFIG_PCI_DOMAINS=y
CONFIG_PCIEPORTBUS=y
CONFIG_HOTPLUG_PCI_PCIE=y
CONFIG_PCIEAER=y
CONFIG_PCIEAER_INJECT=m
CONFIG_PCIE_ECRC=y
CONFIG_PCIEASPM=y
CONFIG_PCIEASPM_DEFAULT=y
# CONFIG_PCIEASPM_POWERSAVE is not set
# CONFIG_PCIEASPM_POWER_SUPERSAVE is not set
# CONFIG_PCIEASPM_PERFORMANCE is not set
CONFIG_PCIE_PME=y
CONFIG_PCIE_DPC=y
# CONFIG_PCIE_PTM is not set
# CONFIG_PCIE_EDR is not set
CONFIG_PCI_MSI=y
CONFIG_PCI_QUIRKS=y
# CONFIG_PCI_DEBUG is not set
# CONFIG_PCI_REALLOC_ENABLE_AUTO is not set
CONFIG_PCI_STUB=y
CONFIG_PCI_PF_STUB=m
CONFIG_PCI_ATS=y
CONFIG_PCI_LOCKLESS_CONFIG=y
CONFIG_PCI_IOV=y
CONFIG_PCI_PRI=y
CONFIG_PCI_PASID=y
# CONFIG_PCI_P2PDMA is not set
CONFIG_PCI_LABEL=y
CONFIG_PCI_HYPERV=m
# CONFIG_PCIE_BUS_TUNE_OFF is not set
CONFIG_PCIE_BUS_DEFAULT=y
# CONFIG_PCIE_BUS_SAFE is not set
# CONFIG_PCIE_BUS_PERFORMANCE is not set
# CONFIG_PCIE_BUS_PEER2PEER is not set
CONFIG_VGA_ARB=y
CONFIG_VGA_ARB_MAX_GPUS=64
CONFIG_HOTPLUG_PCI=y
CONFIG_HOTPLUG_PCI_ACPI=y
CONFIG_HOTPLUG_PCI_ACPI_IBM=m
# CONFIG_HOTPLUG_PCI_CPCI is not set
CONFIG_HOTPLUG_PCI_SHPC=y

#
# PCI controller drivers
#
CONFIG_VMD=y
CONFIG_PCI_HYPERV_INTERFACE=m

#
# Cadence-based PCIe controllers
#
# end of Cadence-based PCIe controllers

#
# DesignWare-based PCIe controllers
#
# CONFIG_PCI_MESON is not set
# CONFIG_PCIE_DW_PLAT_HOST is not set
# end of DesignWare-based PCIe controllers

#
# Mobiveil-based PCIe controllers
#
# end of Mobiveil-based PCIe controllers
# end of PCI controller drivers

#
# PCI Endpoint
#
# CONFIG_PCI_ENDPOINT is not set
# end of PCI Endpoint

#
# PCI switch controller drivers
#
# CONFIG_PCI_SW_SWITCHTEC is not set
# end of PCI switch controller drivers

# CONFIG_CXL_BUS is not set
# CONFIG_PCCARD is not set
# CONFIG_RAPIDIO is not set

#
# Generic Driver Options
#
CONFIG_AUXILIARY_BUS=y
# CONFIG_UEVENT_HELPER is not set
CONFIG_DEVTMPFS=y
CONFIG_DEVTMPFS_MOUNT=y
# CONFIG_DEVTMPFS_SAFE is not set
CONFIG_STANDALONE=y
CONFIG_PREVENT_FIRMWARE_BUILD=y

#
# Firmware loader
#
CONFIG_FW_LOADER=y
CONFIG_FW_LOADER_DEBUG=y
CONFIG_FW_LOADER_PAGED_BUF=y
CONFIG_FW_LOADER_SYSFS=y
CONFIG_EXTRA_FIRMWARE=""
CONFIG_FW_LOADER_USER_HELPER=y
# CONFIG_FW_LOADER_USER_HELPER_FALLBACK is not set
# CONFIG_FW_LOADER_COMPRESS is not set
CONFIG_FW_CACHE=y
CONFIG_FW_UPLOAD=y
# end of Firmware loader

CONFIG_ALLOW_DEV_COREDUMP=y
# CONFIG_DEBUG_DRIVER is not set
# CONFIG_DEBUG_DEVRES is not set
# CONFIG_DEBUG_TEST_DRIVER_REMOVE is not set
# CONFIG_TEST_ASYNC_DRIVER_PROBE is not set
CONFIG_GENERIC_CPU_AUTOPROBE=y
CONFIG_GENERIC_CPU_VULNERABILITIES=y
CONFIG_REGMAP=y
CONFIG_REGMAP_I2C=m
CONFIG_REGMAP_SPI=m
CONFIG_DMA_SHARED_BUFFER=y
# CONFIG_DMA_FENCE_TRACE is not set
# CONFIG_FW_DEVLINK_SYNC_STATE_TIMEOUT is not set
# end of Generic Driver Options

#
# Bus devices
#
# CONFIG_MHI_BUS is not set
# CONFIG_MHI_BUS_EP is not set
# end of Bus devices

CONFIG_CONNECTOR=y
CONFIG_PROC_EVENTS=y

#
# Firmware Drivers
#

#
# ARM System Control and Management Interface Protocol
#
# end of ARM System Control and Management Interface Protocol

CONFIG_EDD=m
# CONFIG_EDD_OFF is not set
CONFIG_FIRMWARE_MEMMAP=y
CONFIG_DMIID=y
CONFIG_DMI_SYSFS=y
CONFIG_DMI_SCAN_MACHINE_NON_EFI_FALLBACK=y
# CONFIG_ISCSI_IBFT is not set
CONFIG_FW_CFG_SYSFS=y
# CONFIG_FW_CFG_SYSFS_CMDLINE is not set
CONFIG_SYSFB=y
# CONFIG_SYSFB_SIMPLEFB is not set
# CONFIG_GOOGLE_FIRMWARE is not set

#
# EFI (Extensible Firmware Interface) Support
#
CONFIG_EFI_ESRT=y
CONFIG_EFI_VARS_PSTORE=y
CONFIG_EFI_VARS_PSTORE_DEFAULT_DISABLE=y
CONFIG_EFI_DXE_MEM_ATTRIBUTES=y
CONFIG_EFI_RUNTIME_WRAPPERS=y
# CONFIG_EFI_BOOTLOADER_CONTROL is not set
# CONFIG_EFI_CAPSULE_LOADER is not set
# CONFIG_EFI_TEST is not set
# CONFIG_APPLE_PROPERTIES is not set
# CONFIG_RESET_ATTACK_MITIGATION is not set
# CONFIG_EFI_RCI2_TABLE is not set
# CONFIG_EFI_DISABLE_PCI_DMA is not set
CONFIG_EFI_EARLYCON=y
CONFIG_EFI_CUSTOM_SSDT_OVERLAYS=y
# CONFIG_EFI_DISABLE_RUNTIME is not set
# CONFIG_EFI_COCO_SECRET is not set
# end of EFI (Extensible Firmware Interface) Support

CONFIG_UEFI_CPER=y
CONFIG_UEFI_CPER_X86=y

#
# Tegra firmware driver
#
# end of Tegra firmware driver
# end of Firmware Drivers

# CONFIG_GNSS is not set
# CONFIG_MTD is not set
# CONFIG_OF is not set
CONFIG_ARCH_MIGHT_HAVE_PC_PARPORT=y
CONFIG_PARPORT=m
CONFIG_PARPORT_PC=m
CONFIG_PARPORT_SERIAL=m
# CONFIG_PARPORT_PC_FIFO is not set
# CONFIG_PARPORT_PC_SUPERIO is not set
CONFIG_PARPORT_1284=y
CONFIG_PNP=y
# CONFIG_PNP_DEBUG_MESSAGES is not set

#
# Protocols
#
CONFIG_PNPACPI=y
CONFIG_BLK_DEV=y
CONFIG_BLK_DEV_NULL_BLK=m
# CONFIG_BLK_DEV_FD is not set
CONFIG_CDROM=m
# CONFIG_BLK_DEV_PCIESSD_MTIP32XX is not set
CONFIG_ZRAM=m
CONFIG_ZRAM_DEF_COMP_LZORLE=y
# CONFIG_ZRAM_DEF_COMP_LZO is not set
CONFIG_ZRAM_DEF_COMP="lzo-rle"
CONFIG_ZRAM_WRITEBACK=y
# CONFIG_ZRAM_MEMORY_TRACKING is not set
# CONFIG_ZRAM_MULTI_COMP is not set
CONFIG_BLK_DEV_LOOP=m
CONFIG_BLK_DEV_LOOP_MIN_COUNT=0
# CONFIG_BLK_DEV_DRBD is not set
CONFIG_BLK_DEV_NBD=m
CONFIG_BLK_DEV_RAM=m
CONFIG_BLK_DEV_RAM_COUNT=16
CONFIG_BLK_DEV_RAM_SIZE=16384
CONFIG_CDROM_PKTCDVD=m
CONFIG_CDROM_PKTCDVD_BUFFERS=8
# CONFIG_CDROM_PKTCDVD_WCACHE is not set
# CONFIG_ATA_OVER_ETH is not set
CONFIG_VIRTIO_BLK=m
CONFIG_BLK_DEV_RBD=m
# CONFIG_BLK_DEV_UBLK is not set

#
# NVME Support
#
CONFIG_NVME_CORE=m
CONFIG_BLK_DEV_NVME=m
CONFIG_NVME_MULTIPATH=y
# CONFIG_NVME_VERBOSE_ERRORS is not set
# CONFIG_NVME_HWMON is not set
# CONFIG_NVME_FC is not set
# CONFIG_NVME_TCP is not set
# CONFIG_NVME_AUTH is not set
# CONFIG_NVME_TARGET is not set
# end of NVME Support

#
# Misc devices
#
# CONFIG_AD525X_DPOT is not set
# CONFIG_DUMMY_IRQ is not set
# CONFIG_IBM_ASM is not set
# CONFIG_PHANTOM is not set
CONFIG_TIFM_CORE=m
CONFIG_TIFM_7XX1=m
# CONFIG_ICS932S401 is not set
CONFIG_ENCLOSURE_SERVICES=m
# CONFIG_SGI_XP is not set
CONFIG_HP_ILO=m
# CONFIG_SGI_GRU is not set
CONFIG_APDS9802ALS=m
CONFIG_ISL29003=m
CONFIG_ISL29020=m
CONFIG_SENSORS_TSL2550=m
CONFIG_SENSORS_BH1770=m
CONFIG_SENSORS_APDS990X=m
# CONFIG_HMC6352 is not set
# CONFIG_DS1682 is not set
# CONFIG_LATTICE_ECP3_CONFIG is not set
# CONFIG_SRAM is not set
# CONFIG_DW_XDATA_PCIE is not set
# CONFIG_PCI_ENDPOINT_TEST is not set
# CONFIG_XILINX_SDFEC is not set
# CONFIG_C2PORT is not set

#
# EEPROM support
#
# CONFIG_EEPROM_AT24 is not set
# CONFIG_EEPROM_AT25 is not set
CONFIG_EEPROM_LEGACY=m
CONFIG_EEPROM_MAX6875=m
CONFIG_EEPROM_93CX6=m
# CONFIG_EEPROM_93XX46 is not set
# CONFIG_EEPROM_IDT_89HPESX is not set
# CONFIG_EEPROM_EE1004 is not set
# end of EEPROM support

# CONFIG_CB710_CORE is not set

#
# Texas Instruments shared transport line discipline
#
# CONFIG_TI_ST is not set
# end of Texas Instruments shared transport line discipline

# CONFIG_SENSORS_LIS3_I2C is not set
# CONFIG_ALTERA_STAPL is not set
CONFIG_INTEL_MEI=m
CONFIG_INTEL_MEI_ME=m
# CONFIG_INTEL_MEI_TXE is not set
# CONFIG_INTEL_MEI_GSC is not set
# CONFIG_INTEL_MEI_HDCP is not set
# CONFIG_INTEL_MEI_PXP is not set
# CONFIG_VMWARE_VMCI is not set
# CONFIG_GENWQE is not set
# CONFIG_ECHO is not set
# CONFIG_BCM_VK is not set
# CONFIG_MISC_ALCOR_PCI is not set
# CONFIG_MISC_RTSX_PCI is not set
# CONFIG_MISC_RTSX_USB is not set
# CONFIG_UACCE is not set
CONFIG_PVPANIC=y
# CONFIG_PVPANIC_MMIO is not set
# CONFIG_PVPANIC_PCI is not set
# CONFIG_GP_PCI1XXXX is not set
# end of Misc devices

#
# SCSI device support
#
CONFIG_SCSI_MOD=y
CONFIG_RAID_ATTRS=m
CONFIG_SCSI_COMMON=y
CONFIG_SCSI=y
CONFIG_SCSI_DMA=y
CONFIG_SCSI_NETLINK=y
CONFIG_SCSI_PROC_FS=y

#
# SCSI support type (disk, tape, CD-ROM)
#
CONFIG_BLK_DEV_SD=m
CONFIG_CHR_DEV_ST=m
CONFIG_BLK_DEV_SR=m
CONFIG_CHR_DEV_SG=m
CONFIG_BLK_DEV_BSG=y
CONFIG_CHR_DEV_SCH=m
CONFIG_SCSI_ENCLOSURE=m
CONFIG_SCSI_CONSTANTS=y
CONFIG_SCSI_LOGGING=y
CONFIG_SCSI_SCAN_ASYNC=y

#
# SCSI Transports
#
CONFIG_SCSI_SPI_ATTRS=m
CONFIG_SCSI_FC_ATTRS=m
CONFIG_SCSI_ISCSI_ATTRS=m
CONFIG_SCSI_SAS_ATTRS=m
CONFIG_SCSI_SAS_LIBSAS=m
CONFIG_SCSI_SAS_ATA=y
CONFIG_SCSI_SAS_HOST_SMP=y
CONFIG_SCSI_SRP_ATTRS=m
# end of SCSI Transports

CONFIG_SCSI_LOWLEVEL=y
# CONFIG_ISCSI_TCP is not set
# CONFIG_ISCSI_BOOT_SYSFS is not set
# CONFIG_SCSI_CXGB3_ISCSI is not set
# CONFIG_SCSI_CXGB4_ISCSI is not set
# CONFIG_SCSI_BNX2_ISCSI is not set
# CONFIG_BE2ISCSI is not set
# CONFIG_BLK_DEV_3W_XXXX_RAID is not set
# CONFIG_SCSI_HPSA is not set
# CONFIG_SCSI_3W_9XXX is not set
# CONFIG_SCSI_3W_SAS is not set
# CONFIG_SCSI_ACARD is not set
# CONFIG_SCSI_AACRAID is not set
# CONFIG_SCSI_AIC7XXX is not set
# CONFIG_SCSI_AIC79XX is not set
# CONFIG_SCSI_AIC94XX is not set
# CONFIG_SCSI_MVSAS is not set
# CONFIG_SCSI_MVUMI is not set
# CONFIG_SCSI_ADVANSYS is not set
# CONFIG_SCSI_ARCMSR is not set
# CONFIG_SCSI_ESAS2R is not set
CONFIG_MEGARAID_NEWGEN=y
CONFIG_MEGARAID_MM=m
CONFIG_MEGARAID_MAILBOX=m
CONFIG_MEGARAID_LEGACY=m
CONFIG_MEGARAID_SAS=m
CONFIG_SCSI_MPT3SAS=m
CONFIG_SCSI_MPT2SAS_MAX_SGE=128
CONFIG_SCSI_MPT3SAS_MAX_SGE=128
# CONFIG_SCSI_MPT2SAS is not set
# CONFIG_SCSI_MPI3MR is not set
# CONFIG_SCSI_SMARTPQI is not set
# CONFIG_SCSI_HPTIOP is not set
# CONFIG_SCSI_BUSLOGIC is not set
# CONFIG_SCSI_MYRB is not set
# CONFIG_SCSI_MYRS is not set
# CONFIG_VMWARE_PVSCSI is not set
CONFIG_HYPERV_STORAGE=m
# CONFIG_LIBFC is not set
# CONFIG_SCSI_SNIC is not set
# CONFIG_SCSI_DMX3191D is not set
# CONFIG_SCSI_FDOMAIN_PCI is not set
CONFIG_SCSI_ISCI=m
# CONFIG_SCSI_IPS is not set
# CONFIG_SCSI_INITIO is not set
# CONFIG_SCSI_INIA100 is not set
# CONFIG_SCSI_PPA is not set
# CONFIG_SCSI_IMM is not set
# CONFIG_SCSI_STEX is not set
# CONFIG_SCSI_SYM53C8XX_2 is not set
# CONFIG_SCSI_IPR is not set
# CONFIG_SCSI_QLOGIC_1280 is not set
# CONFIG_SCSI_QLA_FC is not set
# CONFIG_SCSI_QLA_ISCSI is not set
# CONFIG_SCSI_LPFC is not set
# CONFIG_SCSI_DC395x is not set
# CONFIG_SCSI_AM53C974 is not set
# CONFIG_SCSI_WD719X is not set
CONFIG_SCSI_DEBUG=m
# CONFIG_SCSI_PMCRAID is not set
# CONFIG_SCSI_PM8001 is not set
# CONFIG_SCSI_BFA_FC is not set
# CONFIG_SCSI_VIRTIO is not set
# CONFIG_SCSI_CHELSIO_FCOE is not set
CONFIG_SCSI_DH=y
CONFIG_SCSI_DH_RDAC=y
CONFIG_SCSI_DH_HP_SW=y
CONFIG_SCSI_DH_EMC=y
CONFIG_SCSI_DH_ALUA=y
# end of SCSI device support

CONFIG_ATA=m
CONFIG_SATA_HOST=y
CONFIG_PATA_TIMINGS=y
CONFIG_ATA_VERBOSE_ERROR=y
CONFIG_ATA_FORCE=y
CONFIG_ATA_ACPI=y
# CONFIG_SATA_ZPODD is not set
CONFIG_SATA_PMP=y

#
# Controllers with non-SFF native interface
#
CONFIG_SATA_AHCI=m
CONFIG_SATA_MOBILE_LPM_POLICY=0
CONFIG_SATA_AHCI_PLATFORM=m
# CONFIG_AHCI_DWC is not set
# CONFIG_SATA_INIC162X is not set
# CONFIG_SATA_ACARD_AHCI is not set
# CONFIG_SATA_SIL24 is not set
CONFIG_ATA_SFF=y

#
# SFF controllers with custom DMA interface
#
# CONFIG_PDC_ADMA is not set
# CONFIG_SATA_QSTOR is not set
# CONFIG_SATA_SX4 is not set
CONFIG_ATA_BMDMA=y

#
# SATA SFF controllers with BMDMA
#
CONFIG_ATA_PIIX=m
# CONFIG_SATA_DWC is not set
# CONFIG_SATA_MV is not set
# CONFIG_SATA_NV is not set
# CONFIG_SATA_PROMISE is not set
# CONFIG_SATA_SIL is not set
# CONFIG_SATA_SIS is not set
# CONFIG_SATA_SVW is not set
# CONFIG_SATA_ULI is not set
# CONFIG_SATA_VIA is not set
# CONFIG_SATA_VITESSE is not set

#
# PATA SFF controllers with BMDMA
#
# CONFIG_PATA_ALI is not set
# CONFIG_PATA_AMD is not set
# CONFIG_PATA_ARTOP is not set
# CONFIG_PATA_ATIIXP is not set
# CONFIG_PATA_ATP867X is not set
# CONFIG_PATA_CMD64X is not set
# CONFIG_PATA_CYPRESS is not set
# CONFIG_PATA_EFAR is not set
# CONFIG_PATA_HPT366 is not set
# CONFIG_PATA_HPT37X is not set
# CONFIG_PATA_HPT3X2N is not set
# CONFIG_PATA_HPT3X3 is not set
# CONFIG_PATA_IT8213 is not set
# CONFIG_PATA_IT821X is not set
# CONFIG_PATA_JMICRON is not set
# CONFIG_PATA_MARVELL is not set
# CONFIG_PATA_NETCELL is not set
# CONFIG_PATA_NINJA32 is not set
# CONFIG_PATA_NS87415 is not set
# CONFIG_PATA_OLDPIIX is not set
# CONFIG_PATA_OPTIDMA is not set
# CONFIG_PATA_PDC2027X is not set
# CONFIG_PATA_PDC_OLD is not set
# CONFIG_PATA_RADISYS is not set
# CONFIG_PATA_RDC is not set
# CONFIG_PATA_SCH is not set
# CONFIG_PATA_SERVERWORKS is not set
# CONFIG_PATA_SIL680 is not set
# CONFIG_PATA_SIS is not set
# CONFIG_PATA_TOSHIBA is not set
# CONFIG_PATA_TRIFLEX is not set
# CONFIG_PATA_VIA is not set
# CONFIG_PATA_WINBOND is not set

#
# PIO-only SFF controllers
#
# CONFIG_PATA_CMD640_PCI is not set
# CONFIG_PATA_MPIIX is not set
# CONFIG_PATA_NS87410 is not set
# CONFIG_PATA_OPTI is not set
# CONFIG_PATA_RZ1000 is not set
# CONFIG_PATA_PARPORT is not set

#
# Generic fallback / legacy drivers
#
# CONFIG_PATA_ACPI is not set
CONFIG_ATA_GENERIC=m
# CONFIG_PATA_LEGACY is not set
CONFIG_MD=y
CONFIG_BLK_DEV_MD=y
CONFIG_MD_AUTODETECT=y
CONFIG_MD_LINEAR=m
CONFIG_MD_RAID0=m
CONFIG_MD_RAID1=m
CONFIG_MD_RAID10=m
CONFIG_MD_RAID456=m
# CONFIG_MD_MULTIPATH is not set
CONFIG_MD_FAULTY=m
# CONFIG_BCACHE is not set
CONFIG_BLK_DEV_DM_BUILTIN=y
CONFIG_BLK_DEV_DM=m
CONFIG_DM_DEBUG=y
CONFIG_DM_BUFIO=m
# CONFIG_DM_DEBUG_BLOCK_MANAGER_LOCKING is not set
CONFIG_DM_BIO_PRISON=m
CONFIG_DM_PERSISTENT_DATA=m
# CONFIG_DM_UNSTRIPED is not set
CONFIG_DM_CRYPT=m
CONFIG_DM_SNAPSHOT=m
CONFIG_DM_THIN_PROVISIONING=m
CONFIG_DM_CACHE=m
CONFIG_DM_CACHE_SMQ=m
CONFIG_DM_WRITECACHE=m
# CONFIG_DM_EBS is not set
CONFIG_DM_ERA=m
# CONFIG_DM_CLONE is not set
CONFIG_DM_MIRROR=m
CONFIG_DM_LOG_USERSPACE=m
CONFIG_DM_RAID=m
CONFIG_DM_ZERO=m
CONFIG_DM_MULTIPATH=m
CONFIG_DM_MULTIPATH_QL=m
CONFIG_DM_MULTIPATH_ST=m
# CONFIG_DM_MULTIPATH_HST is not set
# CONFIG_DM_MULTIPATH_IOA is not set
CONFIG_DM_DELAY=m
# CONFIG_DM_DUST is not set
CONFIG_DM_UEVENT=y
CONFIG_DM_FLAKEY=m
CONFIG_DM_VERITY=m
# CONFIG_DM_VERITY_VERIFY_ROOTHASH_SIG is not set
# CONFIG_DM_VERITY_FEC is not set
CONFIG_DM_SWITCH=m
CONFIG_DM_LOG_WRITES=m
CONFIG_DM_INTEGRITY=m
CONFIG_DM_AUDIT=y
# CONFIG_TARGET_CORE is not set
# CONFIG_FUSION is not set

#
# IEEE 1394 (FireWire) support
#
CONFIG_FIREWIRE=m
CONFIG_FIREWIRE_OHCI=m
CONFIG_FIREWIRE_SBP2=m
CONFIG_FIREWIRE_NET=m
# CONFIG_FIREWIRE_NOSY is not set
# end of IEEE 1394 (FireWire) support

CONFIG_MACINTOSH_DRIVERS=y
CONFIG_MAC_EMUMOUSEBTN=y
CONFIG_NETDEVICES=y
CONFIG_MII=y
CONFIG_NET_CORE=y
# CONFIG_BONDING is not set
CONFIG_DUMMY=m
# CONFIG_WIREGUARD is not set
# CONFIG_EQUALIZER is not set
# CONFIG_NET_FC is not set
CONFIG_IFB=m
# CONFIG_NET_TEAM is not set
# CONFIG_MACVLAN is not set
# CONFIG_IPVLAN is not set
CONFIG_VXLAN=m
# CONFIG_GENEVE is not set
CONFIG_BAREUDP=m
# CONFIG_GTP is not set
CONFIG_AMT=m
CONFIG_MACSEC=y
CONFIG_NETCONSOLE=m
CONFIG_NETCONSOLE_DYNAMIC=y
CONFIG_NETPOLL=y
CONFIG_NET_POLL_CONTROLLER=y
CONFIG_TUN=m
# CONFIG_TUN_VNET_CROSS_LE is not set
CONFIG_VETH=m
CONFIG_VIRTIO_NET=m
# CONFIG_NLMON is not set
CONFIG_NET_VRF=y
# CONFIG_VSOCKMON is not set
# CONFIG_ARCNET is not set
CONFIG_ETHERNET=y
CONFIG_MDIO=y
# CONFIG_NET_VENDOR_3COM is not set
CONFIG_NET_VENDOR_ADAPTEC=y
# CONFIG_ADAPTEC_STARFIRE is not set
CONFIG_NET_VENDOR_AGERE=y
# CONFIG_ET131X is not set
CONFIG_NET_VENDOR_ALACRITECH=y
# CONFIG_SLICOSS is not set
CONFIG_NET_VENDOR_ALTEON=y
# CONFIG_ACENIC is not set
# CONFIG_ALTERA_TSE is not set
CONFIG_NET_VENDOR_AMAZON=y
# CONFIG_ENA_ETHERNET is not set
# CONFIG_NET_VENDOR_AMD is not set
CONFIG_NET_VENDOR_AQUANTIA=y
# CONFIG_AQTION is not set
CONFIG_NET_VENDOR_ARC=y
CONFIG_NET_VENDOR_ASIX=y
# CONFIG_SPI_AX88796C is not set
CONFIG_NET_VENDOR_ATHEROS=y
# CONFIG_ATL2 is not set
# CONFIG_ATL1 is not set
# CONFIG_ATL1E is not set
# CONFIG_ATL1C is not set
# CONFIG_ALX is not set
# CONFIG_CX_ECAT is not set
CONFIG_NET_VENDOR_BROADCOM=y
# CONFIG_B44 is not set
# CONFIG_BCMGENET is not set
# CONFIG_BNX2 is not set
# CONFIG_CNIC is not set
# CONFIG_TIGON3 is not set
# CONFIG_BNX2X is not set
# CONFIG_SYSTEMPORT is not set
# CONFIG_BNXT is not set
CONFIG_NET_VENDOR_CADENCE=y
# CONFIG_MACB is not set
CONFIG_NET_VENDOR_CAVIUM=y
# CONFIG_THUNDER_NIC_PF is not set
# CONFIG_THUNDER_NIC_VF is not set
# CONFIG_THUNDER_NIC_BGX is not set
# CONFIG_THUNDER_NIC_RGX is not set
CONFIG_CAVIUM_PTP=y
# CONFIG_LIQUIDIO is not set
# CONFIG_LIQUIDIO_VF is not set
CONFIG_NET_VENDOR_CHELSIO=y
# CONFIG_CHELSIO_T1 is not set
# CONFIG_CHELSIO_T3 is not set
# CONFIG_CHELSIO_T4 is not set
# CONFIG_CHELSIO_T4VF is not set
CONFIG_NET_VENDOR_CISCO=y
# CONFIG_ENIC is not set
CONFIG_NET_VENDOR_CORTINA=y
CONFIG_NET_VENDOR_DAVICOM=y
# CONFIG_DM9051 is not set
# CONFIG_DNET is not set
CONFIG_NET_VENDOR_DEC=y
# CONFIG_NET_TULIP is not set
CONFIG_NET_VENDOR_DLINK=y
# CONFIG_DL2K is not set
# CONFIG_SUNDANCE is not set
CONFIG_NET_VENDOR_EMULEX=y
# CONFIG_BE2NET is not set
CONFIG_NET_VENDOR_ENGLEDER=y
# CONFIG_TSNEP is not set
CONFIG_NET_VENDOR_EZCHIP=y
CONFIG_NET_VENDOR_FUNGIBLE=y
# CONFIG_FUN_ETH is not set
CONFIG_NET_VENDOR_GOOGLE=y
# CONFIG_GVE is not set
CONFIG_NET_VENDOR_HUAWEI=y
# CONFIG_HINIC is not set
CONFIG_NET_VENDOR_I825XX=y
CONFIG_NET_VENDOR_INTEL=y
# CONFIG_E100 is not set
CONFIG_E1000=y
CONFIG_E1000E=y
CONFIG_E1000E_HWTS=y
CONFIG_IGB=y
CONFIG_IGB_HWMON=y
# CONFIG_IGBVF is not set
CONFIG_IXGBE=y
CONFIG_IXGBE_HWMON=y
# CONFIG_IXGBE_DCB is not set
# CONFIG_IXGBE_IPSEC is not set
# CONFIG_IXGBEVF is not set
CONFIG_I40E=y
# CONFIG_I40E_DCB is not set
# CONFIG_I40EVF is not set
# CONFIG_ICE is not set
# CONFIG_FM10K is not set
CONFIG_IGC=y
# CONFIG_JME is not set
CONFIG_NET_VENDOR_ADI=y
# CONFIG_ADIN1110 is not set
CONFIG_NET_VENDOR_LITEX=y
CONFIG_NET_VENDOR_MARVELL=y
# CONFIG_MVMDIO is not set
# CONFIG_SKGE is not set
# CONFIG_SKY2 is not set
# CONFIG_OCTEON_EP is not set
# CONFIG_PRESTERA is not set
CONFIG_NET_VENDOR_MELLANOX=y
# CONFIG_MLX4_EN is not set
# CONFIG_MLX5_CORE is not set
# CONFIG_MLXSW_CORE is not set
# CONFIG_MLXFW is not set
CONFIG_NET_VENDOR_MICREL=y
# CONFIG_KS8842 is not set
# CONFIG_KS8851 is not set
# CONFIG_KS8851_MLL is not set
# CONFIG_KSZ884X_PCI is not set
CONFIG_NET_VENDOR_MICROCHIP=y
# CONFIG_ENC28J60 is not set
# CONFIG_ENCX24J600 is not set
# CONFIG_LAN743X is not set
# CONFIG_VCAP is not set
CONFIG_NET_VENDOR_MICROSEMI=y
CONFIG_NET_VENDOR_MICROSOFT=y
# CONFIG_MICROSOFT_MANA is not set
CONFIG_NET_VENDOR_MYRI=y
# CONFIG_MYRI10GE is not set
# CONFIG_FEALNX is not set
CONFIG_NET_VENDOR_NI=y
# CONFIG_NI_XGE_MANAGEMENT_ENET is not set
CONFIG_NET_VENDOR_NATSEMI=y
# CONFIG_NATSEMI is not set
# CONFIG_NS83820 is not set
CONFIG_NET_VENDOR_NETERION=y
# CONFIG_S2IO is not set
CONFIG_NET_VENDOR_NETRONOME=y
# CONFIG_NFP is not set
CONFIG_NET_VENDOR_8390=y
# CONFIG_NE2K_PCI is not set
CONFIG_NET_VENDOR_NVIDIA=y
# CONFIG_FORCEDETH is not set
CONFIG_NET_VENDOR_OKI=y
# CONFIG_ETHOC is not set
CONFIG_NET_VENDOR_PACKET_ENGINES=y
# CONFIG_HAMACHI is not set
# CONFIG_YELLOWFIN is not set
CONFIG_NET_VENDOR_PENSANDO=y
# CONFIG_IONIC is not set
CONFIG_NET_VENDOR_QLOGIC=y
# CONFIG_QLA3XXX is not set
# CONFIG_QLCNIC is not set
# CONFIG_NETXEN_NIC is not set
# CONFIG_QED is not set
CONFIG_NET_VENDOR_BROCADE=y
# CONFIG_BNA is not set
CONFIG_NET_VENDOR_QUALCOMM=y
# CONFIG_QCOM_EMAC is not set
# CONFIG_RMNET is not set
CONFIG_NET_VENDOR_RDC=y
# CONFIG_R6040 is not set
CONFIG_NET_VENDOR_REALTEK=y
# CONFIG_ATP is not set
# CONFIG_8139CP is not set
# CONFIG_8139TOO is not set
CONFIG_R8169=y
CONFIG_NET_VENDOR_RENESAS=y
CONFIG_NET_VENDOR_ROCKER=y
# CONFIG_ROCKER is not set
CONFIG_NET_VENDOR_SAMSUNG=y
# CONFIG_SXGBE_ETH is not set
CONFIG_NET_VENDOR_SEEQ=y
CONFIG_NET_VENDOR_SILAN=y
# CONFIG_SC92031 is not set
CONFIG_NET_VENDOR_SIS=y
# CONFIG_SIS900 is not set
# CONFIG_SIS190 is not set
CONFIG_NET_VENDOR_SOLARFLARE=y
# CONFIG_SFC is not set
# CONFIG_SFC_FALCON is not set
# CONFIG_SFC_SIENA is not set
CONFIG_NET_VENDOR_SMSC=y
# CONFIG_EPIC100 is not set
# CONFIG_SMSC911X is not set
# CONFIG_SMSC9420 is not set
CONFIG_NET_VENDOR_SOCIONEXT=y
CONFIG_NET_VENDOR_STMICRO=y
# CONFIG_STMMAC_ETH is not set
CONFIG_NET_VENDOR_SUN=y
# CONFIG_HAPPYMEAL is not set
# CONFIG_SUNGEM is not set
# CONFIG_CASSINI is not set
# CONFIG_NIU is not set
CONFIG_NET_VENDOR_SYNOPSYS=y
# CONFIG_DWC_XLGMAC is not set
CONFIG_NET_VENDOR_TEHUTI=y
# CONFIG_TEHUTI is not set
CONFIG_NET_VENDOR_TI=y
# CONFIG_TI_CPSW_PHY_SEL is not set
# CONFIG_TLAN is not set
CONFIG_NET_VENDOR_VERTEXCOM=y
# CONFIG_MSE102X is not set
CONFIG_NET_VENDOR_VIA=y
# CONFIG_VIA_RHINE is not set
# CONFIG_VIA_VELOCITY is not set
CONFIG_NET_VENDOR_WANGXUN=y
# CONFIG_NGBE is not set
# CONFIG_TXGBE is not set
CONFIG_NET_VENDOR_WIZNET=y
# CONFIG_WIZNET_W5100 is not set
# CONFIG_WIZNET_W5300 is not set
CONFIG_NET_VENDOR_XILINX=y
# CONFIG_XILINX_EMACLITE is not set
# CONFIG_XILINX_AXI_EMAC is not set
# CONFIG_XILINX_LL_TEMAC is not set
# CONFIG_FDDI is not set
# CONFIG_HIPPI is not set
# CONFIG_NET_SB1000 is not set
CONFIG_PHYLINK=y
CONFIG_PHYLIB=y
CONFIG_SWPHY=y
# CONFIG_LED_TRIGGER_PHY is not set
CONFIG_FIXED_PHY=y
# CONFIG_SFP is not set

#
# MII PHY device drivers
#
# CONFIG_AMD_PHY is not set
# CONFIG_ADIN_PHY is not set
# CONFIG_ADIN1100_PHY is not set
# CONFIG_AQUANTIA_PHY is not set
CONFIG_AX88796B_PHY=y
# CONFIG_BROADCOM_PHY is not set
# CONFIG_BCM54140_PHY is not set
# CONFIG_BCM7XXX_PHY is not set
# CONFIG_BCM84881_PHY is not set
# CONFIG_BCM87XX_PHY is not set
# CONFIG_CICADA_PHY is not set
# CONFIG_CORTINA_PHY is not set
# CONFIG_DAVICOM_PHY is not set
# CONFIG_ICPLUS_PHY is not set
# CONFIG_LXT_PHY is not set
# CONFIG_INTEL_XWAY_PHY is not set
# CONFIG_LSI_ET1011C_PHY is not set
# CONFIG_MARVELL_PHY is not set
# CONFIG_MARVELL_10G_PHY is not set
# CONFIG_MARVELL_88X2222_PHY is not set
# CONFIG_MAXLINEAR_GPHY is not set
# CONFIG_MEDIATEK_GE_PHY is not set
# CONFIG_MICREL_PHY is not set
# CONFIG_MICROCHIP_T1S_PHY is not set
# CONFIG_MICROCHIP_PHY is not set
# CONFIG_MICROCHIP_T1_PHY is not set
# CONFIG_MICROSEMI_PHY is not set
# CONFIG_MOTORCOMM_PHY is not set
# CONFIG_NATIONAL_PHY is not set
# CONFIG_NXP_CBTX_PHY is not set
# CONFIG_NXP_C45_TJA11XX_PHY is not set
# CONFIG_NXP_TJA11XX_PHY is not set
# CONFIG_NCN26000_PHY is not set
# CONFIG_QSEMI_PHY is not set
CONFIG_REALTEK_PHY=y
# CONFIG_RENESAS_PHY is not set
# CONFIG_ROCKCHIP_PHY is not set
# CONFIG_SMSC_PHY is not set
# CONFIG_STE10XP is not set
# CONFIG_TERANETICS_PHY is not set
# CONFIG_DP83822_PHY is not set
# CONFIG_DP83TC811_PHY is not set
# CONFIG_DP83848_PHY is not set
# CONFIG_DP83867_PHY is not set
# CONFIG_DP83869_PHY is not set
# CONFIG_DP83TD510_PHY is not set
# CONFIG_VITESSE_PHY is not set
# CONFIG_XILINX_GMII2RGMII is not set
# CONFIG_MICREL_KS8995MA is not set
# CONFIG_PSE_CONTROLLER is not set
# CONFIG_CAN_DEV is not set
CONFIG_MDIO_DEVICE=y
CONFIG_MDIO_BUS=y
CONFIG_FWNODE_MDIO=y
CONFIG_ACPI_MDIO=y
CONFIG_MDIO_DEVRES=y
# CONFIG_MDIO_BITBANG is not set
# CONFIG_MDIO_BCM_UNIMAC is not set
# CONFIG_MDIO_MVUSB is not set
# CONFIG_MDIO_THUNDER is not set

#
# MDIO Multiplexers
#

#
# PCS device drivers
#
# end of PCS device drivers

# CONFIG_PLIP is not set
# CONFIG_PPP is not set
# CONFIG_SLIP is not set
CONFIG_USB_NET_DRIVERS=y
# CONFIG_USB_CATC is not set
# CONFIG_USB_KAWETH is not set
# CONFIG_USB_PEGASUS is not set
# CONFIG_USB_RTL8150 is not set
CONFIG_USB_RTL8152=y
# CONFIG_USB_LAN78XX is not set
CONFIG_USB_USBNET=y
CONFIG_USB_NET_AX8817X=y
CONFIG_USB_NET_AX88179_178A=y
# CONFIG_USB_NET_CDCETHER is not set
# CONFIG_USB_NET_CDC_EEM is not set
# CONFIG_USB_NET_CDC_NCM is not set
# CONFIG_USB_NET_HUAWEI_CDC_NCM is not set
# CONFIG_USB_NET_CDC_MBIM is not set
# CONFIG_USB_NET_DM9601 is not set
# CONFIG_USB_NET_SR9700 is not set
# CONFIG_USB_NET_SR9800 is not set
# CONFIG_USB_NET_SMSC75XX is not set
# CONFIG_USB_NET_SMSC95XX is not set
# CONFIG_USB_NET_GL620A is not set
# CONFIG_USB_NET_NET1080 is not set
# CONFIG_USB_NET_PLUSB is not set
# CONFIG_USB_NET_MCS7830 is not set
# CONFIG_USB_NET_RNDIS_HOST is not set
# CONFIG_USB_NET_CDC_SUBSET is not set
# CONFIG_USB_NET_ZAURUS is not set
# CONFIG_USB_NET_CX82310_ETH is not set
# CONFIG_USB_NET_KALMIA is not set
# CONFIG_USB_NET_QMI_WWAN is not set
# CONFIG_USB_HSO is not set
# CONFIG_USB_NET_INT51X1 is not set
# CONFIG_USB_IPHETH is not set
# CONFIG_USB_SIERRA_NET is not set
# CONFIG_USB_NET_CH9200 is not set
# CONFIG_USB_NET_AQC111 is not set
# CONFIG_WLAN is not set
# CONFIG_WAN is not set

#
# Wireless WAN
#
# CONFIG_WWAN is not set
# end of Wireless WAN

# CONFIG_VMXNET3 is not set
# CONFIG_FUJITSU_ES is not set
CONFIG_HYPERV_NET=y
CONFIG_NETDEVSIM=m
CONFIG_NET_FAILOVER=m
# CONFIG_ISDN is not set

#
# Input device support
#
CONFIG_INPUT=y
CONFIG_INPUT_LEDS=y
CONFIG_INPUT_FF_MEMLESS=m
CONFIG_INPUT_SPARSEKMAP=m
# CONFIG_INPUT_MATRIXKMAP is not set
CONFIG_INPUT_VIVALDIFMAP=y

#
# Userland interfaces
#
CONFIG_INPUT_MOUSEDEV=y
# CONFIG_INPUT_MOUSEDEV_PSAUX is not set
CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
CONFIG_INPUT_JOYDEV=m
CONFIG_INPUT_EVDEV=y
# CONFIG_INPUT_EVBUG is not set

#
# Input Device Drivers
#
CONFIG_INPUT_KEYBOARD=y
# CONFIG_KEYBOARD_ADP5588 is not set
# CONFIG_KEYBOARD_ADP5589 is not set
# CONFIG_KEYBOARD_APPLESPI is not set
CONFIG_KEYBOARD_ATKBD=y
# CONFIG_KEYBOARD_QT1050 is not set
# CONFIG_KEYBOARD_QT1070 is not set
# CONFIG_KEYBOARD_QT2160 is not set
# CONFIG_KEYBOARD_DLINK_DIR685 is not set
# CONFIG_KEYBOARD_LKKBD is not set
# CONFIG_KEYBOARD_GPIO is not set
# CONFIG_KEYBOARD_GPIO_POLLED is not set
# CONFIG_KEYBOARD_TCA6416 is not set
# CONFIG_KEYBOARD_TCA8418 is not set
# CONFIG_KEYBOARD_MATRIX is not set
# CONFIG_KEYBOARD_LM8323 is not set
# CONFIG_KEYBOARD_LM8333 is not set
# CONFIG_KEYBOARD_MAX7359 is not set
# CONFIG_KEYBOARD_MCS is not set
# CONFIG_KEYBOARD_MPR121 is not set
# CONFIG_KEYBOARD_NEWTON is not set
# CONFIG_KEYBOARD_OPENCORES is not set
# CONFIG_KEYBOARD_SAMSUNG is not set
# CONFIG_KEYBOARD_STOWAWAY is not set
# CONFIG_KEYBOARD_SUNKBD is not set
# CONFIG_KEYBOARD_TM2_TOUCHKEY is not set
# CONFIG_KEYBOARD_XTKBD is not set
# CONFIG_KEYBOARD_CYPRESS_SF is not set
CONFIG_INPUT_MOUSE=y
CONFIG_MOUSE_PS2=y
CONFIG_MOUSE_PS2_ALPS=y
CONFIG_MOUSE_PS2_BYD=y
CONFIG_MOUSE_PS2_LOGIPS2PP=y
CONFIG_MOUSE_PS2_SYNAPTICS=y
CONFIG_MOUSE_PS2_SYNAPTICS_SMBUS=y
CONFIG_MOUSE_PS2_CYPRESS=y
CONFIG_MOUSE_PS2_LIFEBOOK=y
CONFIG_MOUSE_PS2_TRACKPOINT=y
CONFIG_MOUSE_PS2_ELANTECH=y
CONFIG_MOUSE_PS2_ELANTECH_SMBUS=y
CONFIG_MOUSE_PS2_SENTELIC=y
# CONFIG_MOUSE_PS2_TOUCHKIT is not set
CONFIG_MOUSE_PS2_FOCALTECH=y
CONFIG_MOUSE_PS2_VMMOUSE=y
CONFIG_MOUSE_PS2_SMBUS=y
CONFIG_MOUSE_SERIAL=m
# CONFIG_MOUSE_APPLETOUCH is not set
# CONFIG_MOUSE_BCM5974 is not set
CONFIG_MOUSE_CYAPA=m
CONFIG_MOUSE_ELAN_I2C=m
CONFIG_MOUSE_ELAN_I2C_I2C=y
CONFIG_MOUSE_ELAN_I2C_SMBUS=y
CONFIG_MOUSE_VSXXXAA=m
# CONFIG_MOUSE_GPIO is not set
CONFIG_MOUSE_SYNAPTICS_I2C=m
# CONFIG_MOUSE_SYNAPTICS_USB is not set
# CONFIG_INPUT_JOYSTICK is not set
# CONFIG_INPUT_TABLET is not set
# CONFIG_INPUT_TOUCHSCREEN is not set
# CONFIG_INPUT_MISC is not set
CONFIG_RMI4_CORE=m
CONFIG_RMI4_I2C=m
CONFIG_RMI4_SPI=m
CONFIG_RMI4_SMB=m
CONFIG_RMI4_F03=y
CONFIG_RMI4_F03_SERIO=m
CONFIG_RMI4_2D_SENSOR=y
CONFIG_RMI4_F11=y
CONFIG_RMI4_F12=y
CONFIG_RMI4_F30=y
CONFIG_RMI4_F34=y
# CONFIG_RMI4_F3A is not set
CONFIG_RMI4_F55=y

#
# Hardware I/O ports
#
CONFIG_SERIO=y
CONFIG_ARCH_MIGHT_HAVE_PC_SERIO=y
CONFIG_SERIO_I8042=y
CONFIG_SERIO_SERPORT=y
# CONFIG_SERIO_CT82C710 is not set
# CONFIG_SERIO_PARKBD is not set
# CONFIG_SERIO_PCIPS2 is not set
CONFIG_SERIO_LIBPS2=y
CONFIG_SERIO_RAW=m
CONFIG_SERIO_ALTERA_PS2=m
# CONFIG_SERIO_PS2MULT is not set
CONFIG_SERIO_ARC_PS2=m
CONFIG_HYPERV_KEYBOARD=m
# CONFIG_SERIO_GPIO_PS2 is not set
# CONFIG_USERIO is not set
# CONFIG_GAMEPORT is not set
# end of Hardware I/O ports
# end of Input device support

#
# Character devices
#
CONFIG_TTY=y
CONFIG_VT=y
CONFIG_CONSOLE_TRANSLATIONS=y
CONFIG_VT_CONSOLE=y
CONFIG_VT_CONSOLE_SLEEP=y
CONFIG_HW_CONSOLE=y
CONFIG_VT_HW_CONSOLE_BINDING=y
CONFIG_UNIX98_PTYS=y
# CONFIG_LEGACY_PTYS is not set
CONFIG_LEGACY_TIOCSTI=y
CONFIG_LDISC_AUTOLOAD=y

#
# Serial drivers
#
CONFIG_SERIAL_EARLYCON=y
CONFIG_SERIAL_8250=y
# CONFIG_SERIAL_8250_DEPRECATED_OPTIONS is not set
CONFIG_SERIAL_8250_PNP=y
# CONFIG_SERIAL_8250_16550A_VARIANTS is not set
# CONFIG_SERIAL_8250_FINTEK is not set
CONFIG_SERIAL_8250_CONSOLE=y
CONFIG_SERIAL_8250_DMA=y
CONFIG_SERIAL_8250_PCILIB=y
CONFIG_SERIAL_8250_PCI=y
CONFIG_SERIAL_8250_EXAR=y
CONFIG_SERIAL_8250_NR_UARTS=64
CONFIG_SERIAL_8250_RUNTIME_UARTS=4
CONFIG_SERIAL_8250_EXTENDED=y
CONFIG_SERIAL_8250_MANY_PORTS=y
# CONFIG_SERIAL_8250_PCI1XXXX is not set
CONFIG_SERIAL_8250_SHARE_IRQ=y
# CONFIG_SERIAL_8250_DETECT_IRQ is not set
CONFIG_SERIAL_8250_RSA=y
CONFIG_SERIAL_8250_DWLIB=y
CONFIG_SERIAL_8250_DW=y
# CONFIG_SERIAL_8250_RT288X is not set
CONFIG_SERIAL_8250_LPSS=y
CONFIG_SERIAL_8250_MID=y
CONFIG_SERIAL_8250_PERICOM=y

#
# Non-8250 serial port support
#
# CONFIG_SERIAL_MAX3100 is not set
# CONFIG_SERIAL_MAX310X is not set
# CONFIG_SERIAL_UARTLITE is not set
CONFIG_SERIAL_CORE=y
CONFIG_SERIAL_CORE_CONSOLE=y
# CONFIG_SERIAL_JSM is not set
# CONFIG_SERIAL_LANTIQ is not set
# CONFIG_SERIAL_SCCNXP is not set
# CONFIG_SERIAL_SC16IS7XX is not set
# CONFIG_SERIAL_ALTERA_JTAGUART is not set
# CONFIG_SERIAL_ALTERA_UART is not set
CONFIG_SERIAL_ARC=m
CONFIG_SERIAL_ARC_NR_PORTS=1
# CONFIG_SERIAL_RP2 is not set
# CONFIG_SERIAL_FSL_LPUART is not set
# CONFIG_SERIAL_FSL_LINFLEXUART is not set
# CONFIG_SERIAL_SPRD is not set
# end of Serial drivers

CONFIG_SERIAL_MCTRL_GPIO=y
CONFIG_SERIAL_NONSTANDARD=y
# CONFIG_MOXA_INTELLIO is not set
# CONFIG_MOXA_SMARTIO is not set
CONFIG_SYNCLINK_GT=m
CONFIG_N_HDLC=m
CONFIG_N_GSM=m
CONFIG_NOZOMI=m
# CONFIG_NULL_TTY is not set
CONFIG_HVC_DRIVER=y
# CONFIG_SERIAL_DEV_BUS is not set
# CONFIG_TTY_PRINTK is not set
CONFIG_PRINTER=m
# CONFIG_LP_CONSOLE is not set
CONFIG_PPDEV=m
CONFIG_VIRTIO_CONSOLE=m
CONFIG_IPMI_HANDLER=m
CONFIG_IPMI_DMI_DECODE=y
CONFIG_IPMI_PLAT_DATA=y
CONFIG_IPMI_PANIC_EVENT=y
CONFIG_IPMI_PANIC_STRING=y
CONFIG_IPMI_DEVICE_INTERFACE=m
CONFIG_IPMI_SI=m
CONFIG_IPMI_SSIF=m
CONFIG_IPMI_WATCHDOG=m
CONFIG_IPMI_POWEROFF=m
CONFIG_HW_RANDOM=y
CONFIG_HW_RANDOM_TIMERIOMEM=m
CONFIG_HW_RANDOM_INTEL=m
# CONFIG_HW_RANDOM_AMD is not set
# CONFIG_HW_RANDOM_BA431 is not set
CONFIG_HW_RANDOM_VIA=m
CONFIG_HW_RANDOM_VIRTIO=y
# CONFIG_HW_RANDOM_XIPHERA is not set
# CONFIG_APPLICOM is not set
# CONFIG_MWAVE is not set
CONFIG_DEVMEM=y
CONFIG_NVRAM=y
CONFIG_DEVPORT=y
CONFIG_HPET=y
CONFIG_HPET_MMAP=y
# CONFIG_HPET_MMAP_DEFAULT is not set
CONFIG_HANGCHECK_TIMER=m
CONFIG_UV_MMTIMER=m
CONFIG_TCG_TPM=y
CONFIG_HW_RANDOM_TPM=y
CONFIG_TCG_TIS_CORE=y
CONFIG_TCG_TIS=y
# CONFIG_TCG_TIS_SPI is not set
# CONFIG_TCG_TIS_I2C is not set
# CONFIG_TCG_TIS_I2C_CR50 is not set
CONFIG_TCG_TIS_I2C_ATMEL=m
CONFIG_TCG_TIS_I2C_INFINEON=m
CONFIG_TCG_TIS_I2C_NUVOTON=m
CONFIG_TCG_NSC=m
CONFIG_TCG_ATMEL=m
CONFIG_TCG_INFINEON=m
CONFIG_TCG_CRB=y
# CONFIG_TCG_VTPM_PROXY is not set
# CONFIG_TCG_TIS_ST33ZP24_I2C is not set
# CONFIG_TCG_TIS_ST33ZP24_SPI is not set
CONFIG_TELCLOCK=m
# CONFIG_XILLYBUS is not set
# CONFIG_XILLYUSB is not set
# end of Character devices

#
# I2C support
#
CONFIG_I2C=y
CONFIG_ACPI_I2C_OPREGION=y
CONFIG_I2C_BOARDINFO=y
CONFIG_I2C_COMPAT=y
CONFIG_I2C_CHARDEV=m
CONFIG_I2C_MUX=m

#
# Multiplexer I2C Chip support
#
# CONFIG_I2C_MUX_GPIO is not set
# CONFIG_I2C_MUX_LTC4306 is not set
# CONFIG_I2C_MUX_PCA9541 is not set
# CONFIG_I2C_MUX_PCA954x is not set
# CONFIG_I2C_MUX_REG is not set
CONFIG_I2C_MUX_MLXCPLD=m
# end of Multiplexer I2C Chip support

CONFIG_I2C_HELPER_AUTO=y
CONFIG_I2C_SMBUS=m
CONFIG_I2C_ALGOBIT=y
CONFIG_I2C_ALGOPCA=m

#
# I2C Hardware Bus support
#

#
# PC SMBus host controller drivers
#
# CONFIG_I2C_ALI1535 is not set
# CONFIG_I2C_ALI1563 is not set
# CONFIG_I2C_ALI15X3 is not set
# CONFIG_I2C_AMD756 is not set
# CONFIG_I2C_AMD8111 is not set
# CONFIG_I2C_AMD_MP2 is not set
CONFIG_I2C_I801=m
CONFIG_I2C_ISCH=m
CONFIG_I2C_ISMT=m
CONFIG_I2C_PIIX4=m
CONFIG_I2C_NFORCE2=m
CONFIG_I2C_NFORCE2_S4985=m
# CONFIG_I2C_NVIDIA_GPU is not set
# CONFIG_I2C_SIS5595 is not set
# CONFIG_I2C_SIS630 is not set
CONFIG_I2C_SIS96X=m
CONFIG_I2C_VIA=m
CONFIG_I2C_VIAPRO=m

#
# ACPI drivers
#
CONFIG_I2C_SCMI=m

#
# I2C system bus drivers (mostly embedded / system-on-chip)
#
# CONFIG_I2C_CBUS_GPIO is not set
CONFIG_I2C_DESIGNWARE_CORE=m
# CONFIG_I2C_DESIGNWARE_SLAVE is not set
CONFIG_I2C_DESIGNWARE_PLATFORM=m
CONFIG_I2C_DESIGNWARE_BAYTRAIL=y
# CONFIG_I2C_DESIGNWARE_PCI is not set
# CONFIG_I2C_EMEV2 is not set
# CONFIG_I2C_GPIO is not set
# CONFIG_I2C_OCORES is not set
CONFIG_I2C_PCA_PLATFORM=m
CONFIG_I2C_SIMTEC=m
# CONFIG_I2C_XILINX is not set

#
# External I2C/SMBus adapter drivers
#
# CONFIG_I2C_DIOLAN_U2C is not set
# CONFIG_I2C_CP2615 is not set
CONFIG_I2C_PARPORT=m
# CONFIG_I2C_PCI1XXXX is not set
# CONFIG_I2C_ROBOTFUZZ_OSIF is not set
# CONFIG_I2C_TAOS_EVM is not set
# CONFIG_I2C_TINY_USB is not set

#
# Other I2C/SMBus bus drivers
#
CONFIG_I2C_MLXCPLD=m
# CONFIG_I2C_VIRTIO is not set
# end of I2C Hardware Bus support

CONFIG_I2C_STUB=m
# CONFIG_I2C_SLAVE is not set
# CONFIG_I2C_DEBUG_CORE is not set
# CONFIG_I2C_DEBUG_ALGO is not set
# CONFIG_I2C_DEBUG_BUS is not set
# end of I2C support

# CONFIG_I3C is not set
CONFIG_SPI=y
# CONFIG_SPI_DEBUG is not set
CONFIG_SPI_MASTER=y
# CONFIG_SPI_MEM is not set

#
# SPI Master Controller Drivers
#
# CONFIG_SPI_ALTERA is not set
# CONFIG_SPI_AXI_SPI_ENGINE is not set
# CONFIG_SPI_BITBANG is not set
# CONFIG_SPI_BUTTERFLY is not set
# CONFIG_SPI_CADENCE is not set
# CONFIG_SPI_DESIGNWARE is not set
# CONFIG_SPI_GPIO is not set
# CONFIG_SPI_LM70_LLP is not set
# CONFIG_SPI_MICROCHIP_CORE is not set
# CONFIG_SPI_MICROCHIP_CORE_QSPI is not set
# CONFIG_SPI_LANTIQ_SSC is not set
# CONFIG_SPI_OC_TINY is not set
# CONFIG_SPI_PCI1XXXX is not set
# CONFIG_SPI_PXA2XX is not set
# CONFIG_SPI_SC18IS602 is not set
# CONFIG_SPI_SIFIVE is not set
# CONFIG_SPI_MXIC is not set
# CONFIG_SPI_XCOMM is not set
# CONFIG_SPI_XILINX is not set
# CONFIG_SPI_ZYNQMP_GQSPI is not set
# CONFIG_SPI_AMD is not set

#
# SPI Multiplexer support
#
# CONFIG_SPI_MUX is not set

#
# SPI Protocol Masters
#
# CONFIG_SPI_SPIDEV is not set
# CONFIG_SPI_LOOPBACK_TEST is not set
# CONFIG_SPI_TLE62X0 is not set
# CONFIG_SPI_SLAVE is not set
CONFIG_SPI_DYNAMIC=y
# CONFIG_SPMI is not set
# CONFIG_HSI is not set
CONFIG_PPS=y
# CONFIG_PPS_DEBUG is not set

#
# PPS clients support
#
# CONFIG_PPS_CLIENT_KTIMER is not set
CONFIG_PPS_CLIENT_LDISC=m
CONFIG_PPS_CLIENT_PARPORT=m
CONFIG_PPS_CLIENT_GPIO=m

#
# PPS generators support
#

#
# PTP clock support
#
CONFIG_PTP_1588_CLOCK=y
CONFIG_PTP_1588_CLOCK_OPTIONAL=y
# CONFIG_DP83640_PHY is not set
# CONFIG_PTP_1588_CLOCK_INES is not set
CONFIG_PTP_1588_CLOCK_KVM=m
# CONFIG_PTP_1588_CLOCK_IDT82P33 is not set
# CONFIG_PTP_1588_CLOCK_IDTCM is not set
# CONFIG_PTP_1588_CLOCK_VMW is not set
# end of PTP clock support

CONFIG_PINCTRL=y
# CONFIG_DEBUG_PINCTRL is not set
# CONFIG_PINCTRL_AMD is not set
# CONFIG_PINCTRL_CY8C95X0 is not set
# CONFIG_PINCTRL_MCP23S08 is not set
# CONFIG_PINCTRL_SX150X is not set

#
# Intel pinctrl drivers
#
# CONFIG_PINCTRL_BAYTRAIL is not set
# CONFIG_PINCTRL_CHERRYVIEW is not set
# CONFIG_PINCTRL_LYNXPOINT is not set
# CONFIG_PINCTRL_ALDERLAKE is not set
# CONFIG_PINCTRL_BROXTON is not set
# CONFIG_PINCTRL_CANNONLAKE is not set
# CONFIG_PINCTRL_CEDARFORK is not set
# CONFIG_PINCTRL_DENVERTON is not set
# CONFIG_PINCTRL_ELKHARTLAKE is not set
# CONFIG_PINCTRL_EMMITSBURG is not set
# CONFIG_PINCTRL_GEMINILAKE is not set
# CONFIG_PINCTRL_ICELAKE is not set
# CONFIG_PINCTRL_JASPERLAKE is not set
# CONFIG_PINCTRL_LAKEFIELD is not set
# CONFIG_PINCTRL_LEWISBURG is not set
# CONFIG_PINCTRL_METEORLAKE is not set
# CONFIG_PINCTRL_SUNRISEPOINT is not set
# CONFIG_PINCTRL_TIGERLAKE is not set
# end of Intel pinctrl drivers

#
# Renesas pinctrl drivers
#
# end of Renesas pinctrl drivers

CONFIG_GPIOLIB=y
CONFIG_GPIOLIB_FASTPATH_LIMIT=512
CONFIG_GPIO_ACPI=y
# CONFIG_DEBUG_GPIO is not set
CONFIG_GPIO_SYSFS=y
CONFIG_GPIO_CDEV=y
CONFIG_GPIO_CDEV_V1=y

#
# Memory mapped GPIO drivers
#
# CONFIG_GPIO_AMDPT is not set
# CONFIG_GPIO_DWAPB is not set
# CONFIG_GPIO_EXAR is not set
# CONFIG_GPIO_GENERIC_PLATFORM is not set
CONFIG_GPIO_ICH=m
# CONFIG_GPIO_MB86S7X is not set
# CONFIG_GPIO_VX855 is not set
# CONFIG_GPIO_AMD_FCH is not set
# end of Memory mapped GPIO drivers

#
# Port-mapped I/O GPIO drivers
#
# CONFIG_GPIO_F7188X is not set
# CONFIG_GPIO_IT87 is not set
# CONFIG_GPIO_SCH is not set
# CONFIG_GPIO_SCH311X is not set
# CONFIG_GPIO_WINBOND is not set
# CONFIG_GPIO_WS16C48 is not set
# end of Port-mapped I/O GPIO drivers

#
# I2C GPIO expanders
#
# CONFIG_GPIO_FXL6408 is not set
# CONFIG_GPIO_MAX7300 is not set
# CONFIG_GPIO_MAX732X is not set
# CONFIG_GPIO_PCA953X is not set
# CONFIG_GPIO_PCA9570 is not set
# CONFIG_GPIO_PCF857X is not set
# CONFIG_GPIO_TPIC2810 is not set
# end of I2C GPIO expanders

#
# MFD GPIO expanders
#
# CONFIG_GPIO_ELKHARTLAKE is not set
# end of MFD GPIO expanders

#
# PCI GPIO expanders
#
# CONFIG_GPIO_AMD8111 is not set
# CONFIG_GPIO_BT8XX is not set
# CONFIG_GPIO_ML_IOH is not set
# CONFIG_GPIO_PCI_IDIO_16 is not set
# CONFIG_GPIO_PCIE_IDIO_24 is not set
# CONFIG_GPIO_RDC321X is not set
# end of PCI GPIO expanders

#
# SPI GPIO expanders
#
# CONFIG_GPIO_MAX3191X is not set
# CONFIG_GPIO_MAX7301 is not set
# CONFIG_GPIO_MC33880 is not set
# CONFIG_GPIO_PISOSR is not set
# CONFIG_GPIO_XRA1403 is not set
# end of SPI GPIO expanders

#
# USB GPIO expanders
#
# end of USB GPIO expanders

#
# Virtual GPIO drivers
#
# CONFIG_GPIO_AGGREGATOR is not set
# CONFIG_GPIO_LATCH is not set
CONFIG_GPIO_MOCKUP=m
# CONFIG_GPIO_VIRTIO is not set
CONFIG_GPIO_SIM=m
# end of Virtual GPIO drivers

# CONFIG_W1 is not set
CONFIG_POWER_RESET=y
# CONFIG_POWER_RESET_RESTART is not set
CONFIG_POWER_SUPPLY=y
# CONFIG_POWER_SUPPLY_DEBUG is not set
CONFIG_POWER_SUPPLY_HWMON=y
# CONFIG_IP5XXX_POWER is not set
# CONFIG_TEST_POWER is not set
# CONFIG_CHARGER_ADP5061 is not set
# CONFIG_BATTERY_CW2015 is not set
# CONFIG_BATTERY_DS2780 is not set
# CONFIG_BATTERY_DS2781 is not set
# CONFIG_BATTERY_DS2782 is not set
# CONFIG_BATTERY_SAMSUNG_SDI is not set
# CONFIG_BATTERY_SBS is not set
# CONFIG_CHARGER_SBS is not set
# CONFIG_MANAGER_SBS is not set
# CONFIG_BATTERY_BQ27XXX is not set
# CONFIG_BATTERY_MAX17040 is not set
# CONFIG_BATTERY_MAX17042 is not set
# CONFIG_CHARGER_MAX8903 is not set
# CONFIG_CHARGER_LP8727 is not set
# CONFIG_CHARGER_GPIO is not set
# CONFIG_CHARGER_LT3651 is not set
# CONFIG_CHARGER_LTC4162L is not set
# CONFIG_CHARGER_MAX77976 is not set
# CONFIG_CHARGER_BQ2415X is not set
# CONFIG_CHARGER_BQ24257 is not set
# CONFIG_CHARGER_BQ24735 is not set
# CONFIG_CHARGER_BQ2515X is not set
# CONFIG_CHARGER_BQ25890 is not set
# CONFIG_CHARGER_BQ25980 is not set
# CONFIG_CHARGER_BQ256XX is not set
# CONFIG_BATTERY_GAUGE_LTC2941 is not set
# CONFIG_BATTERY_GOLDFISH is not set
# CONFIG_BATTERY_RT5033 is not set
# CONFIG_CHARGER_RT9455 is not set
# CONFIG_CHARGER_BD99954 is not set
# CONFIG_BATTERY_UG3105 is not set
CONFIG_HWMON=y
CONFIG_HWMON_VID=m
# CONFIG_HWMON_DEBUG_CHIP is not set

#
# Native drivers
#
CONFIG_SENSORS_ABITUGURU=m
CONFIG_SENSORS_ABITUGURU3=m
# CONFIG_SENSORS_AD7314 is not set
CONFIG_SENSORS_AD7414=m
CONFIG_SENSORS_AD7418=m
CONFIG_SENSORS_ADM1025=m
CONFIG_SENSORS_ADM1026=m
CONFIG_SENSORS_ADM1029=m
CONFIG_SENSORS_ADM1031=m
# CONFIG_SENSORS_ADM1177 is not set
CONFIG_SENSORS_ADM9240=m
CONFIG_SENSORS_ADT7X10=m
# CONFIG_SENSORS_ADT7310 is not set
CONFIG_SENSORS_ADT7410=m
CONFIG_SENSORS_ADT7411=m
CONFIG_SENSORS_ADT7462=m
CONFIG_SENSORS_ADT7470=m
CONFIG_SENSORS_ADT7475=m
# CONFIG_SENSORS_AHT10 is not set
# CONFIG_SENSORS_AQUACOMPUTER_D5NEXT is not set
# CONFIG_SENSORS_AS370 is not set
CONFIG_SENSORS_ASC7621=m
# CONFIG_SENSORS_AXI_FAN_CONTROL is not set
CONFIG_SENSORS_K8TEMP=m
CONFIG_SENSORS_APPLESMC=m
CONFIG_SENSORS_ASB100=m
CONFIG_SENSORS_ATXP1=m
# CONFIG_SENSORS_CORSAIR_CPRO is not set
# CONFIG_SENSORS_CORSAIR_PSU is not set
# CONFIG_SENSORS_DRIVETEMP is not set
CONFIG_SENSORS_DS620=m
CONFIG_SENSORS_DS1621=m
# CONFIG_SENSORS_DELL_SMM is not set
CONFIG_SENSORS_I5K_AMB=m
CONFIG_SENSORS_F71805F=m
CONFIG_SENSORS_F71882FG=m
CONFIG_SENSORS_F75375S=m
CONFIG_SENSORS_FSCHMD=m
# CONFIG_SENSORS_FTSTEUTATES is not set
CONFIG_SENSORS_GL518SM=m
CONFIG_SENSORS_GL520SM=m
CONFIG_SENSORS_G760A=m
# CONFIG_SENSORS_G762 is not set
# CONFIG_SENSORS_HIH6130 is not set
CONFIG_SENSORS_IBMAEM=m
CONFIG_SENSORS_IBMPEX=m
CONFIG_SENSORS_I5500=m
CONFIG_SENSORS_CORETEMP=m
CONFIG_SENSORS_IT87=m
CONFIG_SENSORS_JC42=m
# CONFIG_SENSORS_POWR1220 is not set
CONFIG_SENSORS_LINEAGE=m
# CONFIG_SENSORS_LTC2945 is not set
# CONFIG_SENSORS_LTC2947_I2C is not set
# CONFIG_SENSORS_LTC2947_SPI is not set
# CONFIG_SENSORS_LTC2990 is not set
# CONFIG_SENSORS_LTC2992 is not set
CONFIG_SENSORS_LTC4151=m
CONFIG_SENSORS_LTC4215=m
# CONFIG_SENSORS_LTC4222 is not set
CONFIG_SENSORS_LTC4245=m
# CONFIG_SENSORS_LTC4260 is not set
CONFIG_SENSORS_LTC4261=m
# CONFIG_SENSORS_MAX1111 is not set
# CONFIG_SENSORS_MAX127 is not set
CONFIG_SENSORS_MAX16065=m
CONFIG_SENSORS_MAX1619=m
CONFIG_SENSORS_MAX1668=m
CONFIG_SENSORS_MAX197=m
# CONFIG_SENSORS_MAX31722 is not set
# CONFIG_SENSORS_MAX31730 is not set
# CONFIG_SENSORS_MAX31760 is not set
# CONFIG_SENSORS_MAX6620 is not set
# CONFIG_SENSORS_MAX6621 is not set
CONFIG_SENSORS_MAX6639=m
CONFIG_SENSORS_MAX6650=m
CONFIG_SENSORS_MAX6697=m
# CONFIG_SENSORS_MAX31790 is not set
# CONFIG_SENSORS_MC34VR500 is not set
CONFIG_SENSORS_MCP3021=m
# CONFIG_SENSORS_TC654 is not set
# CONFIG_SENSORS_TPS23861 is not set
# CONFIG_SENSORS_MR75203 is not set
# CONFIG_SENSORS_ADCXX is not set
CONFIG_SENSORS_LM63=m
# CONFIG_SENSORS_LM70 is not set
CONFIG_SENSORS_LM73=m
CONFIG_SENSORS_LM75=m
CONFIG_SENSORS_LM77=m
CONFIG_SENSORS_LM78=m
CONFIG_SENSORS_LM80=m
CONFIG_SENSORS_LM83=m
CONFIG_SENSORS_LM85=m
CONFIG_SENSORS_LM87=m
CONFIG_SENSORS_LM90=m
CONFIG_SENSORS_LM92=m
CONFIG_SENSORS_LM93=m
CONFIG_SENSORS_LM95234=m
CONFIG_SENSORS_LM95241=m
CONFIG_SENSORS_LM95245=m
CONFIG_SENSORS_PC87360=m
CONFIG_SENSORS_PC87427=m
# CONFIG_SENSORS_NCT6683 is not set
CONFIG_SENSORS_NCT6775_CORE=m
CONFIG_SENSORS_NCT6775=m
# CONFIG_SENSORS_NCT6775_I2C is not set
# CONFIG_SENSORS_NCT7802 is not set
# CONFIG_SENSORS_NCT7904 is not set
# CONFIG_SENSORS_NPCM7XX is not set
# CONFIG_SENSORS_NZXT_KRAKEN2 is not set
# CONFIG_SENSORS_NZXT_SMART2 is not set
# CONFIG_SENSORS_OCC_P8_I2C is not set
# CONFIG_SENSORS_OXP is not set
CONFIG_SENSORS_PCF8591=m
# CONFIG_PMBUS is not set
# CONFIG_SENSORS_SBTSI is not set
# CONFIG_SENSORS_SBRMI is not set
CONFIG_SENSORS_SHT15=m
CONFIG_SENSORS_SHT21=m
# CONFIG_SENSORS_SHT3x is not set
# CONFIG_SENSORS_SHT4x is not set
# CONFIG_SENSORS_SHTC1 is not set
CONFIG_SENSORS_SIS5595=m
CONFIG_SENSORS_DME1737=m
CONFIG_SENSORS_EMC1403=m
# CONFIG_SENSORS_EMC2103 is not set
# CONFIG_SENSORS_EMC2305 is not set
CONFIG_SENSORS_EMC6W201=m
CONFIG_SENSORS_SMSC47M1=m
CONFIG_SENSORS_SMSC47M192=m
CONFIG_SENSORS_SMSC47B397=m
CONFIG_SENSORS_SCH56XX_COMMON=m
CONFIG_SENSORS_SCH5627=m
CONFIG_SENSORS_SCH5636=m
# CONFIG_SENSORS_STTS751 is not set
# CONFIG_SENSORS_SMM665 is not set
# CONFIG_SENSORS_ADC128D818 is not set
CONFIG_SENSORS_ADS7828=m
# CONFIG_SENSORS_ADS7871 is not set
CONFIG_SENSORS_AMC6821=m
CONFIG_SENSORS_INA209=m
CONFIG_SENSORS_INA2XX=m
# CONFIG_SENSORS_INA238 is not set
# CONFIG_SENSORS_INA3221 is not set
# CONFIG_SENSORS_TC74 is not set
CONFIG_SENSORS_THMC50=m
CONFIG_SENSORS_TMP102=m
# CONFIG_SENSORS_TMP103 is not set
# CONFIG_SENSORS_TMP108 is not set
CONFIG_SENSORS_TMP401=m
CONFIG_SENSORS_TMP421=m
# CONFIG_SENSORS_TMP464 is not set
# CONFIG_SENSORS_TMP513 is not set
CONFIG_SENSORS_VIA_CPUTEMP=m
CONFIG_SENSORS_VIA686A=m
CONFIG_SENSORS_VT1211=m
CONFIG_SENSORS_VT8231=m
# CONFIG_SENSORS_W83773G is not set
CONFIG_SENSORS_W83781D=m
CONFIG_SENSORS_W83791D=m
CONFIG_SENSORS_W83792D=m
CONFIG_SENSORS_W83793=m
CONFIG_SENSORS_W83795=m
# CONFIG_SENSORS_W83795_FANCTRL is not set
CONFIG_SENSORS_W83L785TS=m
CONFIG_SENSORS_W83L786NG=m
CONFIG_SENSORS_W83627HF=m
CONFIG_SENSORS_W83627EHF=m
# CONFIG_SENSORS_XGENE is not set

#
# ACPI drivers
#
CONFIG_SENSORS_ACPI_POWER=m
CONFIG_SENSORS_ATK0110=m
# CONFIG_SENSORS_ASUS_WMI is not set
# CONFIG_SENSORS_ASUS_EC is not set
CONFIG_THERMAL=y
# CONFIG_THERMAL_NETLINK is not set
# CONFIG_THERMAL_STATISTICS is not set
CONFIG_THERMAL_EMERGENCY_POWEROFF_DELAY_MS=0
CONFIG_THERMAL_HWMON=y
CONFIG_THERMAL_ACPI=y
CONFIG_THERMAL_WRITABLE_TRIPS=y
CONFIG_THERMAL_DEFAULT_GOV_STEP_WISE=y
# CONFIG_THERMAL_DEFAULT_GOV_FAIR_SHARE is not set
# CONFIG_THERMAL_DEFAULT_GOV_USER_SPACE is not set
CONFIG_THERMAL_GOV_FAIR_SHARE=y
CONFIG_THERMAL_GOV_STEP_WISE=y
CONFIG_THERMAL_GOV_BANG_BANG=y
CONFIG_THERMAL_GOV_USER_SPACE=y
# CONFIG_THERMAL_EMULATION is not set

#
# Intel thermal drivers
#
CONFIG_INTEL_POWERCLAMP=m
CONFIG_X86_THERMAL_VECTOR=y
CONFIG_INTEL_TCC=y
CONFIG_X86_PKG_TEMP_THERMAL=m
# CONFIG_INTEL_SOC_DTS_THERMAL is not set

#
# ACPI INT340X thermal drivers
#
# CONFIG_INT340X_THERMAL is not set
# end of ACPI INT340X thermal drivers

CONFIG_INTEL_PCH_THERMAL=m
# CONFIG_INTEL_TCC_COOLING is not set
# CONFIG_INTEL_HFI_THERMAL is not set
# end of Intel thermal drivers

CONFIG_WATCHDOG=y
CONFIG_WATCHDOG_CORE=y
# CONFIG_WATCHDOG_NOWAYOUT is not set
CONFIG_WATCHDOG_HANDLE_BOOT_ENABLED=y
CONFIG_WATCHDOG_OPEN_TIMEOUT=0
CONFIG_WATCHDOG_SYSFS=y
# CONFIG_WATCHDOG_HRTIMER_PRETIMEOUT is not set

#
# Watchdog Pretimeout Governors
#
# CONFIG_WATCHDOG_PRETIMEOUT_GOV is not set

#
# Watchdog Device Drivers
#
CONFIG_SOFT_WATCHDOG=m
CONFIG_WDAT_WDT=m
# CONFIG_XILINX_WATCHDOG is not set
# CONFIG_ZIIRAVE_WATCHDOG is not set
# CONFIG_CADENCE_WATCHDOG is not set
# CONFIG_DW_WATCHDOG is not set
# CONFIG_MAX63XX_WATCHDOG is not set
# CONFIG_ACQUIRE_WDT is not set
# CONFIG_ADVANTECH_WDT is not set
# CONFIG_ADVANTECH_EC_WDT is not set
CONFIG_ALIM1535_WDT=m
CONFIG_ALIM7101_WDT=m
# CONFIG_EBC_C384_WDT is not set
# CONFIG_EXAR_WDT is not set
CONFIG_F71808E_WDT=m
# CONFIG_SP5100_TCO is not set
CONFIG_SBC_FITPC2_WATCHDOG=m
# CONFIG_EUROTECH_WDT is not set
CONFIG_IB700_WDT=m
CONFIG_IBMASR=m
# CONFIG_WAFER_WDT is not set
CONFIG_I6300ESB_WDT=y
CONFIG_IE6XX_WDT=m
CONFIG_ITCO_WDT=y
CONFIG_ITCO_VENDOR_SUPPORT=y
CONFIG_IT8712F_WDT=m
CONFIG_IT87_WDT=m
CONFIG_HP_WATCHDOG=m
CONFIG_HPWDT_NMI_DECODING=y
# CONFIG_SC1200_WDT is not set
# CONFIG_PC87413_WDT is not set
CONFIG_NV_TCO=m
# CONFIG_60XX_WDT is not set
# CONFIG_CPU5_WDT is not set
CONFIG_SMSC_SCH311X_WDT=m
# CONFIG_SMSC37B787_WDT is not set
# CONFIG_TQMX86_WDT is not set
CONFIG_VIA_WDT=m
CONFIG_W83627HF_WDT=m
CONFIG_W83877F_WDT=m
CONFIG_W83977F_WDT=m
CONFIG_MACHZ_WDT=m
# CONFIG_SBC_EPX_C3_WATCHDOG is not set
CONFIG_INTEL_MEI_WDT=m
# CONFIG_NI903X_WDT is not set
# CONFIG_NIC7018_WDT is not set
# CONFIG_MEN_A21_WDT is not set

#
# PCI-based Watchdog Cards
#
CONFIG_PCIPCWATCHDOG=m
CONFIG_WDTPCI=m

#
# USB-based Watchdog Cards
#
# CONFIG_USBPCWATCHDOG is not set
CONFIG_SSB_POSSIBLE=y
# CONFIG_SSB is not set
CONFIG_BCMA_POSSIBLE=y
# CONFIG_BCMA is not set

#
# Multifunction device drivers
#
CONFIG_MFD_CORE=y
# CONFIG_MFD_AS3711 is not set
# CONFIG_MFD_SMPRO is not set
# CONFIG_PMIC_ADP5520 is not set
# CONFIG_MFD_AAT2870_CORE is not set
# CONFIG_MFD_BCM590XX is not set
# CONFIG_MFD_BD9571MWV is not set
# CONFIG_MFD_AXP20X_I2C is not set
# CONFIG_MFD_MADERA is not set
# CONFIG_PMIC_DA903X is not set
# CONFIG_MFD_DA9052_SPI is not set
# CONFIG_MFD_DA9052_I2C is not set
# CONFIG_MFD_DA9055 is not set
# CONFIG_MFD_DA9062 is not set
# CONFIG_MFD_DA9063 is not set
# CONFIG_MFD_DA9150 is not set
# CONFIG_MFD_DLN2 is not set
# CONFIG_MFD_MC13XXX_SPI is not set
# CONFIG_MFD_MC13XXX_I2C is not set
# CONFIG_MFD_MP2629 is not set
# CONFIG_MFD_INTEL_QUARK_I2C_GPIO is not set
CONFIG_LPC_ICH=m
CONFIG_LPC_SCH=m
CONFIG_MFD_INTEL_LPSS=y
CONFIG_MFD_INTEL_LPSS_ACPI=y
CONFIG_MFD_INTEL_LPSS_PCI=y
# CONFIG_MFD_INTEL_PMC_BXT is not set
# CONFIG_MFD_IQS62X is not set
# CONFIG_MFD_JANZ_CMODIO is not set
# CONFIG_MFD_KEMPLD is not set
# CONFIG_MFD_88PM800 is not set
# CONFIG_MFD_88PM805 is not set
# CONFIG_MFD_88PM860X is not set
# CONFIG_MFD_MAX14577 is not set
# CONFIG_MFD_MAX77693 is not set
# CONFIG_MFD_MAX77843 is not set
# CONFIG_MFD_MAX8907 is not set
# CONFIG_MFD_MAX8925 is not set
# CONFIG_MFD_MAX8997 is not set
# CONFIG_MFD_MAX8998 is not set
# CONFIG_MFD_MT6360 is not set
# CONFIG_MFD_MT6370 is not set
# CONFIG_MFD_MT6397 is not set
# CONFIG_MFD_MENF21BMC is not set
# CONFIG_MFD_OCELOT is not set
# CONFIG_EZX_PCAP is not set
# CONFIG_MFD_VIPERBOARD is not set
# CONFIG_MFD_RETU is not set
# CONFIG_MFD_PCF50633 is not set
# CONFIG_MFD_SY7636A is not set
# CONFIG_MFD_RDC321X is not set
# CONFIG_MFD_RT4831 is not set
# CONFIG_MFD_RT5033 is not set
# CONFIG_MFD_RT5120 is not set
# CONFIG_MFD_RC5T583 is not set
# CONFIG_MFD_SI476X_CORE is not set
CONFIG_MFD_SM501=m
CONFIG_MFD_SM501_GPIO=y
# CONFIG_MFD_SKY81452 is not set
# CONFIG_MFD_SYSCON is not set
# CONFIG_MFD_TI_AM335X_TSCADC is not set
# CONFIG_MFD_LP3943 is not set
# CONFIG_MFD_LP8788 is not set
# CONFIG_MFD_TI_LMU is not set
# CONFIG_MFD_PALMAS is not set
# CONFIG_TPS6105X is not set
# CONFIG_TPS65010 is not set
# CONFIG_TPS6507X is not set
# CONFIG_MFD_TPS65086 is not set
# CONFIG_MFD_TPS65090 is not set
# CONFIG_MFD_TI_LP873X is not set
# CONFIG_MFD_TPS6586X is not set
# CONFIG_MFD_TPS65910 is not set
# CONFIG_MFD_TPS65912_I2C is not set
# CONFIG_MFD_TPS65912_SPI is not set
# CONFIG_TWL4030_CORE is not set
# CONFIG_TWL6040_CORE is not set
# CONFIG_MFD_WL1273_CORE is not set
# CONFIG_MFD_LM3533 is not set
# CONFIG_MFD_TQMX86 is not set
CONFIG_MFD_VX855=m
# CONFIG_MFD_ARIZONA_I2C is not set
# CONFIG_MFD_ARIZONA_SPI is not set
# CONFIG_MFD_WM8400 is not set
# CONFIG_MFD_WM831X_I2C is not set
# CONFIG_MFD_WM831X_SPI is not set
# CONFIG_MFD_WM8350_I2C is not set
# CONFIG_MFD_WM8994 is not set
# CONFIG_MFD_ATC260X_I2C is not set
# CONFIG_MFD_INTEL_M10_BMC_SPI is not set
# end of Multifunction device drivers

# CONFIG_REGULATOR is not set
CONFIG_RC_CORE=m
CONFIG_LIRC=y
CONFIG_RC_MAP=m
CONFIG_RC_DECODERS=y
CONFIG_IR_IMON_DECODER=m
CONFIG_IR_JVC_DECODER=m
CONFIG_IR_MCE_KBD_DECODER=m
CONFIG_IR_NEC_DECODER=m
CONFIG_IR_RC5_DECODER=m
CONFIG_IR_RC6_DECODER=m
# CONFIG_IR_RCMM_DECODER is not set
CONFIG_IR_SANYO_DECODER=m
CONFIG_IR_SHARP_DECODER=m
CONFIG_IR_SONY_DECODER=m
# CONFIG_IR_XMP_DECODER is not set
CONFIG_RC_DEVICES=y
CONFIG_IR_ENE=m
CONFIG_IR_FINTEK=m
# CONFIG_IR_IGORPLUGUSB is not set
# CONFIG_IR_IGUANA is not set
# CONFIG_IR_IMON is not set
# CONFIG_IR_IMON_RAW is not set
CONFIG_IR_ITE_CIR=m
# CONFIG_IR_MCEUSB is not set
CONFIG_IR_NUVOTON=m
# CONFIG_IR_REDRAT3 is not set
CONFIG_IR_SERIAL=m
CONFIG_IR_SERIAL_TRANSMITTER=y
# CONFIG_IR_STREAMZAP is not set
# CONFIG_IR_TOY is not set
# CONFIG_IR_TTUSBIR is not set
CONFIG_IR_WINBOND_CIR=m
# CONFIG_RC_ATI_REMOTE is not set
CONFIG_RC_LOOPBACK=m
# CONFIG_RC_XBOX_DVD is not set

#
# CEC support
#
# CONFIG_MEDIA_CEC_SUPPORT is not set
# end of CEC support

CONFIG_MEDIA_SUPPORT=m
CONFIG_MEDIA_SUPPORT_FILTER=y
CONFIG_MEDIA_SUBDRV_AUTOSELECT=y

#
# Media device types
#
# CONFIG_MEDIA_CAMERA_SUPPORT is not set
# CONFIG_MEDIA_ANALOG_TV_SUPPORT is not set
# CONFIG_MEDIA_DIGITAL_TV_SUPPORT is not set
# CONFIG_MEDIA_RADIO_SUPPORT is not set
# CONFIG_MEDIA_SDR_SUPPORT is not set
# CONFIG_MEDIA_PLATFORM_SUPPORT is not set
# CONFIG_MEDIA_TEST_SUPPORT is not set
# end of Media device types

#
# Media drivers
#

#
# Drivers filtered as selected at 'Filter media drivers'
#

#
# Media drivers
#
# CONFIG_MEDIA_USB_SUPPORT is not set
# CONFIG_MEDIA_PCI_SUPPORT is not set
# end of Media drivers

#
# Media ancillary drivers
#
# end of Media ancillary drivers

#
# Graphics support
#
CONFIG_APERTURE_HELPERS=y
CONFIG_VIDEO_CMDLINE=y
CONFIG_VIDEO_NOMODESET=y
# CONFIG_AGP is not set
CONFIG_INTEL_GTT=m
CONFIG_VGA_SWITCHEROO=y
CONFIG_DRM=m
CONFIG_DRM_MIPI_DSI=y
CONFIG_DRM_KMS_HELPER=m
# CONFIG_DRM_DEBUG_DP_MST_TOPOLOGY_REFS is not set
CONFIG_DRM_DEBUG_MODESET_LOCK=y
CONFIG_DRM_FBDEV_EMULATION=y
CONFIG_DRM_FBDEV_OVERALLOC=100
# CONFIG_DRM_FBDEV_LEAK_PHYS_SMEM is not set
CONFIG_DRM_LOAD_EDID_FIRMWARE=y
CONFIG_DRM_DISPLAY_HELPER=m
CONFIG_DRM_DISPLAY_DP_HELPER=y
CONFIG_DRM_DISPLAY_HDCP_HELPER=y
CONFIG_DRM_DISPLAY_HDMI_HELPER=y
CONFIG_DRM_DP_AUX_CHARDEV=y
# CONFIG_DRM_DP_CEC is not set
CONFIG_DRM_TTM=m
CONFIG_DRM_BUDDY=m
CONFIG_DRM_VRAM_HELPER=m
CONFIG_DRM_TTM_HELPER=m
CONFIG_DRM_GEM_SHMEM_HELPER=m

#
# I2C encoder or helper chips
#
# CONFIG_DRM_I2C_CH7006 is not set
# CONFIG_DRM_I2C_SIL164 is not set
# CONFIG_DRM_I2C_NXP_TDA998X is not set
# CONFIG_DRM_I2C_NXP_TDA9950 is not set
# end of I2C encoder or helper chips

#
# ARM devices
#
# end of ARM devices

# CONFIG_DRM_RADEON is not set
# CONFIG_DRM_AMDGPU is not set
# CONFIG_DRM_NOUVEAU is not set
CONFIG_DRM_I915=m
CONFIG_DRM_I915_FORCE_PROBE=""
CONFIG_DRM_I915_CAPTURE_ERROR=y
CONFIG_DRM_I915_COMPRESS_ERROR=y
CONFIG_DRM_I915_USERPTR=y
# CONFIG_DRM_I915_GVT_KVMGT is not set

#
# drm/i915 Debugging
#
# CONFIG_DRM_I915_WERROR is not set
# CONFIG_DRM_I915_DEBUG is not set
# CONFIG_DRM_I915_DEBUG_MMIO is not set
# CONFIG_DRM_I915_SW_FENCE_DEBUG_OBJECTS is not set
# CONFIG_DRM_I915_SW_FENCE_CHECK_DAG is not set
# CONFIG_DRM_I915_DEBUG_GUC is not set
# CONFIG_DRM_I915_SELFTEST is not set
# CONFIG_DRM_I915_LOW_LEVEL_TRACEPOINTS is not set
# CONFIG_DRM_I915_DEBUG_VBLANK_EVADE is not set
# CONFIG_DRM_I915_DEBUG_RUNTIME_PM is not set
# end of drm/i915 Debugging

#
# drm/i915 Profile Guided Optimisation
#
CONFIG_DRM_I915_REQUEST_TIMEOUT=20000
CONFIG_DRM_I915_FENCE_TIMEOUT=10000
CONFIG_DRM_I915_USERFAULT_AUTOSUSPEND=250
CONFIG_DRM_I915_HEARTBEAT_INTERVAL=2500
CONFIG_DRM_I915_PREEMPT_TIMEOUT=640
CONFIG_DRM_I915_PREEMPT_TIMEOUT_COMPUTE=7500
CONFIG_DRM_I915_MAX_REQUEST_BUSYWAIT=8000
CONFIG_DRM_I915_STOP_TIMEOUT=100
CONFIG_DRM_I915_TIMESLICE_DURATION=1
# end of drm/i915 Profile Guided Optimisation

CONFIG_DRM_VGEM=m
# CONFIG_DRM_VKMS is not set
# CONFIG_DRM_VMWGFX is not set
# CONFIG_DRM_GMA500 is not set
# CONFIG_DRM_UDL is not set
CONFIG_DRM_AST=m
# CONFIG_DRM_MGAG200 is not set
CONFIG_DRM_QXL=m
CONFIG_DRM_VIRTIO_GPU=m
CONFIG_DRM_VIRTIO_GPU_KMS=y
CONFIG_DRM_PANEL=y

#
# Display Panels
#
# CONFIG_DRM_PANEL_AUO_A030JTN01 is not set
# CONFIG_DRM_PANEL_ORISETECH_OTA5601A is not set
# CONFIG_DRM_PANEL_RASPBERRYPI_TOUCHSCREEN is not set
# CONFIG_DRM_PANEL_WIDECHIPS_WS2401 is not set
# end of Display Panels

CONFIG_DRM_BRIDGE=y
CONFIG_DRM_PANEL_BRIDGE=y

#
# Display Interface Bridges
#
# CONFIG_DRM_ANALOGIX_ANX78XX is not set
# end of Display Interface Bridges

# CONFIG_DRM_ETNAVIV is not set
CONFIG_DRM_BOCHS=m
CONFIG_DRM_CIRRUS_QEMU=m
# CONFIG_DRM_GM12U320 is not set
# CONFIG_DRM_PANEL_MIPI_DBI is not set
# CONFIG_DRM_SIMPLEDRM is not set
# CONFIG_TINYDRM_HX8357D is not set
# CONFIG_TINYDRM_ILI9163 is not set
# CONFIG_TINYDRM_ILI9225 is not set
# CONFIG_TINYDRM_ILI9341 is not set
# CONFIG_TINYDRM_ILI9486 is not set
# CONFIG_TINYDRM_MI0283QT is not set
# CONFIG_TINYDRM_REPAPER is not set
# CONFIG_TINYDRM_ST7586 is not set
# CONFIG_TINYDRM_ST7735R is not set
# CONFIG_DRM_VBOXVIDEO is not set
# CONFIG_DRM_GUD is not set
# CONFIG_DRM_SSD130X is not set
# CONFIG_DRM_HYPERV is not set
# CONFIG_DRM_LEGACY is not set
CONFIG_DRM_PANEL_ORIENTATION_QUIRKS=y

#
# Frame buffer Devices
#
CONFIG_FB_NOTIFY=y
CONFIG_FB=y
# CONFIG_FIRMWARE_EDID is not set
CONFIG_FB_CFB_FILLRECT=y
CONFIG_FB_CFB_COPYAREA=y
CONFIG_FB_CFB_IMAGEBLIT=y
CONFIG_FB_SYS_FILLRECT=m
CONFIG_FB_SYS_COPYAREA=m
CONFIG_FB_SYS_IMAGEBLIT=m
# CONFIG_FB_FOREIGN_ENDIAN is not set
CONFIG_FB_SYS_FOPS=m
CONFIG_FB_DEFERRED_IO=y
# CONFIG_FB_MODE_HELPERS is not set
CONFIG_FB_TILEBLITTING=y

#
# Frame buffer hardware drivers
#
# CONFIG_FB_CIRRUS is not set
# CONFIG_FB_PM2 is not set
# CONFIG_FB_CYBER2000 is not set
# CONFIG_FB_ARC is not set
# CONFIG_FB_ASILIANT is not set
# CONFIG_FB_IMSTT is not set
# CONFIG_FB_VGA16 is not set
# CONFIG_FB_UVESA is not set
CONFIG_FB_VESA=y
CONFIG_FB_EFI=y
# CONFIG_FB_N411 is not set
# CONFIG_FB_HGA is not set
# CONFIG_FB_OPENCORES is not set
# CONFIG_FB_S1D13XXX is not set
# CONFIG_FB_NVIDIA is not set
# CONFIG_FB_RIVA is not set
# CONFIG_FB_I740 is not set
# CONFIG_FB_LE80578 is not set
# CONFIG_FB_MATROX is not set
# CONFIG_FB_RADEON is not set
# CONFIG_FB_ATY128 is not set
# CONFIG_FB_ATY is not set
# CONFIG_FB_S3 is not set
# CONFIG_FB_SAVAGE is not set
# CONFIG_FB_SIS is not set
# CONFIG_FB_VIA is not set
# CONFIG_FB_NEOMAGIC is not set
# CONFIG_FB_KYRO is not set
# CONFIG_FB_3DFX is not set
# CONFIG_FB_VOODOO1 is not set
# CONFIG_FB_VT8623 is not set
# CONFIG_FB_TRIDENT is not set
# CONFIG_FB_ARK is not set
# CONFIG_FB_PM3 is not set
# CONFIG_FB_CARMINE is not set
# CONFIG_FB_SM501 is not set
# CONFIG_FB_SMSCUFX is not set
# CONFIG_FB_UDL is not set
# CONFIG_FB_IBM_GXT4500 is not set
# CONFIG_FB_VIRTUAL is not set
# CONFIG_FB_METRONOME is not set
# CONFIG_FB_MB862XX is not set
CONFIG_FB_HYPERV=m
# CONFIG_FB_SIMPLE is not set
# CONFIG_FB_SSD1307 is not set
# CONFIG_FB_SM712 is not set
# end of Frame buffer Devices

#
# Backlight & LCD device support
#
CONFIG_LCD_CLASS_DEVICE=m
# CONFIG_LCD_L4F00242T03 is not set
# CONFIG_LCD_LMS283GF05 is not set
# CONFIG_LCD_LTV350QV is not set
# CONFIG_LCD_ILI922X is not set
# CONFIG_LCD_ILI9320 is not set
# CONFIG_LCD_TDO24M is not set
# CONFIG_LCD_VGG2432A4 is not set
CONFIG_LCD_PLATFORM=m
# CONFIG_LCD_AMS369FG06 is not set
# CONFIG_LCD_LMS501KF03 is not set
# CONFIG_LCD_HX8357 is not set
# CONFIG_LCD_OTM3225A is not set
CONFIG_BACKLIGHT_CLASS_DEVICE=y
# CONFIG_BACKLIGHT_KTD253 is not set
# CONFIG_BACKLIGHT_KTZ8866 is not set
# CONFIG_BACKLIGHT_PWM is not set
CONFIG_BACKLIGHT_APPLE=m
# CONFIG_BACKLIGHT_QCOM_WLED is not set
# CONFIG_BACKLIGHT_SAHARA is not set
# CONFIG_BACKLIGHT_ADP8860 is not set
# CONFIG_BACKLIGHT_ADP8870 is not set
# CONFIG_BACKLIGHT_LM3630A is not set
# CONFIG_BACKLIGHT_LM3639 is not set
CONFIG_BACKLIGHT_LP855X=m
# CONFIG_BACKLIGHT_GPIO is not set
# CONFIG_BACKLIGHT_LV5207LP is not set
# CONFIG_BACKLIGHT_BD6107 is not set
# CONFIG_BACKLIGHT_ARCXCNN is not set
# end of Backlight & LCD device support

CONFIG_HDMI=y

#
# Console display driver support
#
CONFIG_VGA_CONSOLE=y
CONFIG_DUMMY_CONSOLE=y
CONFIG_DUMMY_CONSOLE_COLUMNS=80
CONFIG_DUMMY_CONSOLE_ROWS=25
CONFIG_FRAMEBUFFER_CONSOLE=y
# CONFIG_FRAMEBUFFER_CONSOLE_LEGACY_ACCELERATION is not set
CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY=y
CONFIG_FRAMEBUFFER_CONSOLE_ROTATION=y
# CONFIG_FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER is not set
# end of Console display driver support

CONFIG_LOGO=y
# CONFIG_LOGO_LINUX_MONO is not set
# CONFIG_LOGO_LINUX_VGA16 is not set
CONFIG_LOGO_LINUX_CLUT224=y
# end of Graphics support

# CONFIG_DRM_ACCEL is not set
# CONFIG_SOUND is not set
CONFIG_HID_SUPPORT=y
CONFIG_HID=y
CONFIG_HID_BATTERY_STRENGTH=y
CONFIG_HIDRAW=y
CONFIG_UHID=m
CONFIG_HID_GENERIC=y

#
# Special HID drivers
#
CONFIG_HID_A4TECH=m
# CONFIG_HID_ACCUTOUCH is not set
CONFIG_HID_ACRUX=m
# CONFIG_HID_ACRUX_FF is not set
CONFIG_HID_APPLE=m
# CONFIG_HID_APPLEIR is not set
CONFIG_HID_ASUS=m
CONFIG_HID_AUREAL=m
CONFIG_HID_BELKIN=m
# CONFIG_HID_BETOP_FF is not set
# CONFIG_HID_BIGBEN_FF is not set
CONFIG_HID_CHERRY=m
# CONFIG_HID_CHICONY is not set
# CONFIG_HID_CORSAIR is not set
# CONFIG_HID_COUGAR is not set
# CONFIG_HID_MACALLY is not set
CONFIG_HID_CMEDIA=m
# CONFIG_HID_CP2112 is not set
# CONFIG_HID_CREATIVE_SB0540 is not set
CONFIG_HID_CYPRESS=m
CONFIG_HID_DRAGONRISE=m
# CONFIG_DRAGONRISE_FF is not set
# CONFIG_HID_EMS_FF is not set
# CONFIG_HID_ELAN is not set
CONFIG_HID_ELECOM=m
# CONFIG_HID_ELO is not set
# CONFIG_HID_EVISION is not set
CONFIG_HID_EZKEY=m
# CONFIG_HID_FT260 is not set
CONFIG_HID_GEMBIRD=m
CONFIG_HID_GFRM=m
# CONFIG_HID_GLORIOUS is not set
# CONFIG_HID_HOLTEK is not set
# CONFIG_HID_VIVALDI is not set
# CONFIG_HID_GT683R is not set
CONFIG_HID_KEYTOUCH=m
CONFIG_HID_KYE=m
# CONFIG_HID_UCLOGIC is not set
CONFIG_HID_WALTOP=m
# CONFIG_HID_VIEWSONIC is not set
# CONFIG_HID_VRC2 is not set
# CONFIG_HID_XIAOMI is not set
CONFIG_HID_GYRATION=m
CONFIG_HID_ICADE=m
CONFIG_HID_ITE=m
CONFIG_HID_JABRA=m
CONFIG_HID_TWINHAN=m
CONFIG_HID_KENSINGTON=m
CONFIG_HID_LCPOWER=m
CONFIG_HID_LED=m
CONFIG_HID_LENOVO=m
# CONFIG_HID_LETSKETCH is not set
CONFIG_HID_LOGITECH=m
CONFIG_HID_LOGITECH_DJ=m
CONFIG_HID_LOGITECH_HIDPP=m
# CONFIG_LOGITECH_FF is not set
# CONFIG_LOGIRUMBLEPAD2_FF is not set
# CONFIG_LOGIG940_FF is not set
# CONFIG_LOGIWHEELS_FF is not set
CONFIG_HID_MAGICMOUSE=y
# CONFIG_HID_MALTRON is not set
# CONFIG_HID_MAYFLASH is not set
# CONFIG_HID_MEGAWORLD_FF is not set
# CONFIG_HID_REDRAGON is not set
CONFIG_HID_MICROSOFT=m
CONFIG_HID_MONTEREY=m
CONFIG_HID_MULTITOUCH=m
# CONFIG_HID_NINTENDO is not set
CONFIG_HID_NTI=m
# CONFIG_HID_NTRIG is not set
CONFIG_HID_ORTEK=m
CONFIG_HID_PANTHERLORD=m
# CONFIG_PANTHERLORD_FF is not set
# CONFIG_HID_PENMOUNT is not set
CONFIG_HID_PETALYNX=m
CONFIG_HID_PICOLCD=m
CONFIG_HID_PICOLCD_FB=y
CONFIG_HID_PICOLCD_BACKLIGHT=y
CONFIG_HID_PICOLCD_LCD=y
CONFIG_HID_PICOLCD_LEDS=y
CONFIG_HID_PICOLCD_CIR=y
CONFIG_HID_PLANTRONICS=m
# CONFIG_HID_PXRC is not set
# CONFIG_HID_RAZER is not set
CONFIG_HID_PRIMAX=m
# CONFIG_HID_RETRODE is not set
# CONFIG_HID_ROCCAT is not set
CONFIG_HID_SAITEK=m
CONFIG_HID_SAMSUNG=m
# CONFIG_HID_SEMITEK is not set
# CONFIG_HID_SIGMAMICRO is not set
# CONFIG_HID_SONY is not set
CONFIG_HID_SPEEDLINK=m
# CONFIG_HID_STEAM is not set
CONFIG_HID_STEELSERIES=m
CONFIG_HID_SUNPLUS=m
CONFIG_HID_RMI=m
CONFIG_HID_GREENASIA=m
# CONFIG_GREENASIA_FF is not set
CONFIG_HID_HYPERV_MOUSE=m
CONFIG_HID_SMARTJOYPLUS=m
# CONFIG_SMARTJOYPLUS_FF is not set
CONFIG_HID_TIVO=m
CONFIG_HID_TOPSEED=m
# CONFIG_HID_TOPRE is not set
CONFIG_HID_THINGM=m
CONFIG_HID_THRUSTMASTER=m
# CONFIG_THRUSTMASTER_FF is not set
# CONFIG_HID_UDRAW_PS3 is not set
# CONFIG_HID_U2FZERO is not set
# CONFIG_HID_WACOM is not set
CONFIG_HID_WIIMOTE=m
CONFIG_HID_XINMO=m
CONFIG_HID_ZEROPLUS=m
# CONFIG_ZEROPLUS_FF is not set
CONFIG_HID_ZYDACRON=m
CONFIG_HID_SENSOR_HUB=y
CONFIG_HID_SENSOR_CUSTOM_SENSOR=m
CONFIG_HID_ALPS=m
# CONFIG_HID_MCP2221 is not set
# end of Special HID drivers

#
# HID-BPF support
#
# CONFIG_HID_BPF is not set
# end of HID-BPF support

#
# USB HID support
#
CONFIG_USB_HID=y
# CONFIG_HID_PID is not set
# CONFIG_USB_HIDDEV is not set
# end of USB HID support

CONFIG_I2C_HID=m
# CONFIG_I2C_HID_ACPI is not set
# CONFIG_I2C_HID_OF is not set

#
# Intel ISH HID support
#
# CONFIG_INTEL_ISH_HID is not set
# end of Intel ISH HID support

#
# AMD SFH HID Support
#
# CONFIG_AMD_SFH_HID is not set
# end of AMD SFH HID Support

CONFIG_USB_OHCI_LITTLE_ENDIAN=y
CONFIG_USB_SUPPORT=y
CONFIG_USB_COMMON=y
# CONFIG_USB_LED_TRIG is not set
# CONFIG_USB_ULPI_BUS is not set
# CONFIG_USB_CONN_GPIO is not set
CONFIG_USB_ARCH_HAS_HCD=y
CONFIG_USB=y
CONFIG_USB_PCI=y
CONFIG_USB_ANNOUNCE_NEW_DEVICES=y

#
# Miscellaneous USB options
#
CONFIG_USB_DEFAULT_PERSIST=y
# CONFIG_USB_FEW_INIT_RETRIES is not set
# CONFIG_USB_DYNAMIC_MINORS is not set
# CONFIG_USB_OTG is not set
# CONFIG_USB_OTG_PRODUCTLIST is not set
# CONFIG_USB_OTG_DISABLE_EXTERNAL_HUB is not set
CONFIG_USB_LEDS_TRIGGER_USBPORT=y
CONFIG_USB_AUTOSUSPEND_DELAY=2
CONFIG_USB_MON=y

#
# USB Host Controller Drivers
#
# CONFIG_USB_C67X00_HCD is not set
CONFIG_USB_XHCI_HCD=y
# CONFIG_USB_XHCI_DBGCAP is not set
CONFIG_USB_XHCI_PCI=y
# CONFIG_USB_XHCI_PCI_RENESAS is not set
# CONFIG_USB_XHCI_PLATFORM is not set
CONFIG_USB_EHCI_HCD=y
CONFIG_USB_EHCI_ROOT_HUB_TT=y
CONFIG_USB_EHCI_TT_NEWSCHED=y
CONFIG_USB_EHCI_PCI=y
# CONFIG_USB_EHCI_FSL is not set
# CONFIG_USB_EHCI_HCD_PLATFORM is not set
# CONFIG_USB_OXU210HP_HCD is not set
# CONFIG_USB_ISP116X_HCD is not set
# CONFIG_USB_MAX3421_HCD is not set
CONFIG_USB_OHCI_HCD=y
CONFIG_USB_OHCI_HCD_PCI=y
# CONFIG_USB_OHCI_HCD_PLATFORM is not set
CONFIG_USB_UHCI_HCD=y
# CONFIG_USB_SL811_HCD is not set
# CONFIG_USB_R8A66597_HCD is not set
# CONFIG_USB_HCD_TEST_MODE is not set

#
# USB Device Class drivers
#
# CONFIG_USB_ACM is not set
# CONFIG_USB_PRINTER is not set
# CONFIG_USB_WDM is not set
# CONFIG_USB_TMC is not set

#
# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
#

#
# also be needed; see USB_STORAGE Help for more info
#
CONFIG_USB_STORAGE=m
# CONFIG_USB_STORAGE_DEBUG is not set
# CONFIG_USB_STORAGE_REALTEK is not set
# CONFIG_USB_STORAGE_DATAFAB is not set
# CONFIG_USB_STORAGE_FREECOM is not set
# CONFIG_USB_STORAGE_ISD200 is not set
# CONFIG_USB_STORAGE_USBAT is not set
# CONFIG_USB_STORAGE_SDDR09 is not set
# CONFIG_USB_STORAGE_SDDR55 is not set
# CONFIG_USB_STORAGE_JUMPSHOT is not set
# CONFIG_USB_STORAGE_ALAUDA is not set
# CONFIG_USB_STORAGE_ONETOUCH is not set
# CONFIG_USB_STORAGE_KARMA is not set
# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set
# CONFIG_USB_STORAGE_ENE_UB6250 is not set
# CONFIG_USB_UAS is not set

#
# USB Imaging devices
#
# CONFIG_USB_MDC800 is not set
# CONFIG_USB_MICROTEK is not set
# CONFIG_USBIP_CORE is not set

#
# USB dual-mode controller drivers
#
# CONFIG_USB_CDNS_SUPPORT is not set
# CONFIG_USB_MUSB_HDRC is not set
# CONFIG_USB_DWC3 is not set
# CONFIG_USB_DWC2 is not set
# CONFIG_USB_CHIPIDEA is not set
# CONFIG_USB_ISP1760 is not set

#
# USB port drivers
#
# CONFIG_USB_SERIAL is not set

#
# USB Miscellaneous drivers
#
# CONFIG_USB_USS720 is not set
# CONFIG_USB_EMI62 is not set
# CONFIG_USB_EMI26 is not set
# CONFIG_USB_ADUTUX is not set
# CONFIG_USB_SEVSEG is not set
# CONFIG_USB_LEGOTOWER is not set
# CONFIG_USB_LCD is not set
# CONFIG_USB_CYPRESS_CY7C63 is not set
# CONFIG_USB_CYTHERM is not set
# CONFIG_USB_IDMOUSE is not set
# CONFIG_USB_APPLEDISPLAY is not set
# CONFIG_APPLE_MFI_FASTCHARGE is not set
# CONFIG_USB_SISUSBVGA is not set
# CONFIG_USB_LD is not set
# CONFIG_USB_TRANCEVIBRATOR is not set
# CONFIG_USB_IOWARRIOR is not set
# CONFIG_USB_TEST is not set
# CONFIG_USB_EHSET_TEST_FIXTURE is not set
# CONFIG_USB_ISIGHTFW is not set
# CONFIG_USB_YUREX is not set
# CONFIG_USB_EZUSB_FX2 is not set
# CONFIG_USB_HUB_USB251XB is not set
# CONFIG_USB_HSIC_USB3503 is not set
# CONFIG_USB_HSIC_USB4604 is not set
# CONFIG_USB_LINK_LAYER_TEST is not set
# CONFIG_USB_CHAOSKEY is not set

#
# USB Physical Layer drivers
#
# CONFIG_NOP_USB_XCEIV is not set
# CONFIG_USB_GPIO_VBUS is not set
# CONFIG_USB_ISP1301 is not set
# end of USB Physical Layer drivers

# CONFIG_USB_GADGET is not set
CONFIG_TYPEC=y
# CONFIG_TYPEC_TCPM is not set
CONFIG_TYPEC_UCSI=y
# CONFIG_UCSI_CCG is not set
CONFIG_UCSI_ACPI=y
# CONFIG_UCSI_STM32G0 is not set
# CONFIG_TYPEC_TPS6598X is not set
# CONFIG_TYPEC_RT1719 is not set
# CONFIG_TYPEC_STUSB160X is not set
# CONFIG_TYPEC_WUSB3801 is not set

#
# USB Type-C Multiplexer/DeMultiplexer Switch support
#
# CONFIG_TYPEC_MUX_FSA4480 is not set
# CONFIG_TYPEC_MUX_GPIO_SBU is not set
# CONFIG_TYPEC_MUX_PI3USB30532 is not set
# end of USB Type-C Multiplexer/DeMultiplexer Switch support

#
# USB Type-C Alternate Mode drivers
#
# CONFIG_TYPEC_DP_ALTMODE is not set
# end of USB Type-C Alternate Mode drivers

# CONFIG_USB_ROLE_SWITCH is not set
CONFIG_MMC=m
CONFIG_MMC_BLOCK=m
CONFIG_MMC_BLOCK_MINORS=8
CONFIG_SDIO_UART=m
# CONFIG_MMC_TEST is not set

#
# MMC/SD/SDIO Host Controller Drivers
#
# CONFIG_MMC_DEBUG is not set
CONFIG_MMC_SDHCI=m
CONFIG_MMC_SDHCI_IO_ACCESSORS=y
CONFIG_MMC_SDHCI_PCI=m
CONFIG_MMC_RICOH_MMC=y
CONFIG_MMC_SDHCI_ACPI=m
CONFIG_MMC_SDHCI_PLTFM=m
# CONFIG_MMC_SDHCI_F_SDH30 is not set
# CONFIG_MMC_WBSD is not set
# CONFIG_MMC_TIFM_SD is not set
# CONFIG_MMC_SPI is not set
# CONFIG_MMC_CB710 is not set
# CONFIG_MMC_VIA_SDMMC is not set
# CONFIG_MMC_VUB300 is not set
# CONFIG_MMC_USHC is not set
# CONFIG_MMC_USDHI6ROL0 is not set
CONFIG_MMC_CQHCI=m
# CONFIG_MMC_HSQ is not set
# CONFIG_MMC_TOSHIBA_PCI is not set
# CONFIG_MMC_MTK is not set
# CONFIG_MMC_SDHCI_XENON is not set
# CONFIG_SCSI_UFSHCD is not set
# CONFIG_MEMSTICK is not set
CONFIG_NEW_LEDS=y
CONFIG_LEDS_CLASS=y
# CONFIG_LEDS_CLASS_FLASH is not set
# CONFIG_LEDS_CLASS_MULTICOLOR is not set
# CONFIG_LEDS_BRIGHTNESS_HW_CHANGED is not set

#
# LED drivers
#
# CONFIG_LEDS_APU is not set
CONFIG_LEDS_LM3530=m
# CONFIG_LEDS_LM3532 is not set
# CONFIG_LEDS_LM3642 is not set
# CONFIG_LEDS_PCA9532 is not set
# CONFIG_LEDS_GPIO is not set
CONFIG_LEDS_LP3944=m
# CONFIG_LEDS_LP3952 is not set
# CONFIG_LEDS_LP50XX is not set
# CONFIG_LEDS_PCA955X is not set
# CONFIG_LEDS_PCA963X is not set
# CONFIG_LEDS_DAC124S085 is not set
# CONFIG_LEDS_PWM is not set
# CONFIG_LEDS_BD2606MVV is not set
# CONFIG_LEDS_BD2802 is not set
CONFIG_LEDS_INTEL_SS4200=m
CONFIG_LEDS_LT3593=m
# CONFIG_LEDS_TCA6507 is not set
# CONFIG_LEDS_TLC591XX is not set
# CONFIG_LEDS_LM355x is not set
# CONFIG_LEDS_IS31FL319X is not set

#
# LED driver for blink(1) USB RGB LED is under Special HID drivers (HID_THINGM)
#
CONFIG_LEDS_BLINKM=m
CONFIG_LEDS_MLXCPLD=m
# CONFIG_LEDS_MLXREG is not set
# CONFIG_LEDS_USER is not set
# CONFIG_LEDS_NIC78BX is not set
# CONFIG_LEDS_TI_LMU_COMMON is not set

#
# Flash and Torch LED drivers
#

#
# RGB LED drivers
#

#
# LED Triggers
#
CONFIG_LEDS_TRIGGERS=y
CONFIG_LEDS_TRIGGER_TIMER=m
CONFIG_LEDS_TRIGGER_ONESHOT=m
# CONFIG_LEDS_TRIGGER_DISK is not set
CONFIG_LEDS_TRIGGER_HEARTBEAT=m
CONFIG_LEDS_TRIGGER_BACKLIGHT=m
# CONFIG_LEDS_TRIGGER_CPU is not set
# CONFIG_LEDS_TRIGGER_ACTIVITY is not set
CONFIG_LEDS_TRIGGER_DEFAULT_ON=m

#
# iptables trigger is under Netfilter config (LED target)
#
CONFIG_LEDS_TRIGGER_TRANSIENT=m
CONFIG_LEDS_TRIGGER_CAMERA=m
# CONFIG_LEDS_TRIGGER_PANIC is not set
# CONFIG_LEDS_TRIGGER_NETDEV is not set
# CONFIG_LEDS_TRIGGER_PATTERN is not set
# CONFIG_LEDS_TRIGGER_AUDIO is not set
# CONFIG_LEDS_TRIGGER_TTY is not set

#
# Simple LED drivers
#
# CONFIG_ACCESSIBILITY is not set
# CONFIG_INFINIBAND is not set
CONFIG_EDAC_ATOMIC_SCRUB=y
CONFIG_EDAC_SUPPORT=y
CONFIG_EDAC=y
CONFIG_EDAC_LEGACY_SYSFS=y
# CONFIG_EDAC_DEBUG is not set
CONFIG_EDAC_GHES=y
CONFIG_EDAC_E752X=m
CONFIG_EDAC_I82975X=m
CONFIG_EDAC_I3000=m
CONFIG_EDAC_I3200=m
CONFIG_EDAC_IE31200=m
CONFIG_EDAC_X38=m
CONFIG_EDAC_I5400=m
CONFIG_EDAC_I7CORE=m
CONFIG_EDAC_I5100=m
CONFIG_EDAC_I7300=m
CONFIG_EDAC_SBRIDGE=m
CONFIG_EDAC_SKX=m
# CONFIG_EDAC_I10NM is not set
CONFIG_EDAC_PND2=m
# CONFIG_EDAC_IGEN6 is not set
CONFIG_RTC_LIB=y
CONFIG_RTC_MC146818_LIB=y
CONFIG_RTC_CLASS=y
CONFIG_RTC_HCTOSYS=y
CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
# CONFIG_RTC_SYSTOHC is not set
# CONFIG_RTC_DEBUG is not set
CONFIG_RTC_NVMEM=y

#
# RTC interfaces
#
CONFIG_RTC_INTF_SYSFS=y
CONFIG_RTC_INTF_PROC=y
CONFIG_RTC_INTF_DEV=y
# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
# CONFIG_RTC_DRV_TEST is not set

#
# I2C RTC drivers
#
# CONFIG_RTC_DRV_ABB5ZES3 is not set
# CONFIG_RTC_DRV_ABEOZ9 is not set
# CONFIG_RTC_DRV_ABX80X is not set
CONFIG_RTC_DRV_DS1307=m
# CONFIG_RTC_DRV_DS1307_CENTURY is not set
CONFIG_RTC_DRV_DS1374=m
# CONFIG_RTC_DRV_DS1374_WDT is not set
CONFIG_RTC_DRV_DS1672=m
CONFIG_RTC_DRV_MAX6900=m
CONFIG_RTC_DRV_RS5C372=m
CONFIG_RTC_DRV_ISL1208=m
CONFIG_RTC_DRV_ISL12022=m
CONFIG_RTC_DRV_X1205=m
CONFIG_RTC_DRV_PCF8523=m
# CONFIG_RTC_DRV_PCF85063 is not set
# CONFIG_RTC_DRV_PCF85363 is not set
CONFIG_RTC_DRV_PCF8563=m
CONFIG_RTC_DRV_PCF8583=m
CONFIG_RTC_DRV_M41T80=m
CONFIG_RTC_DRV_M41T80_WDT=y
CONFIG_RTC_DRV_BQ32K=m
# CONFIG_RTC_DRV_S35390A is not set
CONFIG_RTC_DRV_FM3130=m
# CONFIG_RTC_DRV_RX8010 is not set
CONFIG_RTC_DRV_RX8581=m
CONFIG_RTC_DRV_RX8025=m
CONFIG_RTC_DRV_EM3027=m
# CONFIG_RTC_DRV_RV3028 is not set
# CONFIG_RTC_DRV_RV3032 is not set
# CONFIG_RTC_DRV_RV8803 is not set
# CONFIG_RTC_DRV_SD3078 is not set

#
# SPI RTC drivers
#
# CONFIG_RTC_DRV_M41T93 is not set
# CONFIG_RTC_DRV_M41T94 is not set
# CONFIG_RTC_DRV_DS1302 is not set
# CONFIG_RTC_DRV_DS1305 is not set
# CONFIG_RTC_DRV_DS1343 is not set
# CONFIG_RTC_DRV_DS1347 is not set
# CONFIG_RTC_DRV_DS1390 is not set
# CONFIG_RTC_DRV_MAX6916 is not set
# CONFIG_RTC_DRV_R9701 is not set
CONFIG_RTC_DRV_RX4581=m
# CONFIG_RTC_DRV_RS5C348 is not set
# CONFIG_RTC_DRV_MAX6902 is not set
# CONFIG_RTC_DRV_PCF2123 is not set
# CONFIG_RTC_DRV_MCP795 is not set
CONFIG_RTC_I2C_AND_SPI=y

#
# SPI and I2C RTC drivers
#
CONFIG_RTC_DRV_DS3232=m
CONFIG_RTC_DRV_DS3232_HWMON=y
# CONFIG_RTC_DRV_PCF2127 is not set
CONFIG_RTC_DRV_RV3029C2=m
# CONFIG_RTC_DRV_RV3029_HWMON is not set
# CONFIG_RTC_DRV_RX6110 is not set

#
# Platform RTC drivers
#
CONFIG_RTC_DRV_CMOS=y
CONFIG_RTC_DRV_DS1286=m
CONFIG_RTC_DRV_DS1511=m
CONFIG_RTC_DRV_DS1553=m
# CONFIG_RTC_DRV_DS1685_FAMILY is not set
CONFIG_RTC_DRV_DS1742=m
CONFIG_RTC_DRV_DS2404=m
CONFIG_RTC_DRV_STK17TA8=m
# CONFIG_RTC_DRV_M48T86 is not set
CONFIG_RTC_DRV_M48T35=m
CONFIG_RTC_DRV_M48T59=m
CONFIG_RTC_DRV_MSM6242=m
CONFIG_RTC_DRV_BQ4802=m
CONFIG_RTC_DRV_RP5C01=m

#
# on-CPU RTC drivers
#
# CONFIG_RTC_DRV_FTRTC010 is not set

#
# HID Sensor RTC drivers
#
# CONFIG_RTC_DRV_GOLDFISH is not set
CONFIG_DMADEVICES=y
# CONFIG_DMADEVICES_DEBUG is not set

#
# DMA Devices
#
CONFIG_DMA_ENGINE=y
CONFIG_DMA_VIRTUAL_CHANNELS=y
CONFIG_DMA_ACPI=y
# CONFIG_ALTERA_MSGDMA is not set
CONFIG_INTEL_IDMA64=m
# CONFIG_INTEL_IDXD is not set
# CONFIG_INTEL_IDXD_COMPAT is not set
CONFIG_INTEL_IOATDMA=m
# CONFIG_PLX_DMA is not set
# CONFIG_XILINX_XDMA is not set
# CONFIG_AMD_PTDMA is not set
# CONFIG_QCOM_HIDMA_MGMT is not set
# CONFIG_QCOM_HIDMA is not set
CONFIG_DW_DMAC_CORE=y
CONFIG_DW_DMAC=m
CONFIG_DW_DMAC_PCI=y
# CONFIG_DW_EDMA is not set
CONFIG_HSU_DMA=y
# CONFIG_SF_PDMA is not set
# CONFIG_INTEL_LDMA is not set

#
# DMA Clients
#
CONFIG_ASYNC_TX_DMA=y
CONFIG_DMATEST=m
CONFIG_DMA_ENGINE_RAID=y

#
# DMABUF options
#
CONFIG_SYNC_FILE=y
CONFIG_SW_SYNC=y
CONFIG_UDMABUF=y
# CONFIG_DMABUF_MOVE_NOTIFY is not set
# CONFIG_DMABUF_DEBUG is not set
# CONFIG_DMABUF_SELFTESTS is not set
CONFIG_DMABUF_HEAPS=y
# CONFIG_DMABUF_SYSFS_STATS is not set
CONFIG_DMABUF_HEAPS_SYSTEM=y
# end of DMABUF options

CONFIG_DCA=m
# CONFIG_AUXDISPLAY is not set
# CONFIG_PANEL is not set
# CONFIG_UIO is not set
CONFIG_VFIO=m
CONFIG_VFIO_CONTAINER=y
CONFIG_VFIO_IOMMU_TYPE1=m
CONFIG_VFIO_NOIOMMU=y
CONFIG_VFIO_VIRQFD=y
CONFIG_VFIO_PCI_CORE=m
CONFIG_VFIO_PCI_MMAP=y
CONFIG_VFIO_PCI_INTX=y
CONFIG_VFIO_PCI=m
# CONFIG_VFIO_PCI_VGA is not set
# CONFIG_VFIO_PCI_IGD is not set
CONFIG_IRQ_BYPASS_MANAGER=m
CONFIG_VIRT_DRIVERS=y
CONFIG_VMGENID=y
# CONFIG_VBOXGUEST is not set
# CONFIG_NITRO_ENCLAVES is not set
# CONFIG_EFI_SECRET is not set
CONFIG_TDX_GUEST_DRIVER=m
CONFIG_VIRTIO_ANCHOR=y
CONFIG_VIRTIO=y
CONFIG_VIRTIO_PCI_LIB=y
CONFIG_VIRTIO_PCI_LIB_LEGACY=y
CONFIG_VIRTIO_MENU=y
CONFIG_VIRTIO_PCI=y
CONFIG_VIRTIO_PCI_LEGACY=y
# CONFIG_VIRTIO_PMEM is not set
CONFIG_VIRTIO_BALLOON=m
# CONFIG_VIRTIO_MEM is not set
CONFIG_VIRTIO_INPUT=m
# CONFIG_VIRTIO_MMIO is not set
CONFIG_VIRTIO_DMA_SHARED_BUFFER=m
# CONFIG_VDPA is not set
CONFIG_VHOST_IOTLB=m
CONFIG_VHOST_TASK=y
CONFIG_VHOST=m
CONFIG_VHOST_MENU=y
CONFIG_VHOST_NET=m
CONFIG_VHOST_VSOCK=m
# CONFIG_VHOST_CROSS_ENDIAN_LEGACY is not set

#
# Microsoft Hyper-V guest support
#
CONFIG_HYPERV=y
# CONFIG_HYPERV_VTL_MODE is not set
CONFIG_HYPERV_TIMER=y
CONFIG_HYPERV_UTILS=m
CONFIG_HYPERV_BALLOON=m
# end of Microsoft Hyper-V guest support

# CONFIG_GREYBUS is not set
# CONFIG_COMEDI is not set
CONFIG_STAGING=y
# CONFIG_RTS5208 is not set
# CONFIG_VT6655 is not set
# CONFIG_FB_SM750 is not set
# CONFIG_STAGING_MEDIA is not set
# CONFIG_LTE_GDM724X is not set
# CONFIG_FB_TFT is not set
# CONFIG_KS7010 is not set
# CONFIG_PI433 is not set
# CONFIG_FIELDBUS_DEV is not set
# CONFIG_QLGE is not set
# CONFIG_VME_BUS is not set
# CONFIG_CHROME_PLATFORMS is not set
# CONFIG_MELLANOX_PLATFORM is not set
CONFIG_SURFACE_PLATFORMS=y
# CONFIG_SURFACE3_WMI is not set
# CONFIG_SURFACE_3_POWER_OPREGION is not set
# CONFIG_SURFACE_GPE is not set
# CONFIG_SURFACE_HOTPLUG is not set
# CONFIG_SURFACE_PRO3_BUTTON is not set
CONFIG_X86_PLATFORM_DEVICES=y
CONFIG_ACPI_WMI=m
CONFIG_WMI_BMOF=m
# CONFIG_HUAWEI_WMI is not set
# CONFIG_UV_SYSFS is not set
CONFIG_MXM_WMI=m
# CONFIG_NVIDIA_WMI_EC_BACKLIGHT is not set
# CONFIG_XIAOMI_WMI is not set
# CONFIG_GIGABYTE_WMI is not set
# CONFIG_YOGABOOK_WMI is not set
CONFIG_ACERHDF=m
# CONFIG_ACER_WIRELESS is not set
CONFIG_ACER_WMI=m
# CONFIG_ADV_SWBUTTON is not set
CONFIG_APPLE_GMUX=m
CONFIG_ASUS_LAPTOP=m
# CONFIG_ASUS_WIRELESS is not set
# CONFIG_ASUS_WMI is not set
# CONFIG_ASUS_TF103C_DOCK is not set
# CONFIG_MERAKI_MX100 is not set
CONFIG_EEEPC_LAPTOP=m
# CONFIG_X86_PLATFORM_DRIVERS_DELL is not set
CONFIG_AMILO_RFKILL=m
CONFIG_FUJITSU_LAPTOP=m
CONFIG_FUJITSU_TABLET=m
# CONFIG_GPD_POCKET_FAN is not set
# CONFIG_X86_PLATFORM_DRIVERS_HP is not set
# CONFIG_WIRELESS_HOTKEY is not set
# CONFIG_IBM_RTL is not set
CONFIG_IDEAPAD_LAPTOP=m
# CONFIG_LENOVO_YMC is not set
CONFIG_SENSORS_HDAPS=m
# CONFIG_THINKPAD_ACPI is not set
# CONFIG_THINKPAD_LMI is not set
# CONFIG_INTEL_ATOMISP2_PM is not set
# CONFIG_INTEL_IFS is not set
# CONFIG_INTEL_SAR_INT1092 is not set
CONFIG_INTEL_PMC_CORE=m

#
# Intel Speed Select Technology interface support
#
# CONFIG_INTEL_SPEED_SELECT_INTERFACE is not set
# end of Intel Speed Select Technology interface support

CONFIG_INTEL_WMI=y
# CONFIG_INTEL_WMI_SBL_FW_UPDATE is not set
CONFIG_INTEL_WMI_THUNDERBOLT=m

#
# Intel Uncore Frequency Control
#
# CONFIG_INTEL_UNCORE_FREQ_CONTROL is not set
# end of Intel Uncore Frequency Control

CONFIG_INTEL_HID_EVENT=m
CONFIG_INTEL_VBTN=m
# CONFIG_INTEL_INT0002_VGPIO is not set
CONFIG_INTEL_OAKTRAIL=m
# CONFIG_INTEL_PUNIT_IPC is not set
CONFIG_INTEL_RST=m
# CONFIG_INTEL_SMARTCONNECT is not set
CONFIG_INTEL_TURBO_MAX_3=y
# CONFIG_INTEL_VSEC is not set
# CONFIG_MSI_EC is not set
CONFIG_MSI_LAPTOP=m
CONFIG_MSI_WMI=m
# CONFIG_PCENGINES_APU2 is not set
# CONFIG_BARCO_P50_GPIO is not set
CONFIG_SAMSUNG_LAPTOP=m
CONFIG_SAMSUNG_Q10=m
CONFIG_TOSHIBA_BT_RFKILL=m
# CONFIG_TOSHIBA_HAPS is not set
# CONFIG_TOSHIBA_WMI is not set
CONFIG_ACPI_CMPC=m
CONFIG_COMPAL_LAPTOP=m
# CONFIG_LG_LAPTOP is not set
CONFIG_PANASONIC_LAPTOP=m
CONFIG_SONY_LAPTOP=m
CONFIG_SONYPI_COMPAT=y
# CONFIG_SYSTEM76_ACPI is not set
CONFIG_TOPSTAR_LAPTOP=m
# CONFIG_SERIAL_MULTI_INSTANTIATE is not set
CONFIG_MLX_PLATFORM=m
CONFIG_INTEL_IPS=m
# CONFIG_INTEL_SCU_PCI is not set
# CONFIG_INTEL_SCU_PLATFORM is not set
# CONFIG_SIEMENS_SIMATIC_IPC is not set
# CONFIG_WINMATE_FM07_KEYS is not set
CONFIG_P2SB=y
CONFIG_HAVE_CLK=y
CONFIG_HAVE_CLK_PREPARE=y
CONFIG_COMMON_CLK=y
# CONFIG_LMK04832 is not set
# CONFIG_COMMON_CLK_MAX9485 is not set
# CONFIG_COMMON_CLK_SI5341 is not set
# CONFIG_COMMON_CLK_SI5351 is not set
# CONFIG_COMMON_CLK_SI544 is not set
# CONFIG_COMMON_CLK_CDCE706 is not set
# CONFIG_COMMON_CLK_CS2000_CP is not set
# CONFIG_COMMON_CLK_PWM is not set
# CONFIG_XILINX_VCU is not set
# CONFIG_HWSPINLOCK is not set

#
# Clock Source drivers
#
CONFIG_CLKEVT_I8253=y
CONFIG_I8253_LOCK=y
CONFIG_CLKBLD_I8253=y
# end of Clock Source drivers

CONFIG_MAILBOX=y
CONFIG_PCC=y
# CONFIG_ALTERA_MBOX is not set
CONFIG_IOMMU_IOVA=y
CONFIG_IOMMU_API=y
CONFIG_IOMMU_SUPPORT=y

#
# Generic IOMMU Pagetable Support
#
# end of Generic IOMMU Pagetable Support

# CONFIG_IOMMU_DEBUGFS is not set
# CONFIG_IOMMU_DEFAULT_DMA_STRICT is not set
CONFIG_IOMMU_DEFAULT_DMA_LAZY=y
# CONFIG_IOMMU_DEFAULT_PASSTHROUGH is not set
CONFIG_IOMMU_DMA=y
CONFIG_IOMMU_SVA=y
# CONFIG_AMD_IOMMU is not set
CONFIG_DMAR_TABLE=y
CONFIG_INTEL_IOMMU=y
CONFIG_INTEL_IOMMU_SVM=y
# CONFIG_INTEL_IOMMU_DEFAULT_ON is not set
CONFIG_INTEL_IOMMU_FLOPPY_WA=y
CONFIG_INTEL_IOMMU_SCALABLE_MODE_DEFAULT_ON=y
CONFIG_INTEL_IOMMU_PERF_EVENTS=y
CONFIG_IOMMUFD=m
CONFIG_IOMMUFD_TEST=y
CONFIG_IRQ_REMAP=y
CONFIG_HYPERV_IOMMU=y
# CONFIG_VIRTIO_IOMMU is not set

#
# Remoteproc drivers
#
# CONFIG_REMOTEPROC is not set
# end of Remoteproc drivers

#
# Rpmsg drivers
#
# CONFIG_RPMSG_QCOM_GLINK_RPM is not set
# CONFIG_RPMSG_VIRTIO is not set
# end of Rpmsg drivers

# CONFIG_SOUNDWIRE is not set

#
# SOC (System On Chip) specific Drivers
#

#
# Amlogic SoC drivers
#
# end of Amlogic SoC drivers

#
# Broadcom SoC drivers
#
# end of Broadcom SoC drivers

#
# NXP/Freescale QorIQ SoC drivers
#
# end of NXP/Freescale QorIQ SoC drivers

#
# fujitsu SoC drivers
#
# end of fujitsu SoC drivers

#
# i.MX SoC drivers
#
# end of i.MX SoC drivers

#
# Enable LiteX SoC Builder specific drivers
#
# end of Enable LiteX SoC Builder specific drivers

# CONFIG_WPCM450_SOC is not set

#
# Qualcomm SoC drivers
#
# end of Qualcomm SoC drivers

# CONFIG_SOC_TI is not set

#
# Xilinx SoC drivers
#
# end of Xilinx SoC drivers
# end of SOC (System On Chip) specific Drivers

# CONFIG_PM_DEVFREQ is not set
# CONFIG_EXTCON is not set
# CONFIG_MEMORY is not set
# CONFIG_IIO is not set
CONFIG_NTB=m
# CONFIG_NTB_MSI is not set
# CONFIG_NTB_AMD is not set
# CONFIG_NTB_IDT is not set
# CONFIG_NTB_INTEL is not set
# CONFIG_NTB_EPF is not set
# CONFIG_NTB_SWITCHTEC is not set
# CONFIG_NTB_PINGPONG is not set
# CONFIG_NTB_TOOL is not set
# CONFIG_NTB_PERF is not set
# CONFIG_NTB_TRANSPORT is not set
CONFIG_PWM=y
CONFIG_PWM_SYSFS=y
# CONFIG_PWM_DEBUG is not set
# CONFIG_PWM_CLK is not set
# CONFIG_PWM_DWC is not set
CONFIG_PWM_LPSS=m
CONFIG_PWM_LPSS_PCI=m
CONFIG_PWM_LPSS_PLATFORM=m
# CONFIG_PWM_PCA9685 is not set

#
# IRQ chip support
#
# end of IRQ chip support

# CONFIG_IPACK_BUS is not set
# CONFIG_RESET_CONTROLLER is not set

#
# PHY Subsystem
#
# CONFIG_GENERIC_PHY is not set
# CONFIG_USB_LGM_PHY is not set
# CONFIG_PHY_CAN_TRANSCEIVER is not set

#
# PHY drivers for Broadcom platforms
#
# CONFIG_BCM_KONA_USB2_PHY is not set
# end of PHY drivers for Broadcom platforms

# CONFIG_PHY_PXA_28NM_HSIC is not set
# CONFIG_PHY_PXA_28NM_USB2 is not set
# CONFIG_PHY_INTEL_LGM_EMMC is not set
# end of PHY Subsystem

CONFIG_POWERCAP=y
CONFIG_INTEL_RAPL_CORE=m
CONFIG_INTEL_RAPL=m
CONFIG_IDLE_INJECT=y
# CONFIG_MCB is not set

#
# Performance monitor support
#
# end of Performance monitor support

CONFIG_RAS=y
# CONFIG_RAS_CEC is not set
# CONFIG_USB4 is not set

#
# Android
#
# CONFIG_ANDROID_BINDER_IPC is not set
# end of Android

CONFIG_LIBNVDIMM=m
CONFIG_BLK_DEV_PMEM=m
CONFIG_ND_CLAIM=y
CONFIG_ND_BTT=m
CONFIG_BTT=y
CONFIG_ND_PFN=m
CONFIG_NVDIMM_PFN=y
CONFIG_NVDIMM_DAX=y
CONFIG_NVDIMM_KEYS=y
# CONFIG_NVDIMM_SECURITY_TEST is not set
CONFIG_DAX=y
CONFIG_DEV_DAX=m
CONFIG_DEV_DAX_PMEM=m
CONFIG_DEV_DAX_KMEM=m
CONFIG_NVMEM=y
CONFIG_NVMEM_SYSFS=y

#
# Layout Types
#
# CONFIG_NVMEM_LAYOUT_SL28_VPD is not set
# CONFIG_NVMEM_LAYOUT_ONIE_TLV is not set
# end of Layout Types

# CONFIG_NVMEM_RMEM is not set

#
# HW tracing support
#
# CONFIG_STM is not set
CONFIG_INTEL_TH=m
CONFIG_INTEL_TH_PCI=m
CONFIG_INTEL_TH_ACPI=m
CONFIG_INTEL_TH_GTH=m
CONFIG_INTEL_TH_MSU=m
CONFIG_INTEL_TH_PTI=m
# CONFIG_INTEL_TH_DEBUG is not set
# end of HW tracing support

# CONFIG_FPGA is not set
# CONFIG_SIOX is not set
# CONFIG_SLIMBUS is not set
# CONFIG_INTERCONNECT is not set
# CONFIG_COUNTER is not set
# CONFIG_MOST is not set
# CONFIG_PECI is not set
# CONFIG_HTE is not set
# end of Device Drivers

#
# File systems
#
CONFIG_DCACHE_WORD_ACCESS=y
# CONFIG_VALIDATE_FS_PARSER is not set
CONFIG_FS_IOMAP=y
CONFIG_LEGACY_DIRECT_IO=y
CONFIG_EXT2_FS=m
# CONFIG_EXT2_FS_XATTR is not set
# CONFIG_EXT3_FS is not set
CONFIG_EXT4_FS=y
CONFIG_EXT4_FS_POSIX_ACL=y
CONFIG_EXT4_FS_SECURITY=y
# CONFIG_EXT4_DEBUG is not set
CONFIG_JBD2=y
# CONFIG_JBD2_DEBUG is not set
CONFIG_FS_MBCACHE=y
# CONFIG_REISERFS_FS is not set
# CONFIG_JFS_FS is not set
CONFIG_XFS_FS=m
CONFIG_XFS_SUPPORT_V4=y
CONFIG_XFS_SUPPORT_ASCII_CI=y
CONFIG_XFS_QUOTA=y
CONFIG_XFS_POSIX_ACL=y
CONFIG_XFS_RT=y
CONFIG_XFS_DRAIN_INTENTS=y
CONFIG_XFS_ONLINE_SCRUB=y
# CONFIG_XFS_ONLINE_REPAIR is not set
CONFIG_XFS_DEBUG=y
CONFIG_XFS_ASSERT_FATAL=y
# CONFIG_GFS2_FS is not set
CONFIG_OCFS2_FS=m
CONFIG_OCFS2_FS_O2CB=m
CONFIG_OCFS2_FS_STATS=y
CONFIG_OCFS2_DEBUG_MASKLOG=y
# CONFIG_OCFS2_DEBUG_FS is not set
CONFIG_BTRFS_FS=m
CONFIG_BTRFS_FS_POSIX_ACL=y
# CONFIG_BTRFS_FS_CHECK_INTEGRITY is not set
# CONFIG_BTRFS_FS_RUN_SANITY_TESTS is not set
# CONFIG_BTRFS_DEBUG is not set
# CONFIG_BTRFS_ASSERT is not set
# CONFIG_BTRFS_FS_REF_VERIFY is not set
# CONFIG_NILFS2_FS is not set
CONFIG_F2FS_FS=m
CONFIG_F2FS_STAT_FS=y
CONFIG_F2FS_FS_XATTR=y
CONFIG_F2FS_FS_POSIX_ACL=y
# CONFIG_F2FS_FS_SECURITY is not set
# CONFIG_F2FS_CHECK_FS is not set
# CONFIG_F2FS_FAULT_INJECTION is not set
# CONFIG_F2FS_FS_COMPRESSION is not set
CONFIG_F2FS_IOSTAT=y
# CONFIG_F2FS_UNFAIR_RWSEM is not set
CONFIG_FS_DAX=y
CONFIG_FS_DAX_PMD=y
CONFIG_FS_POSIX_ACL=y
CONFIG_EXPORTFS=y
CONFIG_EXPORTFS_BLOCK_OPS=y
CONFIG_FILE_LOCKING=y
CONFIG_FS_ENCRYPTION=y
CONFIG_FS_ENCRYPTION_ALGS=y
# CONFIG_FS_VERITY is not set
CONFIG_FSNOTIFY=y
CONFIG_DNOTIFY=y
CONFIG_INOTIFY_USER=y
CONFIG_FANOTIFY=y
CONFIG_FANOTIFY_ACCESS_PERMISSIONS=y
CONFIG_QUOTA=y
CONFIG_QUOTA_NETLINK_INTERFACE=y
# CONFIG_QUOTA_DEBUG is not set
CONFIG_QUOTA_TREE=y
# CONFIG_QFMT_V1 is not set
CONFIG_QFMT_V2=y
CONFIG_QUOTACTL=y
CONFIG_AUTOFS4_FS=y
CONFIG_AUTOFS_FS=y
CONFIG_FUSE_FS=m
CONFIG_CUSE=m
# CONFIG_VIRTIO_FS is not set
CONFIG_OVERLAY_FS=m
# CONFIG_OVERLAY_FS_REDIRECT_DIR is not set
# CONFIG_OVERLAY_FS_REDIRECT_ALWAYS_FOLLOW is not set
# CONFIG_OVERLAY_FS_INDEX is not set
# CONFIG_OVERLAY_FS_XINO_AUTO is not set
# CONFIG_OVERLAY_FS_METACOPY is not set

#
# Caches
#
CONFIG_NETFS_SUPPORT=m
# CONFIG_NETFS_STATS is not set
# CONFIG_FSCACHE is not set
# end of Caches

#
# CD-ROM/DVD Filesystems
#
# CONFIG_ISO9660_FS is not set
CONFIG_UDF_FS=m
# end of CD-ROM/DVD Filesystems

#
# DOS/FAT/EXFAT/NT Filesystems
#
CONFIG_FAT_FS=m
CONFIG_MSDOS_FS=m
CONFIG_VFAT_FS=m
CONFIG_FAT_DEFAULT_CODEPAGE=437
CONFIG_FAT_DEFAULT_IOCHARSET="ascii"
# CONFIG_FAT_DEFAULT_UTF8 is not set
# CONFIG_EXFAT_FS is not set
# CONFIG_NTFS_FS is not set
# CONFIG_NTFS3_FS is not set
# end of DOS/FAT/EXFAT/NT Filesystems

#
# Pseudo filesystems
#
CONFIG_PROC_FS=y
CONFIG_PROC_KCORE=y
CONFIG_PROC_VMCORE=y
CONFIG_PROC_VMCORE_DEVICE_DUMP=y
CONFIG_PROC_SYSCTL=y
CONFIG_PROC_PAGE_MONITOR=y
CONFIG_PROC_CHILDREN=y
CONFIG_PROC_PID_ARCH_STATUS=y
CONFIG_PROC_CPU_RESCTRL=y
CONFIG_KERNFS=y
CONFIG_SYSFS=y
CONFIG_TMPFS=y
CONFIG_TMPFS_POSIX_ACL=y
CONFIG_TMPFS_XATTR=y
# CONFIG_TMPFS_INODE64 is not set
CONFIG_HUGETLBFS=y
CONFIG_HUGETLB_PAGE=y
CONFIG_HUGETLB_PAGE_OPTIMIZE_VMEMMAP=y
# CONFIG_HUGETLB_PAGE_OPTIMIZE_VMEMMAP_DEFAULT_ON is not set
CONFIG_MEMFD_CREATE=y
CONFIG_ARCH_HAS_GIGANTIC_PAGE=y
CONFIG_CONFIGFS_FS=y
CONFIG_EFIVAR_FS=y
# end of Pseudo filesystems

CONFIG_MISC_FILESYSTEMS=y
# CONFIG_ORANGEFS_FS is not set
# CONFIG_ADFS_FS is not set
# CONFIG_AFFS_FS is not set
# CONFIG_ECRYPT_FS is not set
# CONFIG_HFS_FS is not set
# CONFIG_HFSPLUS_FS is not set
# CONFIG_BEFS_FS is not set
# CONFIG_BFS_FS is not set
# CONFIG_EFS_FS is not set
CONFIG_CRAMFS=m
CONFIG_CRAMFS_BLOCKDEV=y
CONFIG_SQUASHFS=m
# CONFIG_SQUASHFS_FILE_CACHE is not set
CONFIG_SQUASHFS_FILE_DIRECT=y
CONFIG_SQUASHFS_DECOMP_SINGLE=y
# CONFIG_SQUASHFS_CHOICE_DECOMP_BY_MOUNT is not set
CONFIG_SQUASHFS_COMPILE_DECOMP_SINGLE=y
# CONFIG_SQUASHFS_COMPILE_DECOMP_MULTI is not set
# CONFIG_SQUASHFS_COMPILE_DECOMP_MULTI_PERCPU is not set
CONFIG_SQUASHFS_XATTR=y
CONFIG_SQUASHFS_ZLIB=y
# CONFIG_SQUASHFS_LZ4 is not set
CONFIG_SQUASHFS_LZO=y
CONFIG_SQUASHFS_XZ=y
# CONFIG_SQUASHFS_ZSTD is not set
# CONFIG_SQUASHFS_4K_DEVBLK_SIZE is not set
# CONFIG_SQUASHFS_EMBEDDED is not set
CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE=3
# CONFIG_VXFS_FS is not set
# CONFIG_MINIX_FS is not set
# CONFIG_OMFS_FS is not set
# CONFIG_HPFS_FS is not set
# CONFIG_QNX4FS_FS is not set
# CONFIG_QNX6FS_FS is not set
# CONFIG_ROMFS_FS is not set
CONFIG_PSTORE=y
CONFIG_PSTORE_DEFAULT_KMSG_BYTES=10240
CONFIG_PSTORE_DEFLATE_COMPRESS=y
# CONFIG_PSTORE_LZO_COMPRESS is not set
# CONFIG_PSTORE_LZ4_COMPRESS is not set
# CONFIG_PSTORE_LZ4HC_COMPRESS is not set
# CONFIG_PSTORE_842_COMPRESS is not set
# CONFIG_PSTORE_ZSTD_COMPRESS is not set
CONFIG_PSTORE_COMPRESS=y
CONFIG_PSTORE_DEFLATE_COMPRESS_DEFAULT=y
CONFIG_PSTORE_COMPRESS_DEFAULT="deflate"
CONFIG_PSTORE_CONSOLE=y
CONFIG_PSTORE_PMSG=y
# CONFIG_PSTORE_FTRACE is not set
CONFIG_PSTORE_RAM=m
# CONFIG_PSTORE_BLK is not set
# CONFIG_SYSV_FS is not set
# CONFIG_UFS_FS is not set
# CONFIG_EROFS_FS is not set
CONFIG_NETWORK_FILESYSTEMS=y
CONFIG_NFS_FS=y
# CONFIG_NFS_V2 is not set
CONFIG_NFS_V3=y
CONFIG_NFS_V3_ACL=y
CONFIG_NFS_V4=m
# CONFIG_NFS_SWAP is not set
CONFIG_NFS_V4_1=y
CONFIG_NFS_V4_2=y
CONFIG_PNFS_FILE_LAYOUT=m
CONFIG_PNFS_BLOCK=m
CONFIG_PNFS_FLEXFILE_LAYOUT=m
CONFIG_NFS_V4_1_IMPLEMENTATION_ID_DOMAIN="kernel.org"
# CONFIG_NFS_V4_1_MIGRATION is not set
CONFIG_NFS_V4_SECURITY_LABEL=y
CONFIG_ROOT_NFS=y
# CONFIG_NFS_USE_LEGACY_DNS is not set
CONFIG_NFS_USE_KERNEL_DNS=y
CONFIG_NFS_DEBUG=y
CONFIG_NFS_DISABLE_UDP_SUPPORT=y
# CONFIG_NFS_V4_2_READ_PLUS is not set
CONFIG_NFSD=m
# CONFIG_NFSD_V2 is not set
CONFIG_NFSD_V3_ACL=y
CONFIG_NFSD_V4=y
CONFIG_NFSD_PNFS=y
# CONFIG_NFSD_BLOCKLAYOUT is not set
CONFIG_NFSD_SCSILAYOUT=y
# CONFIG_NFSD_FLEXFILELAYOUT is not set
# CONFIG_NFSD_V4_2_INTER_SSC is not set
CONFIG_NFSD_V4_SECURITY_LABEL=y
CONFIG_GRACE_PERIOD=y
CONFIG_LOCKD=y
CONFIG_LOCKD_V4=y
CONFIG_NFS_ACL_SUPPORT=y
CONFIG_NFS_COMMON=y
CONFIG_NFS_V4_2_SSC_HELPER=y
CONFIG_SUNRPC=y
CONFIG_SUNRPC_GSS=m
CONFIG_SUNRPC_BACKCHANNEL=y
CONFIG_RPCSEC_GSS_KRB5=m
CONFIG_RPCSEC_GSS_KRB5_CRYPTOSYSTEM=y
# CONFIG_RPCSEC_GSS_KRB5_ENCTYPES_DES is not set
CONFIG_RPCSEC_GSS_KRB5_ENCTYPES_AES_SHA1=y
# CONFIG_RPCSEC_GSS_KRB5_ENCTYPES_CAMELLIA is not set
# CONFIG_RPCSEC_GSS_KRB5_ENCTYPES_AES_SHA2 is not set
CONFIG_SUNRPC_DEBUG=y
# CONFIG_CEPH_FS is not set
CONFIG_CIFS=m
CONFIG_CIFS_STATS2=y
CONFIG_CIFS_ALLOW_INSECURE_LEGACY=y
CONFIG_CIFS_UPCALL=y
CONFIG_CIFS_XATTR=y
CONFIG_CIFS_POSIX=y
CONFIG_CIFS_DEBUG=y
# CONFIG_CIFS_DEBUG2 is not set
# CONFIG_CIFS_DEBUG_DUMP_KEYS is not set
CONFIG_CIFS_DFS_UPCALL=y
# CONFIG_CIFS_SWN_UPCALL is not set
# CONFIG_SMB_SERVER is not set
CONFIG_SMBFS_COMMON=m
# CONFIG_CODA_FS is not set
# CONFIG_AFS_FS is not set
# CONFIG_9P_FS is not set
CONFIG_NLS=y
CONFIG_NLS_DEFAULT="utf8"
CONFIG_NLS_CODEPAGE_437=y
CONFIG_NLS_CODEPAGE_737=m
CONFIG_NLS_CODEPAGE_775=m
CONFIG_NLS_CODEPAGE_850=m
CONFIG_NLS_CODEPAGE_852=m
CONFIG_NLS_CODEPAGE_855=m
CONFIG_NLS_CODEPAGE_857=m
CONFIG_NLS_CODEPAGE_860=m
CONFIG_NLS_CODEPAGE_861=m
CONFIG_NLS_CODEPAGE_862=m
CONFIG_NLS_CODEPAGE_863=m
CONFIG_NLS_CODEPAGE_864=m
CONFIG_NLS_CODEPAGE_865=m
CONFIG_NLS_CODEPAGE_866=m
CONFIG_NLS_CODEPAGE_869=m
CONFIG_NLS_CODEPAGE_936=m
CONFIG_NLS_CODEPAGE_950=m
CONFIG_NLS_CODEPAGE_932=m
CONFIG_NLS_CODEPAGE_949=m
CONFIG_NLS_CODEPAGE_874=m
CONFIG_NLS_ISO8859_8=m
CONFIG_NLS_CODEPAGE_1250=m
CONFIG_NLS_CODEPAGE_1251=m
CONFIG_NLS_ASCII=y
CONFIG_NLS_ISO8859_1=m
CONFIG_NLS_ISO8859_2=m
CONFIG_NLS_ISO8859_3=m
CONFIG_NLS_ISO8859_4=m
CONFIG_NLS_ISO8859_5=m
CONFIG_NLS_ISO8859_6=m
CONFIG_NLS_ISO8859_7=m
CONFIG_NLS_ISO8859_9=m
CONFIG_NLS_ISO8859_13=m
CONFIG_NLS_ISO8859_14=m
CONFIG_NLS_ISO8859_15=m
CONFIG_NLS_KOI8_R=m
CONFIG_NLS_KOI8_U=m
CONFIG_NLS_MAC_ROMAN=m
CONFIG_NLS_MAC_CELTIC=m
CONFIG_NLS_MAC_CENTEURO=m
CONFIG_NLS_MAC_CROATIAN=m
CONFIG_NLS_MAC_CYRILLIC=m
CONFIG_NLS_MAC_GAELIC=m
CONFIG_NLS_MAC_GREEK=m
CONFIG_NLS_MAC_ICELAND=m
CONFIG_NLS_MAC_INUIT=m
CONFIG_NLS_MAC_ROMANIAN=m
CONFIG_NLS_MAC_TURKISH=m
CONFIG_NLS_UTF8=m
# CONFIG_DLM is not set
# CONFIG_UNICODE is not set
CONFIG_IO_WQ=y
# end of File systems

#
# Security options
#
CONFIG_KEYS=y
# CONFIG_KEYS_REQUEST_CACHE is not set
CONFIG_PERSISTENT_KEYRINGS=y
CONFIG_TRUSTED_KEYS=y
CONFIG_TRUSTED_KEYS_TPM=y
CONFIG_ENCRYPTED_KEYS=y
# CONFIG_USER_DECRYPTED_DATA is not set
# CONFIG_KEY_DH_OPERATIONS is not set
# CONFIG_SECURITY_DMESG_RESTRICT is not set
CONFIG_SECURITY=y
CONFIG_SECURITYFS=y
CONFIG_SECURITY_NETWORK=y
CONFIG_SECURITY_NETWORK_XFRM=y
CONFIG_SECURITY_PATH=y
CONFIG_INTEL_TXT=y
CONFIG_HAVE_HARDENED_USERCOPY_ALLOCATOR=y
CONFIG_HARDENED_USERCOPY=y
CONFIG_FORTIFY_SOURCE=y
# CONFIG_STATIC_USERMODEHELPER is not set
# CONFIG_SECURITY_SELINUX is not set
# CONFIG_SECURITY_SMACK is not set
# CONFIG_SECURITY_TOMOYO is not set
# CONFIG_SECURITY_APPARMOR is not set
# CONFIG_SECURITY_LOADPIN is not set
CONFIG_SECURITY_YAMA=y
# CONFIG_SECURITY_SAFESETID is not set
# CONFIG_SECURITY_LOCKDOWN_LSM is not set
CONFIG_SECURITY_LANDLOCK=y
CONFIG_INTEGRITY=y
CONFIG_INTEGRITY_SIGNATURE=y
CONFIG_INTEGRITY_ASYMMETRIC_KEYS=y
CONFIG_INTEGRITY_TRUSTED_KEYRING=y
# CONFIG_INTEGRITY_PLATFORM_KEYRING is not set
CONFIG_INTEGRITY_AUDIT=y
CONFIG_IMA=y
# CONFIG_IMA_KEXEC is not set
CONFIG_IMA_MEASURE_PCR_IDX=10
CONFIG_IMA_NG_TEMPLATE=y
# CONFIG_IMA_SIG_TEMPLATE is not set
CONFIG_IMA_DEFAULT_TEMPLATE="ima-ng"
CONFIG_IMA_DEFAULT_HASH_SHA1=y
# CONFIG_IMA_DEFAULT_HASH_SHA256 is not set
# CONFIG_IMA_DEFAULT_HASH_SHA512 is not set
CONFIG_IMA_DEFAULT_HASH="sha1"
# CONFIG_IMA_WRITE_POLICY is not set
# CONFIG_IMA_READ_POLICY is not set
CONFIG_IMA_APPRAISE=y
CONFIG_IMA_ARCH_POLICY=y
# CONFIG_IMA_APPRAISE_BUILD_POLICY is not set
CONFIG_IMA_APPRAISE_BOOTPARAM=y
# CONFIG_IMA_APPRAISE_MODSIG is not set
CONFIG_IMA_TRUSTED_KEYRING=y
# CONFIG_IMA_BLACKLIST_KEYRING is not set
# CONFIG_IMA_LOAD_X509 is not set
CONFIG_IMA_MEASURE_ASYMMETRIC_KEYS=y
CONFIG_IMA_QUEUE_EARLY_BOOT_KEYS=y
CONFIG_IMA_SECURE_AND_OR_TRUSTED_BOOT=y
# CONFIG_IMA_DISABLE_HTABLE is not set
# CONFIG_EVM is not set
CONFIG_DEFAULT_SECURITY_DAC=y
CONFIG_LSM="landlock,lockdown,yama,loadpin,safesetid,bpf"

#
# Kernel hardening options
#

#
# Memory initialization
#
CONFIG_INIT_STACK_NONE=y
# CONFIG_GCC_PLUGIN_STRUCTLEAK_USER is not set
CONFIG_GCC_PLUGIN_STACKLEAK=y
# CONFIG_GCC_PLUGIN_STACKLEAK_VERBOSE is not set
CONFIG_STACKLEAK_TRACK_MIN_SIZE=100
# CONFIG_STACKLEAK_METRICS is not set
# CONFIG_STACKLEAK_RUNTIME_DISABLE is not set
CONFIG_INIT_ON_ALLOC_DEFAULT_ON=y
CONFIG_INIT_ON_FREE_DEFAULT_ON=y
CONFIG_CC_HAS_ZERO_CALL_USED_REGS=y
# CONFIG_ZERO_CALL_USED_REGS is not set
# end of Memory initialization

CONFIG_RANDSTRUCT_NONE=y
# CONFIG_RANDSTRUCT_FULL is not set
# CONFIG_RANDSTRUCT_PERFORMANCE is not set
# end of Kernel hardening options
# end of Security options

CONFIG_XOR_BLOCKS=m
CONFIG_ASYNC_CORE=m
CONFIG_ASYNC_MEMCPY=m
CONFIG_ASYNC_XOR=m
CONFIG_ASYNC_PQ=m
CONFIG_ASYNC_RAID6_RECOV=m
CONFIG_CRYPTO=y

#
# Crypto core or helper
#
CONFIG_CRYPTO_ALGAPI=y
CONFIG_CRYPTO_ALGAPI2=y
CONFIG_CRYPTO_AEAD=y
CONFIG_CRYPTO_AEAD2=y
CONFIG_CRYPTO_SKCIPHER=y
CONFIG_CRYPTO_SKCIPHER2=y
CONFIG_CRYPTO_HASH=y
CONFIG_CRYPTO_HASH2=y
CONFIG_CRYPTO_RNG=y
CONFIG_CRYPTO_RNG2=y
CONFIG_CRYPTO_RNG_DEFAULT=y
CONFIG_CRYPTO_AKCIPHER2=y
CONFIG_CRYPTO_AKCIPHER=y
CONFIG_CRYPTO_KPP2=y
CONFIG_CRYPTO_KPP=m
CONFIG_CRYPTO_ACOMP2=y
CONFIG_CRYPTO_MANAGER=y
CONFIG_CRYPTO_MANAGER2=y
CONFIG_CRYPTO_USER=m
CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
CONFIG_CRYPTO_NULL=y
CONFIG_CRYPTO_NULL2=y
CONFIG_CRYPTO_PCRYPT=m
CONFIG_CRYPTO_CRYPTD=y
CONFIG_CRYPTO_AUTHENC=m
# CONFIG_CRYPTO_TEST is not set
CONFIG_CRYPTO_SIMD=y
# end of Crypto core or helper

#
# Public-key cryptography
#
CONFIG_CRYPTO_RSA=y
CONFIG_CRYPTO_DH=m
# CONFIG_CRYPTO_DH_RFC7919_GROUPS is not set
CONFIG_CRYPTO_ECC=m
CONFIG_CRYPTO_ECDH=m
# CONFIG_CRYPTO_ECDSA is not set
# CONFIG_CRYPTO_ECRDSA is not set
# CONFIG_CRYPTO_SM2 is not set
# CONFIG_CRYPTO_CURVE25519 is not set
# end of Public-key cryptography

#
# Block ciphers
#
CONFIG_CRYPTO_AES=y
# CONFIG_CRYPTO_AES_TI is not set
CONFIG_CRYPTO_ANUBIS=m
# CONFIG_CRYPTO_ARIA is not set
CONFIG_CRYPTO_BLOWFISH=m
CONFIG_CRYPTO_BLOWFISH_COMMON=m
CONFIG_CRYPTO_CAMELLIA=m
CONFIG_CRYPTO_CAST_COMMON=m
CONFIG_CRYPTO_CAST5=m
CONFIG_CRYPTO_CAST6=m
CONFIG_CRYPTO_DES=m
CONFIG_CRYPTO_FCRYPT=m
CONFIG_CRYPTO_KHAZAD=m
CONFIG_CRYPTO_SEED=m
CONFIG_CRYPTO_SERPENT=m
CONFIG_CRYPTO_SM4=y
CONFIG_CRYPTO_SM4_GENERIC=y
CONFIG_CRYPTO_TEA=m
CONFIG_CRYPTO_TWOFISH=m
CONFIG_CRYPTO_TWOFISH_COMMON=m
# end of Block ciphers

#
# Length-preserving ciphers and modes
#
# CONFIG_CRYPTO_ADIANTUM is not set
CONFIG_CRYPTO_ARC4=m
CONFIG_CRYPTO_CHACHA20=m
CONFIG_CRYPTO_CBC=y
CONFIG_CRYPTO_CFB=y
CONFIG_CRYPTO_CTR=y
CONFIG_CRYPTO_CTS=m
CONFIG_CRYPTO_ECB=y
# CONFIG_CRYPTO_HCTR2 is not set
# CONFIG_CRYPTO_KEYWRAP is not set
CONFIG_CRYPTO_LRW=m
# CONFIG_CRYPTO_OFB is not set
CONFIG_CRYPTO_PCBC=m
CONFIG_CRYPTO_XTS=m
# end of Length-preserving ciphers and modes

#
# AEAD (authenticated encryption with associated data) ciphers
#
# CONFIG_CRYPTO_AEGIS128 is not set
# CONFIG_CRYPTO_CHACHA20POLY1305 is not set
CONFIG_CRYPTO_CCM=m
CONFIG_CRYPTO_GCM=y
CONFIG_CRYPTO_SEQIV=y
CONFIG_CRYPTO_ECHAINIV=m
CONFIG_CRYPTO_ESSIV=m
# end of AEAD (authenticated encryption with associated data) ciphers

#
# Hashes, digests, and MACs
#
CONFIG_CRYPTO_BLAKE2B=m
CONFIG_CRYPTO_CMAC=m
CONFIG_CRYPTO_GHASH=y
CONFIG_CRYPTO_HMAC=y
CONFIG_CRYPTO_MD4=m
CONFIG_CRYPTO_MD5=y
CONFIG_CRYPTO_MICHAEL_MIC=m
# CONFIG_CRYPTO_POLY1305 is not set
CONFIG_CRYPTO_RMD160=m
CONFIG_CRYPTO_SHA1=y
CONFIG_CRYPTO_SHA256=y
CONFIG_CRYPTO_SHA512=y
CONFIG_CRYPTO_SHA3=m
# CONFIG_CRYPTO_SM3_GENERIC is not set
# CONFIG_CRYPTO_STREEBOG is not set
CONFIG_CRYPTO_VMAC=m
CONFIG_CRYPTO_WP512=m
CONFIG_CRYPTO_XCBC=m
CONFIG_CRYPTO_XXHASH=m
# end of Hashes, digests, and MACs

#
# CRCs (cyclic redundancy checks)
#
CONFIG_CRYPTO_CRC32C=y
CONFIG_CRYPTO_CRC32=m
CONFIG_CRYPTO_CRCT10DIF=y
CONFIG_CRYPTO_CRC64_ROCKSOFT=m
# end of CRCs (cyclic redundancy checks)

#
# Compression
#
CONFIG_CRYPTO_DEFLATE=y
CONFIG_CRYPTO_LZO=y
# CONFIG_CRYPTO_842 is not set
# CONFIG_CRYPTO_LZ4 is not set
# CONFIG_CRYPTO_LZ4HC is not set
# CONFIG_CRYPTO_ZSTD is not set
# end of Compression

#
# Random number generation
#
CONFIG_CRYPTO_ANSI_CPRNG=m
CONFIG_CRYPTO_DRBG_MENU=y
CONFIG_CRYPTO_DRBG_HMAC=y
CONFIG_CRYPTO_DRBG_HASH=y
CONFIG_CRYPTO_DRBG_CTR=y
CONFIG_CRYPTO_DRBG=y
CONFIG_CRYPTO_JITTERENTROPY=y
# end of Random number generation

#
# Userspace interface
#
CONFIG_CRYPTO_USER_API=y
# CONFIG_CRYPTO_USER_API_HASH is not set
CONFIG_CRYPTO_USER_API_SKCIPHER=y
CONFIG_CRYPTO_USER_API_RNG=y
# CONFIG_CRYPTO_USER_API_RNG_CAVP is not set
CONFIG_CRYPTO_USER_API_AEAD=y
CONFIG_CRYPTO_USER_API_ENABLE_OBSOLETE=y
# CONFIG_CRYPTO_STATS is not set
# end of Userspace interface

CONFIG_CRYPTO_HASH_INFO=y

#
# Accelerated Cryptographic Algorithms for CPU (x86)
#
# CONFIG_CRYPTO_CURVE25519_X86 is not set
CONFIG_CRYPTO_AES_NI_INTEL=y
CONFIG_CRYPTO_BLOWFISH_X86_64=m
CONFIG_CRYPTO_CAMELLIA_X86_64=m
CONFIG_CRYPTO_CAMELLIA_AESNI_AVX_X86_64=m
CONFIG_CRYPTO_CAMELLIA_AESNI_AVX2_X86_64=m
CONFIG_CRYPTO_CAST5_AVX_X86_64=m
CONFIG_CRYPTO_CAST6_AVX_X86_64=m
# CONFIG_CRYPTO_DES3_EDE_X86_64 is not set
CONFIG_CRYPTO_SERPENT_SSE2_X86_64=m
CONFIG_CRYPTO_SERPENT_AVX_X86_64=m
CONFIG_CRYPTO_SERPENT_AVX2_X86_64=m
# CONFIG_CRYPTO_SM4_AESNI_AVX_X86_64 is not set
# CONFIG_CRYPTO_SM4_AESNI_AVX2_X86_64 is not set
CONFIG_CRYPTO_TWOFISH_X86_64=m
CONFIG_CRYPTO_TWOFISH_X86_64_3WAY=m
CONFIG_CRYPTO_TWOFISH_AVX_X86_64=m
# CONFIG_CRYPTO_ARIA_AESNI_AVX_X86_64 is not set
# CONFIG_CRYPTO_ARIA_AESNI_AVX2_X86_64 is not set
# CONFIG_CRYPTO_ARIA_GFNI_AVX512_X86_64 is not set
CONFIG_CRYPTO_CHACHA20_X86_64=m
# CONFIG_CRYPTO_AEGIS128_AESNI_SSE2 is not set
# CONFIG_CRYPTO_NHPOLY1305_SSE2 is not set
# CONFIG_CRYPTO_NHPOLY1305_AVX2 is not set
# CONFIG_CRYPTO_BLAKE2S_X86 is not set
# CONFIG_CRYPTO_POLYVAL_CLMUL_NI is not set
# CONFIG_CRYPTO_POLY1305_X86_64 is not set
CONFIG_CRYPTO_SHA1_SSSE3=y
CONFIG_CRYPTO_SHA256_SSSE3=y
CONFIG_CRYPTO_SHA512_SSSE3=m
# CONFIG_CRYPTO_SM3_AVX_X86_64 is not set
CONFIG_CRYPTO_GHASH_CLMUL_NI_INTEL=m
CONFIG_CRYPTO_CRC32C_INTEL=m
CONFIG_CRYPTO_CRC32_PCLMUL=m
CONFIG_CRYPTO_CRCT10DIF_PCLMUL=m
# end of Accelerated Cryptographic Algorithms for CPU (x86)

# CONFIG_CRYPTO_HW is not set
CONFIG_ASYMMETRIC_KEY_TYPE=y
CONFIG_ASYMMETRIC_PUBLIC_KEY_SUBTYPE=y
CONFIG_X509_CERTIFICATE_PARSER=y
# CONFIG_PKCS8_PRIVATE_KEY_PARSER is not set
CONFIG_PKCS7_MESSAGE_PARSER=y
# CONFIG_PKCS7_TEST_KEY is not set
CONFIG_SIGNED_PE_FILE_VERIFICATION=y
# CONFIG_FIPS_SIGNATURE_SELFTEST is not set

#
# Certificates for signature checking
#
CONFIG_MODULE_SIG_KEY="certs/signing_key.pem"
CONFIG_MODULE_SIG_KEY_TYPE_RSA=y
# CONFIG_MODULE_SIG_KEY_TYPE_ECDSA is not set
CONFIG_SYSTEM_TRUSTED_KEYRING=y
CONFIG_SYSTEM_TRUSTED_KEYS=""
# CONFIG_SYSTEM_EXTRA_CERTIFICATE is not set
# CONFIG_SECONDARY_TRUSTED_KEYRING is not set
CONFIG_SYSTEM_BLACKLIST_KEYRING=y
CONFIG_SYSTEM_BLACKLIST_HASH_LIST=""
# CONFIG_SYSTEM_REVOCATION_LIST is not set
# CONFIG_SYSTEM_BLACKLIST_AUTH_UPDATE is not set
# end of Certificates for signature checking

CONFIG_BINARY_PRINTF=y

#
# Library routines
#
CONFIG_RAID6_PQ=m
CONFIG_RAID6_PQ_BENCHMARK=y
# CONFIG_PACKING is not set
CONFIG_BITREVERSE=y
CONFIG_GENERIC_STRNCPY_FROM_USER=y
CONFIG_GENERIC_STRNLEN_USER=y
CONFIG_GENERIC_NET_UTILS=y
CONFIG_CORDIC=m
CONFIG_PRIME_NUMBERS=m
CONFIG_RATIONAL=y
CONFIG_GENERIC_PCI_IOMAP=y
CONFIG_GENERIC_IOMAP=y
CONFIG_ARCH_USE_CMPXCHG_LOCKREF=y
CONFIG_ARCH_HAS_FAST_MULTIPLIER=y
CONFIG_ARCH_USE_SYM_ANNOTATIONS=y

#
# Crypto library routines
#
CONFIG_CRYPTO_LIB_UTILS=y
CONFIG_CRYPTO_LIB_AES=y
CONFIG_CRYPTO_LIB_ARC4=m
CONFIG_CRYPTO_LIB_GF128MUL=y
CONFIG_CRYPTO_LIB_BLAKE2S_GENERIC=y
CONFIG_CRYPTO_ARCH_HAVE_LIB_CHACHA=m
CONFIG_CRYPTO_LIB_CHACHA_GENERIC=m
# CONFIG_CRYPTO_LIB_CHACHA is not set
# CONFIG_CRYPTO_LIB_CURVE25519 is not set
CONFIG_CRYPTO_LIB_DES=m
CONFIG_CRYPTO_LIB_POLY1305_RSIZE=11
# CONFIG_CRYPTO_LIB_POLY1305 is not set
# CONFIG_CRYPTO_LIB_CHACHA20POLY1305 is not set
CONFIG_CRYPTO_LIB_SHA1=y
CONFIG_CRYPTO_LIB_SHA256=y
# end of Crypto library routines

CONFIG_CRC_CCITT=y
CONFIG_CRC16=y
CONFIG_CRC_T10DIF=y
CONFIG_CRC64_ROCKSOFT=m
CONFIG_CRC_ITU_T=m
CONFIG_CRC32=y
# CONFIG_CRC32_SELFTEST is not set
CONFIG_CRC32_SLICEBY8=y
# CONFIG_CRC32_SLICEBY4 is not set
# CONFIG_CRC32_SARWATE is not set
# CONFIG_CRC32_BIT is not set
CONFIG_CRC64=m
# CONFIG_CRC4 is not set
CONFIG_CRC7=m
CONFIG_LIBCRC32C=m
CONFIG_CRC8=m
CONFIG_XXHASH=y
# CONFIG_RANDOM32_SELFTEST is not set
CONFIG_ZLIB_INFLATE=y
CONFIG_ZLIB_DEFLATE=y
CONFIG_LZO_COMPRESS=y
CONFIG_LZO_DECOMPRESS=y
CONFIG_LZ4_DECOMPRESS=y
CONFIG_ZSTD_COMMON=y
CONFIG_ZSTD_COMPRESS=m
CONFIG_ZSTD_DECOMPRESS=y
CONFIG_XZ_DEC=y
CONFIG_XZ_DEC_X86=y
CONFIG_XZ_DEC_POWERPC=y
CONFIG_XZ_DEC_IA64=y
CONFIG_XZ_DEC_ARM=y
CONFIG_XZ_DEC_ARMTHUMB=y
CONFIG_XZ_DEC_SPARC=y
# CONFIG_XZ_DEC_MICROLZMA is not set
CONFIG_XZ_DEC_BCJ=y
# CONFIG_XZ_DEC_TEST is not set
CONFIG_DECOMPRESS_GZIP=y
CONFIG_DECOMPRESS_BZIP2=y
CONFIG_DECOMPRESS_LZMA=y
CONFIG_DECOMPRESS_XZ=y
CONFIG_DECOMPRESS_LZO=y
CONFIG_DECOMPRESS_LZ4=y
CONFIG_DECOMPRESS_ZSTD=y
CONFIG_GENERIC_ALLOCATOR=y
CONFIG_REED_SOLOMON=m
CONFIG_REED_SOLOMON_ENC8=y
CONFIG_REED_SOLOMON_DEC8=y
CONFIG_TEXTSEARCH=y
CONFIG_TEXTSEARCH_KMP=m
CONFIG_TEXTSEARCH_BM=m
CONFIG_TEXTSEARCH_FSM=m
CONFIG_INTERVAL_TREE=y
CONFIG_INTERVAL_TREE_SPAN_ITER=y
CONFIG_XARRAY_MULTI=y
CONFIG_ASSOCIATIVE_ARRAY=y
CONFIG_HAS_IOMEM=y
CONFIG_HAS_IOPORT=y
CONFIG_HAS_IOPORT_MAP=y
CONFIG_HAS_DMA=y
CONFIG_DMA_OPS=y
CONFIG_NEED_SG_DMA_LENGTH=y
CONFIG_NEED_DMA_MAP_STATE=y
CONFIG_ARCH_DMA_ADDR_T_64BIT=y
CONFIG_ARCH_HAS_FORCE_DMA_UNENCRYPTED=y
CONFIG_SWIOTLB=y
# CONFIG_DMA_API_DEBUG is not set
CONFIG_DMA_MAP_BENCHMARK=y
CONFIG_SGL_ALLOC=y
CONFIG_CHECK_SIGNATURE=y
CONFIG_CPUMASK_OFFSTACK=y
# CONFIG_FORCE_NR_CPUS is not set
CONFIG_CPU_RMAP=y
CONFIG_DQL=y
CONFIG_GLOB=y
# CONFIG_GLOB_SELFTEST is not set
CONFIG_NLATTR=y
CONFIG_CLZ_TAB=y
CONFIG_IRQ_POLL=y
CONFIG_MPILIB=y
CONFIG_SIGNATURE=y
CONFIG_OID_REGISTRY=y
CONFIG_UCS2_STRING=y
CONFIG_HAVE_GENERIC_VDSO=y
CONFIG_GENERIC_GETTIMEOFDAY=y
CONFIG_GENERIC_VDSO_TIME_NS=y
CONFIG_FONT_SUPPORT=y
# CONFIG_FONTS is not set
CONFIG_FONT_8x8=y
CONFIG_FONT_8x16=y
CONFIG_SG_POOL=y
CONFIG_ARCH_HAS_PMEM_API=y
CONFIG_MEMREGION=y
CONFIG_ARCH_HAS_CPU_CACHE_INVALIDATE_MEMREGION=y
CONFIG_ARCH_HAS_UACCESS_FLUSHCACHE=y
CONFIG_ARCH_HAS_COPY_MC=y
CONFIG_ARCH_STACKWALK=y
CONFIG_STACKDEPOT=y
CONFIG_STACKDEPOT_ALWAYS_INIT=y
CONFIG_SBITMAP=y
# end of Library routines

CONFIG_ASN1_ENCODER=y

#
# Kernel hacking
#

#
# printk and dmesg options
#
CONFIG_PRINTK_TIME=y
CONFIG_PRINTK_CALLER=y
# CONFIG_STACKTRACE_BUILD_ID is not set
CONFIG_CONSOLE_LOGLEVEL_DEFAULT=7
CONFIG_CONSOLE_LOGLEVEL_QUIET=4
CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4
CONFIG_BOOT_PRINTK_DELAY=y
CONFIG_DYNAMIC_DEBUG=y
CONFIG_DYNAMIC_DEBUG_CORE=y
CONFIG_SYMBOLIC_ERRNAME=y
CONFIG_DEBUG_BUGVERBOSE=y
# end of printk and dmesg options

CONFIG_DEBUG_KERNEL=y
CONFIG_DEBUG_MISC=y

#
# Compile-time checks and compiler options
#
CONFIG_DEBUG_INFO=y
CONFIG_AS_HAS_NON_CONST_LEB128=y
# CONFIG_DEBUG_INFO_NONE is not set
# CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT is not set
CONFIG_DEBUG_INFO_DWARF4=y
# CONFIG_DEBUG_INFO_DWARF5 is not set
CONFIG_DEBUG_INFO_REDUCED=y
CONFIG_DEBUG_INFO_COMPRESSED_NONE=y
# CONFIG_DEBUG_INFO_COMPRESSED_ZLIB is not set
# CONFIG_DEBUG_INFO_SPLIT is not set
CONFIG_PAHOLE_HAS_SPLIT_BTF=y
CONFIG_PAHOLE_HAS_LANG_EXCLUDE=y
# CONFIG_GDB_SCRIPTS is not set
CONFIG_FRAME_WARN=8192
CONFIG_STRIP_ASM_SYMS=y
# CONFIG_READABLE_ASM is not set
# CONFIG_HEADERS_INSTALL is not set
CONFIG_DEBUG_SECTION_MISMATCH=y
CONFIG_SECTION_MISMATCH_WARN_ONLY=y
# CONFIG_DEBUG_FORCE_FUNCTION_ALIGN_64B is not set
CONFIG_OBJTOOL=y
# CONFIG_VMLINUX_MAP is not set
# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
# end of Compile-time checks and compiler options

#
# Generic Kernel Debugging Instruments
#
CONFIG_MAGIC_SYSRQ=y
CONFIG_MAGIC_SYSRQ_DEFAULT_ENABLE=0x1
CONFIG_MAGIC_SYSRQ_SERIAL=y
CONFIG_MAGIC_SYSRQ_SERIAL_SEQUENCE=""
CONFIG_DEBUG_FS=y
CONFIG_DEBUG_FS_ALLOW_ALL=y
# CONFIG_DEBUG_FS_DISALLOW_MOUNT is not set
# CONFIG_DEBUG_FS_ALLOW_NONE is not set
CONFIG_HAVE_ARCH_KGDB=y
# CONFIG_KGDB is not set
CONFIG_ARCH_HAS_UBSAN_SANITIZE_ALL=y
CONFIG_UBSAN=y
# CONFIG_UBSAN_TRAP is not set
CONFIG_CC_HAS_UBSAN_BOUNDS=y
CONFIG_UBSAN_BOUNDS=y
CONFIG_UBSAN_ONLY_BOUNDS=y
CONFIG_UBSAN_SHIFT=y
# CONFIG_UBSAN_DIV_ZERO is not set
# CONFIG_UBSAN_BOOL is not set
# CONFIG_UBSAN_ENUM is not set
# CONFIG_UBSAN_ALIGNMENT is not set
CONFIG_UBSAN_SANITIZE_ALL=y
# CONFIG_TEST_UBSAN is not set
CONFIG_HAVE_ARCH_KCSAN=y
CONFIG_HAVE_KCSAN_COMPILER=y
# end of Generic Kernel Debugging Instruments

#
# Networking Debugging
#
# CONFIG_NET_DEV_REFCNT_TRACKER is not set
# CONFIG_NET_NS_REFCNT_TRACKER is not set
# CONFIG_DEBUG_NET is not set
# end of Networking Debugging

#
# Memory Debugging
#
CONFIG_PAGE_EXTENSION=y
# CONFIG_DEBUG_PAGEALLOC is not set
CONFIG_SLUB_DEBUG=y
CONFIG_SLUB_DEBUG_ON=y
CONFIG_PAGE_OWNER=y
# CONFIG_PAGE_TABLE_CHECK is not set
# CONFIG_PAGE_POISONING is not set
# CONFIG_DEBUG_PAGE_REF is not set
# CONFIG_DEBUG_RODATA_TEST is not set
CONFIG_ARCH_HAS_DEBUG_WX=y
# CONFIG_DEBUG_WX is not set
CONFIG_GENERIC_PTDUMP=y
# CONFIG_PTDUMP_DEBUGFS is not set
CONFIG_HAVE_DEBUG_KMEMLEAK=y
CONFIG_DEBUG_KMEMLEAK=y
CONFIG_DEBUG_KMEMLEAK_MEM_POOL_SIZE=16000
# CONFIG_DEBUG_KMEMLEAK_DEFAULT_OFF is not set
CONFIG_DEBUG_KMEMLEAK_AUTO_SCAN=y
# CONFIG_PER_VMA_LOCK_STATS is not set
# CONFIG_DEBUG_OBJECTS is not set
# CONFIG_SHRINKER_DEBUG is not set
# CONFIG_DEBUG_STACK_USAGE is not set
# CONFIG_SCHED_STACK_END_CHECK is not set
CONFIG_ARCH_HAS_DEBUG_VM_PGTABLE=y
# CONFIG_DEBUG_VM is not set
# CONFIG_DEBUG_VM_PGTABLE is not set
CONFIG_ARCH_HAS_DEBUG_VIRTUAL=y
# CONFIG_DEBUG_VIRTUAL is not set
CONFIG_DEBUG_MEMORY_INIT=y
CONFIG_MEMORY_NOTIFIER_ERROR_INJECT=m
# CONFIG_DEBUG_PER_CPU_MAPS is not set
CONFIG_HAVE_ARCH_KASAN=y
CONFIG_HAVE_ARCH_KASAN_VMALLOC=y
CONFIG_CC_HAS_KASAN_GENERIC=y
CONFIG_CC_HAS_WORKING_NOSANITIZE_ADDRESS=y
CONFIG_KASAN=y
CONFIG_KASAN_GENERIC=y
# CONFIG_KASAN_OUTLINE is not set
CONFIG_KASAN_INLINE=y
CONFIG_KASAN_STACK=y
CONFIG_KASAN_VMALLOC=y
# CONFIG_KASAN_MODULE_TEST is not set
CONFIG_HAVE_ARCH_KFENCE=y
# CONFIG_KFENCE is not set
CONFIG_HAVE_ARCH_KMSAN=y
# end of Memory Debugging

CONFIG_DEBUG_SHIRQ=y

#
# Debug Oops, Lockups and Hangs
#
CONFIG_PANIC_ON_OOPS=y
CONFIG_PANIC_ON_OOPS_VALUE=1
CONFIG_PANIC_TIMEOUT=0
CONFIG_LOCKUP_DETECTOR=y
CONFIG_SOFTLOCKUP_DETECTOR=y
# CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC is not set
CONFIG_HARDLOCKUP_DETECTOR_PERF=y
CONFIG_HARDLOCKUP_CHECK_TIMESTAMP=y
CONFIG_HARDLOCKUP_DETECTOR=y
CONFIG_BOOTPARAM_HARDLOCKUP_PANIC=y
CONFIG_DETECT_HUNG_TASK=y
CONFIG_DEFAULT_HUNG_TASK_TIMEOUT=480
# CONFIG_BOOTPARAM_HUNG_TASK_PANIC is not set
CONFIG_WQ_WATCHDOG=y
# CONFIG_TEST_LOCKUP is not set
# end of Debug Oops, Lockups and Hangs

#
# Scheduler Debugging
#
CONFIG_SCHED_DEBUG=y
CONFIG_SCHED_INFO=y
CONFIG_SCHEDSTATS=y
# end of Scheduler Debugging

# CONFIG_DEBUG_TIMEKEEPING is not set

#
# Lock Debugging (spinlocks, mutexes, etc...)
#
CONFIG_LOCK_DEBUGGING_SUPPORT=y
CONFIG_PROVE_LOCKING=y
# CONFIG_PROVE_RAW_LOCK_NESTING is not set
# CONFIG_LOCK_STAT is not set
CONFIG_DEBUG_RT_MUTEXES=y
CONFIG_DEBUG_SPINLOCK=y
CONFIG_DEBUG_MUTEXES=y
CONFIG_DEBUG_WW_MUTEX_SLOWPATH=y
CONFIG_DEBUG_RWSEMS=y
CONFIG_DEBUG_LOCK_ALLOC=y
CONFIG_LOCKDEP=y
CONFIG_LOCKDEP_BITS=15
CONFIG_LOCKDEP_CHAINS_BITS=16
CONFIG_LOCKDEP_STACK_TRACE_BITS=19
CONFIG_LOCKDEP_STACK_TRACE_HASH_BITS=14
CONFIG_LOCKDEP_CIRCULAR_QUEUE_BITS=12
# CONFIG_DEBUG_LOCKDEP is not set
CONFIG_DEBUG_ATOMIC_SLEEP=y
# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
# CONFIG_LOCK_TORTURE_TEST is not set
CONFIG_WW_MUTEX_SELFTEST=m
# CONFIG_SCF_TORTURE_TEST is not set
# CONFIG_CSD_LOCK_WAIT_DEBUG is not set
# end of Lock Debugging (spinlocks, mutexes, etc...)

CONFIG_TRACE_IRQFLAGS=y
CONFIG_TRACE_IRQFLAGS_NMI=y
# CONFIG_NMI_CHECK_CPU is not set
# CONFIG_DEBUG_IRQFLAGS is not set
CONFIG_STACKTRACE=y
# CONFIG_WARN_ALL_UNSEEDED_RANDOM is not set
# CONFIG_DEBUG_KOBJECT is not set

#
# Debug kernel data structures
#
CONFIG_DEBUG_LIST=y
CONFIG_DEBUG_PLIST=y
# CONFIG_DEBUG_SG is not set
# CONFIG_DEBUG_NOTIFIERS is not set
CONFIG_BUG_ON_DATA_CORRUPTION=y
# CONFIG_DEBUG_MAPLE_TREE is not set
# end of Debug kernel data structures

# CONFIG_DEBUG_CREDENTIALS is not set

#
# RCU Debugging
#
CONFIG_PROVE_RCU=y
# CONFIG_RCU_SCALE_TEST is not set
# CONFIG_RCU_TORTURE_TEST is not set
# CONFIG_RCU_REF_SCALE_TEST is not set
CONFIG_RCU_CPU_STALL_TIMEOUT=60
CONFIG_RCU_EXP_CPU_STALL_TIMEOUT=0
# CONFIG_RCU_CPU_STALL_CPUTIME is not set
# CONFIG_RCU_TRACE is not set
# CONFIG_RCU_EQS_DEBUG is not set
# end of RCU Debugging

# CONFIG_DEBUG_WQ_FORCE_RR_CPU is not set
# CONFIG_CPU_HOTPLUG_STATE_CONTROL is not set
CONFIG_LATENCYTOP=y
# CONFIG_DEBUG_CGROUP_REF is not set
CONFIG_USER_STACKTRACE_SUPPORT=y
CONFIG_NOP_TRACER=y
CONFIG_HAVE_RETHOOK=y
CONFIG_RETHOOK=y
CONFIG_HAVE_FUNCTION_TRACER=y
CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
CONFIG_HAVE_DYNAMIC_FTRACE=y
CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS=y
CONFIG_HAVE_DYNAMIC_FTRACE_WITH_DIRECT_CALLS=y
CONFIG_HAVE_DYNAMIC_FTRACE_WITH_ARGS=y
CONFIG_HAVE_DYNAMIC_FTRACE_NO_PATCHABLE=y
CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
CONFIG_HAVE_FENTRY=y
CONFIG_HAVE_OBJTOOL_MCOUNT=y
CONFIG_HAVE_OBJTOOL_NOP_MCOUNT=y
CONFIG_HAVE_C_RECORDMCOUNT=y
CONFIG_HAVE_BUILDTIME_MCOUNT_SORT=y
CONFIG_BUILDTIME_MCOUNT_SORT=y
CONFIG_TRACER_MAX_TRACE=y
CONFIG_TRACE_CLOCK=y
CONFIG_RING_BUFFER=y
CONFIG_EVENT_TRACING=y
CONFIG_CONTEXT_SWITCH_TRACER=y
CONFIG_RING_BUFFER_ALLOW_SWAP=y
CONFIG_PREEMPTIRQ_TRACEPOINTS=y
CONFIG_TRACING=y
CONFIG_GENERIC_TRACER=y
CONFIG_TRACING_SUPPORT=y
CONFIG_FTRACE=y
# CONFIG_BOOTTIME_TRACING is not set
CONFIG_FUNCTION_TRACER=y
CONFIG_FUNCTION_GRAPH_TRACER=y
CONFIG_DYNAMIC_FTRACE=y
CONFIG_DYNAMIC_FTRACE_WITH_REGS=y
CONFIG_DYNAMIC_FTRACE_WITH_DIRECT_CALLS=y
CONFIG_DYNAMIC_FTRACE_WITH_ARGS=y
CONFIG_FPROBE=y
CONFIG_FUNCTION_PROFILER=y
CONFIG_STACK_TRACER=y
CONFIG_IRQSOFF_TRACER=y
CONFIG_SCHED_TRACER=y
CONFIG_HWLAT_TRACER=y
# CONFIG_OSNOISE_TRACER is not set
# CONFIG_TIMERLAT_TRACER is not set
# CONFIG_MMIOTRACE is not set
CONFIG_FTRACE_SYSCALLS=y
CONFIG_TRACER_SNAPSHOT=y
CONFIG_TRACER_SNAPSHOT_PER_CPU_SWAP=y
CONFIG_BRANCH_PROFILE_NONE=y
# CONFIG_PROFILE_ANNOTATED_BRANCHES is not set
# CONFIG_BLK_DEV_IO_TRACE is not set
CONFIG_KPROBE_EVENTS=y
# CONFIG_KPROBE_EVENTS_ON_NOTRACE is not set
CONFIG_UPROBE_EVENTS=y
CONFIG_BPF_EVENTS=y
CONFIG_DYNAMIC_EVENTS=y
CONFIG_PROBE_EVENTS=y
CONFIG_BPF_KPROBE_OVERRIDE=y
CONFIG_FTRACE_MCOUNT_RECORD=y
CONFIG_FTRACE_MCOUNT_USE_CC=y
CONFIG_TRACING_MAP=y
CONFIG_SYNTH_EVENTS=y
# CONFIG_USER_EVENTS is not set
CONFIG_HIST_TRIGGERS=y
# CONFIG_TRACE_EVENT_INJECT is not set
# CONFIG_TRACEPOINT_BENCHMARK is not set
CONFIG_RING_BUFFER_BENCHMARK=m
# CONFIG_TRACE_EVAL_MAP_FILE is not set
# CONFIG_FTRACE_RECORD_RECURSION is not set
# CONFIG_FTRACE_STARTUP_TEST is not set
# CONFIG_FTRACE_SORT_STARTUP_TEST is not set
# CONFIG_RING_BUFFER_STARTUP_TEST is not set
# CONFIG_RING_BUFFER_VALIDATE_TIME_DELTAS is not set
CONFIG_PREEMPTIRQ_DELAY_TEST=m
# CONFIG_SYNTH_EVENT_GEN_TEST is not set
# CONFIG_KPROBE_EVENT_GEN_TEST is not set
# CONFIG_HIST_TRIGGERS_DEBUG is not set
# CONFIG_RV is not set
CONFIG_PROVIDE_OHCI1394_DMA_INIT=y
CONFIG_SAMPLES=y
# CONFIG_SAMPLE_AUXDISPLAY is not set
# CONFIG_SAMPLE_TRACE_EVENTS is not set
# CONFIG_SAMPLE_TRACE_CUSTOM_EVENTS is not set
CONFIG_SAMPLE_TRACE_PRINTK=m
CONFIG_SAMPLE_FTRACE_DIRECT=m
# CONFIG_SAMPLE_FTRACE_DIRECT_MULTI is not set
# CONFIG_SAMPLE_FTRACE_OPS is not set
# CONFIG_SAMPLE_TRACE_ARRAY is not set
# CONFIG_SAMPLE_KOBJECT is not set
# CONFIG_SAMPLE_KPROBES is not set
# CONFIG_SAMPLE_HW_BREAKPOINT is not set
# CONFIG_SAMPLE_FPROBE is not set
# CONFIG_SAMPLE_KFIFO is not set
# CONFIG_SAMPLE_LIVEPATCH is not set
# CONFIG_SAMPLE_CONFIGFS is not set
# CONFIG_SAMPLE_VFIO_MDEV_MTTY is not set
# CONFIG_SAMPLE_VFIO_MDEV_MDPY is not set
# CONFIG_SAMPLE_VFIO_MDEV_MDPY_FB is not set
# CONFIG_SAMPLE_VFIO_MDEV_MBOCHS is not set
# CONFIG_SAMPLE_WATCHDOG is not set
# CONFIG_SAMPLE_KMEMLEAK is not set
CONFIG_HAVE_SAMPLE_FTRACE_DIRECT=y
CONFIG_HAVE_SAMPLE_FTRACE_DIRECT_MULTI=y
CONFIG_ARCH_HAS_DEVMEM_IS_ALLOWED=y
CONFIG_STRICT_DEVMEM=y
# CONFIG_IO_STRICT_DEVMEM is not set

#
# x86 Debugging
#
CONFIG_EARLY_PRINTK_USB=y
CONFIG_X86_VERBOSE_BOOTUP=y
CONFIG_EARLY_PRINTK=y
CONFIG_EARLY_PRINTK_DBGP=y
CONFIG_EARLY_PRINTK_USB_XDBC=y
# CONFIG_EFI_PGT_DUMP is not set
# CONFIG_DEBUG_TLBFLUSH is not set
CONFIG_HAVE_MMIOTRACE_SUPPORT=y
# CONFIG_X86_DECODER_SELFTEST is not set
CONFIG_IO_DELAY_0X80=y
# CONFIG_IO_DELAY_0XED is not set
# CONFIG_IO_DELAY_UDELAY is not set
# CONFIG_IO_DELAY_NONE is not set
CONFIG_DEBUG_BOOT_PARAMS=y
# CONFIG_CPA_DEBUG is not set
# CONFIG_DEBUG_ENTRY is not set
# CONFIG_DEBUG_NMI_SELFTEST is not set
# CONFIG_X86_DEBUG_FPU is not set
# CONFIG_PUNIT_ATOM_DEBUG is not set
CONFIG_UNWINDER_ORC=y
# CONFIG_UNWINDER_FRAME_POINTER is not set
# end of x86 Debugging

#
# Kernel Testing and Coverage
#
# CONFIG_KUNIT is not set
CONFIG_NOTIFIER_ERROR_INJECTION=m
CONFIG_PM_NOTIFIER_ERROR_INJECT=m
# CONFIG_NETDEV_NOTIFIER_ERROR_INJECT is not set
CONFIG_FUNCTION_ERROR_INJECTION=y
CONFIG_FAULT_INJECTION=y
# CONFIG_FAILSLAB is not set
# CONFIG_FAIL_PAGE_ALLOC is not set
# CONFIG_FAULT_INJECTION_USERCOPY is not set
# CONFIG_FAIL_MAKE_REQUEST is not set
# CONFIG_FAIL_IO_TIMEOUT is not set
# CONFIG_FAIL_FUTEX is not set
# CONFIG_FAULT_INJECTION_DEBUG_FS is not set
# CONFIG_FAULT_INJECTION_CONFIGFS is not set
CONFIG_ARCH_HAS_KCOV=y
CONFIG_CC_HAS_SANCOV_TRACE_PC=y
# CONFIG_KCOV is not set
CONFIG_RUNTIME_TESTING_MENU=y
# CONFIG_TEST_DHRY is not set
CONFIG_LKDTM=y
# CONFIG_TEST_MIN_HEAP is not set
# CONFIG_TEST_DIV64 is not set
# CONFIG_BACKTRACE_SELF_TEST is not set
# CONFIG_TEST_REF_TRACKER is not set
# CONFIG_RBTREE_TEST is not set
# CONFIG_REED_SOLOMON_TEST is not set
# CONFIG_INTERVAL_TREE_TEST is not set
# CONFIG_PERCPU_TEST is not set
# CONFIG_ATOMIC64_SELFTEST is not set
# CONFIG_ASYNC_RAID6_TEST is not set
# CONFIG_TEST_HEXDUMP is not set
# CONFIG_STRING_SELFTEST is not set
# CONFIG_TEST_STRING_HELPERS is not set
# CONFIG_TEST_KSTRTOX is not set
CONFIG_TEST_PRINTF=m
CONFIG_TEST_SCANF=m
CONFIG_TEST_BITMAP=m
# CONFIG_TEST_UUID is not set
# CONFIG_TEST_XARRAY is not set
# CONFIG_TEST_MAPLE_TREE is not set
# CONFIG_TEST_RHASHTABLE is not set
# CONFIG_TEST_IDA is not set
CONFIG_TEST_LKM=m
CONFIG_TEST_BITOPS=m
CONFIG_TEST_VMALLOC=m
CONFIG_TEST_USER_COPY=m
CONFIG_TEST_BPF=m
CONFIG_TEST_BLACKHOLE_DEV=m
# CONFIG_FIND_BIT_BENCHMARK is not set
CONFIG_TEST_FIRMWARE=y
CONFIG_TEST_SYSCTL=y
# CONFIG_TEST_UDELAY is not set
CONFIG_TEST_STATIC_KEYS=m
# CONFIG_TEST_DYNAMIC_DEBUG is not set
CONFIG_TEST_KMOD=m
# CONFIG_TEST_MEMCAT_P is not set
CONFIG_TEST_LIVEPATCH=m
# CONFIG_TEST_MEMINIT is not set
CONFIG_TEST_HMM=m
# CONFIG_TEST_FREE_PAGES is not set
CONFIG_TEST_FPU=m
# CONFIG_TEST_CLOCKSOURCE_WATCHDOG is not set
CONFIG_ARCH_USE_MEMTEST=y
# CONFIG_MEMTEST is not set
# CONFIG_HYPERV_TESTING is not set
# end of Kernel Testing and Coverage

#
# Rust hacking
#
# end of Rust hacking
# end of Kernel hacking

--ID8wQf9zGKtnYLaT
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: attachment; filename="job-script"

#!/bin/sh

export_top_env()
{
	export suite='kernel-selftests'
	export testcase='kernel-selftests'
	export category='functional'
	export job_origin='kernel-selftests-mm.yaml'
	export queue_cmdline_keys='branch
commit
kbuild_queue_analysis'
	export queue='validate'
	export testbox='lkp-csl-d01'
	export tbox_group='lkp-csl-d01'
	export submit_id='646b69d010c3d5f3fd3eafb0'
	export job_file='/lkp/jobs/scheduled/lkp-csl-d01/kernel-selftests-mm-2-debian-12-x86_64-20220629.cgz-d84de15119b74f10be3c0a369561ca9b452d07d7-20230522-62461-typ4xm-4.yaml'
	export id='debf17b562b3330ecc28761ee594a0dacaec25fb'
	export queuer_version='/zday/lkp'
	export model='Cascade Lake'
	export nr_node=1
	export nr_cpu=36
	export memory='32G'
	export nr_ssd_partitions=1
	export ssd_partitions='/dev/disk/by-id/nvme-INTEL_SSDPEKNW010T8_PHNH119301NW1P0B-part3'
	export rootfs_partition='/dev/disk/by-id/nvme-INTEL_SSDPEKNW010T8_PHNH119301NW1P0B-part4'
	export brand='Intel(R) Core(TM) i9-10980XE CPU @ 3.00GHz'
	export commit='d84de15119b74f10be3c0a369561ca9b452d07d7'
	export ucode='0x5003303'
	export need_kernel_version='>= v6.3-rc1, gcc
>= v6.3-rc1, clang'
	export need_kconfig=\{\"MEM_SOFT_DIRTY\"\=\>\"y,\ x86_64\"\}'
'\{\"GUP_BENCHMARK\"\=\>\"y\"\}'
'\{\"GUP_TEST\"\=\>\"y\"\}
	export rootfs='debian-12-x86_64-20220629.cgz'
	export initrds='linux_headers
linux_selftests'
	export kconfig='x86_64-rhel-8.3-kselftests'
	export enqueue_time='2023-05-22 21:10:40 +0800'
	export _id='646b69fe10c3d5f3fd3eafb2'
	export _rt='/result/kernel-selftests/mm-2/lkp-csl-d01/debian-12-x86_64-20220629.cgz/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7'
	export user='lkp'
	export compiler='gcc-11'
	export LKP_SERVER='internal-lkp-server'
	export head_commit='842a15f36c74b33705361df907cb1f421b63be6f'
	export base_commit='f1fcbaa18b28dec10281551dfe6ed3a3ed80e3d6'
	export branch='linux-review/Jiaqi-Yan/mm-hwpoison-find-subpage-in-hugetlb-HWPOISON-list/20230518-003149'
	export result_root='/result/kernel-selftests/mm-2/lkp-csl-d01/debian-12-x86_64-20220629.cgz/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/2'
	export scheduler_version='/lkp/lkp/src'
	export arch='x86_64'
	export max_uptime=1200
	export initrd='/osimage/debian/debian-12-x86_64-20220629.cgz'
	export bootloader_append='root=/dev/ram0
RESULT_ROOT=/result/kernel-selftests/mm-2/lkp-csl-d01/debian-12-x86_64-20220629.cgz/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/2
BOOT_IMAGE=/pkg/linux/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/vmlinuz-6.4.0-rc2-00003-gd84de15119b7
branch=linux-review/Jiaqi-Yan/mm-hwpoison-find-subpage-in-hugetlb-HWPOISON-list/20230518-003149
job=/lkp/jobs/scheduled/lkp-csl-d01/kernel-selftests-mm-2-debian-12-x86_64-20220629.cgz-d84de15119b74f10be3c0a369561ca9b452d07d7-20230522-62461-typ4xm-4.yaml
user=lkp
ARCH=x86_64
kconfig=x86_64-rhel-8.3-kselftests
commit=d84de15119b74f10be3c0a369561ca9b452d07d7
initcall_debug
nmi_watchdog=0
max_uptime=1200
LKP_SERVER=internal-lkp-server
nokaslr
selinux=0
debug
apic=debug
sysrq_always_enabled
rcupdate.rcu_cpu_stall_timeout=100
net.ifnames=0
printk.devkmsg=on
panic=-1
softlockup_panic=1
nmi_watchdog=panic
oops=panic
load_ramdisk=2
prompt_ramdisk=0
drbd.minor_count=8
systemd.log_level=err
ignore_loglevel
console=tty0
earlyprintk=ttyS0,115200
console=ttyS0,115200
vga=normal
rw'
	export modules_initrd='/pkg/linux/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/modules.cgz'
	export linux_headers_initrd='/pkg/linux/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/linux-headers.cgz'
	export linux_selftests_initrd='/pkg/linux/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/linux-selftests.cgz'
	export bm_initrd='/osimage/deps/debian-12-x86_64-20220629.cgz/lkp_20221125.cgz,/osimage/deps/debian-12-x86_64-20220629.cgz/run-ipconfig_20221125.cgz,/osimage/deps/debian-12-x86_64-20220629.cgz/rsync-rootfs_20221125.cgz,/osimage/deps/debian-12-x86_64-20220629.cgz/kernel-selftests_20230329.cgz,/osimage/pkg/debian-12-x86_64-20220629.cgz/kernel-selftests-x86_64-60acb023-1_20230329.cgz,/osimage/deps/debian-12-x86_64-20220629.cgz/hw_20230326.cgz'
	export ucode_initrd='/osimage/ucode/intel-ucode-20230406.cgz'
	export lkp_initrd='/osimage/user/lkp/lkp-x86_64.cgz'
	export site='lkp-wsx01'
	export LKP_CGI_PORT=80
	export LKP_CIFS_PORT=139
	export last_kernel='6.4.0-rc2'
	export repeat_to=6
	export stop_repeat_if_found='kernel-selftests.mm.hugepage-vmemmap.fail'
	export kbuild_queue_analysis=1
	export kernel='/pkg/linux/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/vmlinuz-6.4.0-rc2-00003-gd84de15119b7'
	export dequeue_time='2023-05-22 21:12:23 +0800'
	export job_initrd='/lkp/jobs/scheduled/lkp-csl-d01/kernel-selftests-mm-2-debian-12-x86_64-20220629.cgz-d84de15119b74f10be3c0a369561ca9b452d07d7-20230522-62461-typ4xm-4.cgz'

	[ -n "$LKP_SRC" ] ||
	export LKP_SRC=/lkp/${user:-lkp}/src
}

run_job()
{
	echo $$ > $TMP/run-job.pid

	. $LKP_SRC/lib/http.sh
	. $LKP_SRC/lib/job.sh
	. $LKP_SRC/lib/env.sh

	export_top_env

	run_setup sc_nr_hugepages=2 $LKP_SRC/setup/sysctl

	run_monitor $LKP_SRC/monitors/wrapper kmsg
	run_monitor $LKP_SRC/monitors/wrapper heartbeat
	run_monitor $LKP_SRC/monitors/wrapper meminfo
	run_monitor $LKP_SRC/monitors/wrapper kmemleak
	run_monitor $LKP_SRC/monitors/wrapper oom-killer
	run_monitor $LKP_SRC/monitors/plain/watchdog

	run_test group='mm' $LKP_SRC/tests/wrapper kernel-selftests
}

extract_stats()
{
	export stats_part_begin=
	export stats_part_end=

	env group='mm' $LKP_SRC/stats/wrapper kernel-selftests
	$LKP_SRC/stats/wrapper kmsg
	$LKP_SRC/stats/wrapper meminfo
	$LKP_SRC/stats/wrapper kmemleak

	$LKP_SRC/stats/wrapper time kernel-selftests.time
	$LKP_SRC/stats/wrapper dmesg
	$LKP_SRC/stats/wrapper kmsg
	$LKP_SRC/stats/wrapper last_state
	$LKP_SRC/stats/wrapper stderr
	$LKP_SRC/stats/wrapper time
}

"$@"

--ID8wQf9zGKtnYLaT
Content-Type: application/x-xz
Content-Disposition: attachment; filename="kmsg.xz"
Content-Transfer-Encoding: base64

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
AAGklgSixysF8wdiscRn+wIAAAAABFla

--ID8wQf9zGKtnYLaT
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: attachment; filename="kernel-selftests"
Content-Transfer-Encoding: quoted-printable

KERNEL SELFTESTS: linux_headers_dir is /usr/src/linux-headers-x86_64-rhel-8=
.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7
2023-05-22 13:15:16 ln -sf /usr/bin/clang
2023-05-22 13:15:16 ln -sf /usr/sbin/iptables-nft /usr/bin/iptables
2023-05-22 13:15:16 ln -sf /usr/sbin/ip6tables-nft /usr/bin/ip6tables
2023-05-22 13:15:16 sed -i s/default_timeout=3D45/default_timeout=3D300/ ks=
elftest/runner.sh
2023-05-22 13:15:17 make -j36 -C mm
make: Entering directory '/usr/src/perf_selftests-x86_64-rhel-8.3-kselftest=
s-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/mm'
/bin/sh ./check_config.sh gcc
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     cow.c =
vm_util.c -lrt -lpthread  -o /usr/src/perf_selftests-x86_64-rhel-8.3-kselft=
ests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/mm/co=
w
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     compac=
tion_test.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel=
-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/self=
tests/mm/compaction_test
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     gup_te=
st.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.3-ks=
elftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/m=
m/gup_test
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     hmm-te=
sts.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.3-k=
selftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/=
mm/hmm-tests
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     hugetl=
b-madvise.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel=
-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/self=
tests/mm/hugetlb-madvise
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     hugetl=
b-read-hwpoison.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_6=
4-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testin=
g/selftests/mm/hugetlb-read-hwpoison
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     hugepa=
ge-mmap.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8=
.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selfte=
sts/mm/hugepage-mmap
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     hugepa=
ge-mremap.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel=
-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/self=
tests/mm/hugepage-mremap
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     hugepa=
ge-shm.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.=
3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftes=
ts/mm/hugepage-shm
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     hugepa=
ge-vmemmap.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhe=
l-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/sel=
ftests/mm/hugepage-vmemmap
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     khugep=
aged.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.3-=
kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests=
/mm/khugepaged
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     madv_p=
opulate.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8=
.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selfte=
sts/mm/madv_populate
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     map_fi=
xed_noreplace.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-=
rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/=
selftests/mm/map_fixed_noreplace
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     map_hu=
getlb.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.3=
-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftest=
s/mm/map_hugetlb
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     map_po=
pulate.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.=
3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftes=
ts/mm/map_populate
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     memfd_=
secret.c vm_util.c -lrt -lpthread -lcap -o /usr/src/perf_selftests-x86_64-r=
hel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/s=
elftests/mm/memfd_secret
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     migrat=
ion.c vm_util.c -lrt -lpthread -lnuma -o /usr/src/perf_selftests-x86_64-rhe=
l-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/sel=
ftests/mm/migration
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     mkdirt=
y.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.3-kse=
lftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/mm=
/mkdirty
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     mlock-=
random-test.c vm_util.c -lrt -lpthread -lcap -o /usr/src/perf_selftests-x86=
_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/test=
ing/selftests/mm/mlock-random-test
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     mlock2=
-tests.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.=
3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftes=
ts/mm/mlock2-tests
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     mrelea=
se_test.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8=
.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selfte=
sts/mm/mrelease_test
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     mremap=
_dontunmap.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhe=
l-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/sel=
ftests/mm/mremap_dontunmap
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     mremap=
_test.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.3=
-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftest=
s/mm/mremap_test
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     on-fau=
lt-limit.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-=
8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selft=
ests/mm/on-fault-limit
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     thuge-=
gen.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.3-k=
selftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/=
mm/thuge-gen
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     transh=
uge-stress.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhe=
l-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/sel=
ftests/mm/transhuge-stress
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     uffd-s=
tress.c vm_util.c uffd-common.c -lrt -lpthread -o /usr/src/perf_selftests-x=
86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/te=
sting/selftests/mm/uffd-stress
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     uffd-u=
nit-tests.c vm_util.c uffd-common.c -lrt -lpthread -o /usr/src/perf_selftes=
ts-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tool=
s/testing/selftests/mm/uffd-unit-tests
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     soft-d=
irty.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.3-=
kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests=
/mm/soft-dirty
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     split_=
huge_page_test.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64=
-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing=
/selftests/mm/split_huge_page_test
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     ksm_te=
sts.c vm_util.c -lrt -lpthread -lnuma -o /usr/src/perf_selftests-x86_64-rhe=
l-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/sel=
ftests/mm/ksm_tests
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     ksm_fu=
nctional_tests.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64=
-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing=
/selftests/mm/ksm_functional_tests
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     mdwe_t=
est.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-rhel-8.3-k=
selftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/=
mm/mdwe_test
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie  -m32 -mxs=
ave  protection_keys.c vm_util.c -lrt -lpthread -lrt -ldl -lm -o /usr/src/p=
erf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b45=
2d07d7/tools/testing/selftests/mm/protection_keys_32
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie  -m64 -mxs=
ave  protection_keys.c vm_util.c -lrt -lpthread -lrt -ldl -o /usr/src/perf_=
selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07=
d7/tools/testing/selftests/mm/protection_keys_64
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     va_hig=
h_addr_switch.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-=
rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/=
selftests/mm/va_high_addr_switch
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     virtua=
l_address_range.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_6=
4-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testin=
g/selftests/mm/virtual_address_range
gcc -Wall -I /usr/src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b=
74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/../../.. -I /usr/src/=
perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b4=
52d07d7/tools/testing/selftests/../../../tools/include/uapi  -isystem /usr/=
src/perf_selftests-x86_64-rhel-8.3-kselftests-d84de15119b74f10be3c0a369561c=
a9b452d07d7/tools/testing/selftests/../../../usr/include -no-pie     write_=
to_hugetlbfs.c vm_util.c -lrt -lpthread -o /usr/src/perf_selftests-x86_64-r=
hel-8.3-kselftests-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/s=
elftests/mm/write_to_hugetlbfs

Warning: missing liburing support. Some tests will be skipped.

make: Leaving directory '/usr/src/perf_selftests-x86_64-rhel-8.3-kselftests=
-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/mm'
2023-05-22 13:15:31 make quicktest=3D1 run_tests -C mm
make: Entering directory '/usr/src/perf_selftests-x86_64-rhel-8.3-kselftest=
s-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/mm'

Warning: missing liburing support. Some tests will be skipped.

TAP version 13
1..39
# selftests: mm: cow
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# ok 29 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out, PTE-mapped THP
# ok 30 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with single PTE of THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# ok 29 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out, PTE-mapped THP
# ok 30 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with single PTE of THP
# ok 31 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with single PTE of swapped-out TH=
P
# ok 32 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with partially mremap()'ed THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# ok 29 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out, PTE-mapped THP
# ok 30 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with single PTE of THP
# ok 31 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with single PTE of swapped-out TH=
P
# ok 32 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with partially mremap()'ed THP
# ok 33 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with partially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# ok 29 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out, PTE-mapped THP
# ok 30 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with single PTE of THP
# ok 31 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with single PTE of swapped-out TH=
P
# ok 32 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with partially mremap()'ed THP
# ok 33 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with partially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# ok 29 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out, PTE-mapped THP
# ok 30 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with single PTE of THP
# ok 31 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with single PTE of swapped-out TH=
P
# ok 32 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with partially mremap()'ed THP
# ok 33 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with partially shared THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# ok 58 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (2048 kB)
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# ok 58 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (2048 kB)
# not ok 59 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (1048576 kB)
# ok 60 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with base page
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# ok 58 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (2048 kB)
# not ok 59 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (1048576 kB)
# ok 60 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with base page
# ok 61 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped out ba=
se page
# ok 62 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# ok 58 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (2048 kB)
# not ok 59 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (1048576 kB)
# ok 60 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with base page
# ok 61 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped out ba=
se page
# ok 62 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with THP
# ok 63 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out TH=
P
# ok 64 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with PTE-mapped THP
# 4 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# not ok 35 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# not ok 47 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# ok 58 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (2048 kB)
# not ok 59 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (1048576 kB)
# ok 60 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with base page
# ok 61 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped out ba=
se page
# ok 62 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with THP
# ok 63 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out TH=
P
# ok 64 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with PTE-mapped THP
# ok 65 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# ok 93 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially sha=
red THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# ok 93 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially sha=
red THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# ok 93 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially sha=
red THP
# ok 94 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (2048=
 kB)
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# ok 93 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially sha=
red THP
# ok 94 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (2048=
 kB)
# ok 95 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (1048=
576 kB)
# ok 96 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with base pa=
ge
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# ok 93 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially sha=
red THP
# ok 94 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (2048=
 kB)
# ok 95 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (1048=
576 kB)
# ok 96 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with base pa=
ge
# ok 97 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
 out base page
# ok 98 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with THP
# nt
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# not ok 71 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# ok 93 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially sha=
red THP
# ok 94 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (2048=
 kB)
# ok 95 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (1048=
576 kB)
# ok 96 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with base pa=
ge
# ok 97 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
 out base page
# ok 98 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with THP
# ok 99 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# ok 115 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of swapped-out THP
# ok 116 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially mremap()'ed THP
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# ok 115 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of swapped-out THP
# ok 116 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially mremap()'ed THP
# ok 117 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially shared THP
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# ok 115 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of swapped-out THP
# ok 116 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially mremap()'ed THP
# ok 117 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially shared THP
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# ok 115 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of swapped-out THP
# ok 116 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially mremap()'ed THP
# ok 117 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially shared THP
# ok 118 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with hu=
getlb (2048 kB)
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# ok 115 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of swapped-out THP
# ok 116 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially mremap()'ed THP
# ok 117 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially shared THP
# ok 118 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with hu=
getlb (2048 kB)
# ok 119 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with hu=
getlb (1048576 kB)
# ok 120 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with base page
# ok 121 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped out bas=
e page
# ok 122 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with THP
# ok 123 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped-out THP
# ok 124 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with PTE-mapped THP
# ok 125 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped-out, PT=
E-mapped THP
# ok 126 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with single PTE of T=
HP
# ok 127 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with single PTE of s=
wapped-out THP
# ok 128 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with partially mrema=
p()'ed THP
# ok 129 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with partially share=
d THP
#  reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# ok 115 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of swapped-out THP
# ok 116 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially mremap()'ed THP
# ok 117 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially shared THP
# ok 118 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with hu=
getlb (2048 kB)
# ok 119 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with hu=
getlb (1048576 kB)
# ok 120 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with base page
# ok 121 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped out bas=
e page
# ok 122 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with THP
# ok 123 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped-out THP
# ok 124 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with PTE-mapped THP
# ok 125 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped-out, PT=
E-mapped THP
# ok 126 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with single PTE of T=
HP
# ok 127 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with single PTE of s=
wapped-out THP
# ok 128 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with partially mrema=
p()'ed THP
# ok 129 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with partially share=
d THP
# ok 130 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (2048 k=
B)
# ok 131 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
#  Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
# ok 142 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (2=
048 kB)
# ok 143 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (1=
048576 kB)
# ok 144 # SKIP need more free huge pages
# # [INFO] Anonymous THP tests
# # [RUN] Basic COW after fork() when collapsing before fork()
#  Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
# ok 142 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (2=
048 kB)
# ok 143 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (1=
048576 kB)
# ok 144 # SKIP need more free huge pages
# # [INFO] Anonymous THP tests
# # [RUN] Basic COW after fork() when collapsing before fork()
# ok 145 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (fully shared=
)
#  Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
# ok 142 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (2=
048 kB)
# ok 143 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (1=
048576 kB)
# ok 144 # SKIP need more free huge pages
# # [INFO] Anonymous THP tests
# # [RUN] Basic COW after fork() when collapsing before fork()
# ok 145 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (fully shared=
)
# ok 146 # SKIP MADV_COLLAPSE failed: Invalid argument
# # [RUN] Basic COW after fork() when collapsing after fork() (lower shared=
)
#  Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
# ok 142 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (2=
048 kB)
# ok 143 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (1=
048576 kB)
# ok 144 # SKIP need more free huge pages
# # [INFO] Anonymous THP tests
# # [RUN] Basic COW after fork() when collapsing before fork()
# ok 145 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (fully shared=
)
# ok 146 # SKIP MADV_COLLAPSE failed: Invalid argument
# # [RUN] Basic COW after fork() when collapsing after fork() (lower shared=
)
# ok 147 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (upper shared=
)
#  Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
# ok 142 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (2=
048 kB)
# ok 143 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (1=
048576 kB)
# ok 144 # SKIP need more free huge pages
# # [INFO] Anonymous THP tests
# # [RUN] Basic COW after fork() when collapsing before fork()
# ok 145 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (fully shared=
)
# ok 146 # SKIP MADV_COLLAPSE failed: Invalid argument
# # [RUN] Basic COW after fork() when collapsing after fork() (lower shared=
)
# ok 147 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (upper shared=
)
# ok 148 No leak from parent into child
# # [RUN] Non-anonymous memory tests in private mappings
# # [RUN] Basic COW ... with shared zeropage
# ok 149 Other mapping not modified
# # [RUN] Basic COW ... with memfd
# ok 150 Other mapping not modified
# # [RUN] Basic COW ... with tmpfile
# ok 151 Other mapping not modified
# # [RUN] Basic COW ... with huge zeropage
# ok 152 Other mapping not modified
# # [RUN] Basic COW ... with memfd hugetlb (2048 kB)
# ok 153 Other mapping not modified
# # [RUN] Basic COW ... with memfd hugetlb (1048576 kB)
# ok 154 # SKIP need more free huge pages
# # [RUN] R/O longterm GUP pin ... with shared zeropage
# ok 155 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP pin ... with memfd
# ok 156 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP pin ... with tmpfile
# ok 157 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP pin ... with huge zeropage
# ok 158 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP pin ... with memfd hugetlb (2048 kB)
# ok 159 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP pin ... with memfd hugetlb (1048576 kB)
# ok 160 # SKIP need more free huge pages
# # [RUN] R/O longterm GUP-fast pin ... with shared zeropage
# ok 161 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP-fast pin ... with memfd
# ok 162 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP-fast pin ... with tmpfile
# ok 163 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP-fast pin ... with huge zeropage
# ok 164 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP-fast pin ... with memfd hugetlb (2048 kB)
# ok 165 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP-fast pin ... with memfd hugetlb (1048576 kB)
# ok 166 # SKIP need more free huge pages
# Bail out! 4 out of 166 tests failed
# # Totals: pass:98 fail:4 xfail:0 xpass:0 skip:64 error:0
not ok 1 selftests: mm: cow # exit=3D1
# selftests: mm: compaction_test
# No of huge pages allocated =3D 6784
ok 2 selftests: mm: compaction_test
# selftests: mm: gup_test
# GUP_FAST_BENCHMARK: Time: get:10145 put:354 us
ok 3 selftests: mm: gup_test
# selftests: mm: hmm-tests
# TAP version 13
# 1..56
# # Starting 56 tests from 4 test cases.
# #  RUN           hmm.hmm_device_private.open_close ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:open_close:Expected self->fd (-1) >=3D 0 (0)
# # open_close: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.open_close
# not ok 1 hmm.hmm_device_private.open_close
# #  RUN           hmm.hmm_device_private.anon_read ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:anon_read:Expected self->fd (-1) >=3D 0 (0)
# # anon_read: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.anon_read
# not ok 2 hmm.hmm_device_private.anon_read
# #  RUN           hmm.hmm_device_private.anon_read_prot ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:anon_read_prot:Expected self->fd (-1) >=3D 0 (0)
# # anon_read_prot: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.anon_read_prot
# not ok 3 hmm.hmm_device_private.anon_read_prot
# #  RUN           hmm.hmm_device_private.anon_write ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:anon_write:Expected self->fd (-1) >=3D 0 (0)
# # anon_write: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.anon_write
# not ok 4 hmm.hmm_device_private.anon_write
# #  RUN           hmm.hmm_device_private.anon_write_prot ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:anon_write_prot:Expected self->fd (-1) >=3D 0 (0)
# # anon_write_prot: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.anon_write_prot
# not ok 5 hmm.hmm_device_private.anon_write_prot
# #  RUN           hmm.hmm_device_private.anon_write_child ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:anon_write_child:Expected self->fd (-1) >=3D 0 (0)
# # anon_write_child: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.anon_write_child
# not ok 6 hmm.hmm_device_private.anon_write_child
# #  RUN           hmm.hmm_device_private.anon_write_child_shared ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:anon_write_child_shared:Expected self->fd (-1) >=3D 0 (=
0)
# # anon_write_child_shared: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.anon_write_child_shared
# not ok 7 hmm.hmm_device_private.anon_write_child_shared
# #  RUN           hmm.hmm_device_private.anon_write_huge ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:anon_write_huge:Expected self->fd (-1) >=3D 0 (0)
# # anon_write_huge: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.anon_write_huge
# not ok 8 hmm.hmm_device_private.anon_write_huge
# #  RUN           hmm.hmm_device_private.anon_write_hugetlbfs ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:anon_write_hugetlbfs:Expected self->fd (-1) >=3D 0 (0)
# # anon_write_hugetlbfs: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.anon_write_hugetlbfs
# not ok 9 hmm.hmm_device_private.anon_write_hugetlbfs
# #  RUN           hmm.hmm_device_private.file_read ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:file_read:Expected self->fd (-1) >=3D 0 (0)
# # file_read: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.file_read
# not ok 10 hmm.hmm_device_private.file_read
# #  RUN           hmm.hmm_device_private.file_write ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:file_write:Expected self->fd (-1) >=3D 0 (0)
# # file_write: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.file_write
# not ok 11 hmm.hmm_device_private.file_write
# #  RUN           hmm.hmm_device_private.migrate ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:migrate:Expected self->fd (-1) >=3D 0 (0)
# # migrate: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.migrate
# not ok 12 hmm.hmm_device_private.migrate
# #  RUN           hmm.hmm_device_private.migrate_fault ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:migrate_fault:Expected self->fd (-1) >=3D 0 (0)
# # migrate_fault: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.migrate_fault
# not ok 13 hmm.hmm_device_private.migrate_fault
# #  RUN           hmm.hmm_device_private.migrate_release ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:migrate_release:Expected self->fd (-1) >=3D 0 (0)
# # migrate_release: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.migrate_release
# not ok 14 hmm.hmm_device_private.migrate_release
# #  RUN           hmm.hmm_device_private.migrate_shared ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:migrate_shared:Expected self->fd (-1) >=3D 0 (0)
# # migrate_shared: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.migrate_shared
# not ok 15 hmm.hmm_device_private.migrate_shared
# #  RUN           hmm.hmm_device_private.migrate_multiple ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:migrate_multiple:Expected self->fd (-1) >=3D 0 (0)
# # migrate_multiple: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.migrate_multiple
# not ok 16 hmm.hmm_device_private.migrate_multiple
# #  RUN           hmm.hmm_device_private.anon_read_multiple ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:anon_read_multiple:Expected self->fd (-1) >=3D 0 (0)
# # anon_read_multiple: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.anon_read_multiple
# not ok 17 hmm.hmm_device_private.anon_read_multiple
# #  RUN           hmm.hmm_device_private.anon_teardown ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:anon_teardown:Expected self->fd (-1) >=3D 0 (0)
# # anon_teardown: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.anon_teardown
# not ok 18 hmm.hmm_device_private.anon_teardown
# #  RUN           hmm.hmm_device_private.mixedmap ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:mixedmap:Expected self->fd (-1) >=3D 0 (0)
# # mixedmap: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.mixedmap
# not ok 19 hmm.hmm_device_private.mixedmap
# #  RUN           hmm.hmm_device_private.compound ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:compound:Expected self->fd (-1) >=3D 0 (0)
# # compound: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.compound
# not ok 20 hmm.hmm_device_private.compound
# #  RUN           hmm.hmm_device_private.exclusive ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:exclusive:Expected self->fd (-1) >=3D 0 (0)
# # exclusive: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.exclusive
# not ok 21 hmm.hmm_device_private.exclusive
# #  RUN           hmm.hmm_device_private.exclusive_mprotect ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:exclusive_mprotect:Expected self->fd (-1) >=3D 0 (0)
# # exclusive_mprotect: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.exclusive_mprotect
# not ok 22 hmm.hmm_device_private.exclusive_mprotect
# #  RUN           hmm.hmm_device_private.exclusive_cow ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:exclusive_cow:Expected self->fd (-1) >=3D 0 (0)
# # exclusive_cow: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.exclusive_cow
# not ok 23 hmm.hmm_device_private.exclusive_cow
# #  RUN           hmm.hmm_device_private.hmm_gup_test ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:hmm_gup_test:Expected self->fd (-1) >=3D 0 (0)
# # hmm_gup_test: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.hmm_gup_test
# not ok 24 hmm.hmm_device_private.hmm_gup_test
# #  RUN           hmm.hmm_device_private.hmm_cow_in_device ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:137:hmm_cow_in_device:Expected self->fd (-1) >=3D 0 (0)
# # hmm_cow_in_device: Test terminated by assertion
# #          FAIL  hmm.hmm_device_private.hmm_cow_in_device
# not ok 25 hmm.hmm_device_private.hmm_cow_in_device
# #  RUN           hmm.hmm_device_coherent.open_close ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.open_close
# ok 26 hmm.hmm_device_coherent.open_close
# #  RUN           hmm.hmm_device_coherent.anon_read ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.anon_read
# ok 27 hmm.hmm_device_coherent.anon_read
# #  RUN           hmm.hmm_device_coherent.anon_read_prot ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.anon_read_prot
# ok 28 hmm.hmm_device_coherent.anon_read_prot
# #  RUN           hmm.hmm_device_coherent.anon_write ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.anon_write
# ok 29 hmm.hmm_device_coherent.anon_write
# #  RUN           hmm.hmm_device_coherent.anon_write_prot ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.anon_write_prot
# ok 30 hmm.hmm_device_coherent.anon_write_prot
# #  RUN           hmm.hmm_device_coherent.anon_write_child ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.anon_write_child
# ok 31 hmm.hmm_device_coherent.anon_write_child
# #  RUN           hmm.hmm_device_coherent.anon_write_child_shared ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.anon_write_child_shared
# ok 32 hmm.hmm_device_coherent.anon_write_child_shared
# #  RUN           hmm.hmm_device_coherent.anon_write_huge ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.anon_write_huge
# ok 33 hmm.hmm_device_coherent.anon_write_huge
# #  RUN           hmm.hmm_device_coherent.anon_write_hugetlbfs ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.anon_write_hugetlbfs
# ok 34 hmm.hmm_device_coherent.anon_write_hugetlbfs
# #  RUN           hmm.hmm_device_coherent.file_read ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.file_read
# ok 35 hmm.hmm_device_coherent.file_read
# #  RUN           hmm.hmm_device_coherent.file_write ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.file_write
# ok 36 hmm.hmm_device_coherent.file_write
# #  RUN           hmm.hmm_device_coherent.migrate ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.migrate
# ok 37 hmm.hmm_device_coherent.migrate
# #  RUN           hmm.hmm_device_coherent.migrate_fault ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.migrate_fault
# ok 38 hmm.hmm_device_coherent.migrate_fault
# #  RUN           hmm.hmm_device_coherent.migrate_release ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.migrate_release
# ok 39 hmm.hmm_device_coherent.migrate_release
# #  RUN           hmm.hmm_device_coherent.migrate_shared ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.migrate_shared
# ok 40 hmm.hmm_device_coherent.migrate_shared
# #  RUN           hmm.hmm_device_coherent.migrate_multiple ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.migrate_multiple
# ok 41 hmm.hmm_device_coherent.migrate_multiple
# #  RUN           hmm.hmm_device_coherent.anon_read_multiple ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.anon_read_multiple
# ok 42 hmm.hmm_device_coherent.anon_read_multiple
# #  RUN           hmm.hmm_device_coherent.anon_teardown ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.anon_teardown
# ok 43 hmm.hmm_device_coherent.anon_teardown
# #  RUN           hmm.hmm_device_coherent.mixedmap ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.mixedmap
# ok 44 hmm.hmm_device_coherent.mixedmap
# #  RUN           hmm.hmm_device_coherent.compound ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.compound
# ok 45 hmm.hmm_device_coherent.compound
# #  RUN           hmm.hmm_device_coherent.exclusive ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.exclusive
# ok 46 hmm.hmm_device_coherent.exclusive
# #  RUN           hmm.hmm_device_coherent.exclusive_mprotect ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.exclusive_mprotect
# ok 47 hmm.hmm_device_coherent.exclusive_mprotect
# #  RUN           hmm.hmm_device_coherent.exclusive_cow ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.exclusive_cow
# ok 48 hmm.hmm_device_coherent.exclusive_cow
# #  RUN           hmm.hmm_device_coherent.hmm_gup_test ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.hmm_gup_test
# ok 49 hmm.hmm_device_coherent.hmm_gup_test
# #  RUN           hmm.hmm_device_coherent.hmm_cow_in_device ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm.hmm_device_coherent.hmm_cow_in_device
# ok 50 hmm.hmm_device_coherent.hmm_cow_in_device
# #  RUN           hmm2.hmm2_device_private.migrate_mixed ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:148:migrate_mixed:Expected self->fd0 (-1) >=3D 0 (0)
# # migrate_mixed: Test terminated by assertion
# #          FAIL  hmm2.hmm2_device_private.migrate_mixed
# not ok 51 hmm2.hmm2_device_private.migrate_mixed
# #  RUN           hmm2.hmm2_device_private.snapshot ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:148:snapshot:Expected self->fd0 (-1) >=3D 0 (0)
# # snapshot: Test terminated by assertion
# #          FAIL  hmm2.hmm2_device_private.snapshot
# not ok 52 hmm2.hmm2_device_private.snapshot
# #  RUN           hmm2.hmm2_device_private.double_map ...
# could not open hmm dmirror driver (/dev/hmm_dmirror0)
# # hmm-tests.c:148:double_map:Expected self->fd0 (-1) >=3D 0 (0)
# # double_map: Test terminated by assertion
# #          FAIL  hmm2.hmm2_device_private.double_map
# not ok 53 hmm2.hmm2_device_private.double_map
# #  RUN           hmm2.hmm2_device_coherent.migrate_mixed ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm2.hmm2_device_coherent.migrate_mixed
# ok 54 hmm2.hmm2_device_coherent.migrate_mixed
# #  RUN           hmm2.hmm2_device_coherent.snapshot ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm2.hmm2_device_coherent.snapshot
# ok 55 hmm2.hmm2_device_coherent.snapshot
# #  RUN           hmm2.hmm2_device_coherent.double_map ...
# could not open hmm dmirror driver (/dev/hmm_dmirror2)
# #      SKIP      DEVICE_COHERENT not available
# #            OK  hmm2.hmm2_device_coherent.double_map
# ok 56 hmm2.hmm2_device_coherent.double_map
# # FAILED: 28 / 56 tests passed.
# # Totals: pass:28 fail:28 xfail:0 xpass:0 skip:0 error:0
not ok 4 selftests: mm: hmm-tests # exit=3D1
# selftests: mm: hugetlb-madvise
# Not enough free huge pages to test, exiting!
not ok 5 selftests: mm: hugetlb-madvise # exit=3D1
# selftests: mm: hugetlb-read-hwpoison
#  !!! read failed: Input/output error
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  !!! mmap for primary mapping failed: Cannot allocate memory
#  ... Write/read chunk size=3D0x800
# HugeTLB read regression test...
#  ... expect to read 0x200000 bytes of data in total
#  ... actually read 0x200000 bytes of data in total
# HugeTLB read regression test...TEST_PASSED
# HugeTLB read HWPOISON test...
#  ... expect to read 0x101000 bytes of data in total
#  ... actually read 0x101000 bytes of data in total
# HugeTLB read HWPOISON test...TEST_PASSED
# HugeTLB seek then read HWPOISON test...
#  ... init val=3D4 with offset=3D0x102000
#  ... expect to read 0xfe000 bytes of data in total
#  ... actually read 0xfe000 bytes of data in total
# HugeTLB seek then read HWPOISON test...TEST_PASSED
#  ... Write/read chunk size=3D0x1000
# HugeTLB read regression test...
# HugeTLB read regression test...TEST_SKIPPED
# HugeTLB read HWPOISON test...
# HugeTLB read HWPOISON test...TEST_SKIPPED
# HugeTLB seek then read HWPOISON test...
# HugeTLB seek then read HWPOISON test...TEST_SKIPPED
#  ... Write/read chunk size=3D0x2000
# HugeTLB read regression test...
# HugeTLB read regression test...TEST_SKIPPED
# HugeTLB read HWPOISON test...
# HugeTLB read HWPOISON test...TEST_SKIPPED
# HugeTLB seek then read HWPOISON test...
# HugeTLB seek then read HWPOISON test...TEST_SKIPPED
#  ... Write/read chunk size=3D0x4000
# HugeTLB read regression test...
# HugeTLB read regression test...TEST_SKIPPED
# HugeTLB read HWPOISON test...
# HugeTLB read HWPOISON test...TEST_SKIPPED
# HugeTLB seek then read HWPOISON test...
# HugeTLB seek then read HWPOISON test...TEST_SKIPPED
ok 6 selftests: mm: hugetlb-read-hwpoison
# selftests: mm: hugepage-mmap
# mmap: Cannot allocate memory
not ok 7 selftests: mm: hugepage-mmap # exit=3D1
# selftests: mm: hugepage-mremap
# mmap1: Cannot allocate memory
# Map haddr: Returned address is 0xffffffffffffffff
not ok 8 selftests: mm: hugepage-mremap # exit=3D1
# selftests: mm: hugepage-shm
# shmget: Cannot allocate memory
not ok 9 selftests: mm: hugepage-shm # exit=3D1
# selftests: mm: hugepage-vmemmap
# mmap: Cannot allocate memory
not ok 10 selftests: mm: hugepage-vmemmap # exit=3D1
# selftests: mm: khugepaged
# Save THP and khugepaged settings... =1B[32mOK=1B[0m
# Allocate huge page on fault... =1B[32mOK=1B[0m
# Split huge PMD on MADV_DONTNEED... =1B[32mOK=1B[0m
#=20
# Run test: collapse_full (khugepaged:anon)
# Collapse multiple fully populated PTE table.... =1B[32mOK=1B[0m
#=20
# Run test: collapse_full (madvise:anon)
# Collapse multiple fully populated PTE table... =1B[32mOK=1B[0m
#=20
# Run test: collapse_empty (khugepaged:anon)
# Do not collapse empty PTE table.... =1B[32mOK=1B[0m
#=20
# Run test: collapse_empty (madvise:anon)
# Do not collapse empty PTE table... =1B[32mOK=1B[0m
#=20
# Run test: collapse_single_pte_entry (khugepaged:anon)
# Collapse PTE table with single PTE entry present.... =1B[32mOK=1B[0m
#=20
# Run test: collapse_single_pte_entry (madvise:anon)
# Collapse PTE table with single PTE entry present... =1B[32mOK=1B[0m
#=20
# Run test: collapse_max_ptes_none (khugepaged:anon)
# Maybe collapse with max_ptes_none exceeded.... =1B[32mOK=1B[0m
# Collapse with max_ptes_none PTEs empty... =1B[32mOK=1B[0m
#=20
# Run test: collapse_max_ptes_none (madvise:anon)
# Maybe collapse with max_ptes_none exceeded... =1B[32mOK=1B[0m
#=20
# Run test: collapse_single_pte_entry_compound (khugepaged:anon)
# Allocate huge page... =1B[32mOK=1B[0m
# Split huge page leaving single PTE mapping compound page... =1B[32mOK=1B[=
0m
# Collapse PTE table with single PTE mapping compound page.... =1B[32mOK=1B=
[0m
#=20
# Run test: collapse_single_pte_entry_compound (madvise:anon)
# Allocate huge page... =1B[32mOK=1B[0m
# Split huge page leaving single PTE mapping compound page... =1B[32mOK=1B[=
0m
# Collapse PTE table with single PTE mapping compound page... =1B[32mOK=1B[=
0m
#=20
# Run test: collapse_full_of_compound (khugepaged:anon)
# Allocate huge page... =1B[32mOK=1B[0m
# Split huge page leaving single PTE page table full of compound pages... =
=1B[32mOK=1B[0m
# Collapse PTE table full of compound pages.... =1B[32mOK=1B[0m
#=20
# Run test: collapse_full_of_compound (madvise:anon)
# Allocate huge page... =1B[32mOK=1B[0m
# Split huge page leaving single PTE page table full of compound pages... =
=1B[32mOK=1B[0m
# Collapse PTE table full of compound pages... =1B[32mOK=1B[0m
#=20
# Run test: collapse_compound_extreme (khugepaged:anon)
# =0DConstruct PTE page table full of different PTE-mapped compound pages  =
 1/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages   2/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages   3/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages   4/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages   5/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages   6/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages   7/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages   8/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages   9/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages  10/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages  11/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
  12/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages  13/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages  14/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages  15/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages  16/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages  17/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages  18/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages  19/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages  20/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages  21/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages  22=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges  23/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages  24/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages  25/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages  26/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages  27/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages  28/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages  29/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages  30/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages  31/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages  32/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages  =
33/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages  34/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages  35/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages  36/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages  37/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages  38/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages  39/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages  40/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages  41/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages  42/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages  43/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
  44/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages  45/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages  46/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages  47/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages  48/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages  49/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages  50/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages  51/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages  52/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages  53/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages  54=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges  55/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages  56/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages  57/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages  58/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages  59/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages  60/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages  61/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages  62/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages  63/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages  64/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages  =
65/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages  66/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages  67/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages  68/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages  69/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages  70/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages  71/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages  72/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages  73/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages  74/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages  75/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
  76/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages  77/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages  78/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages  79/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages  80/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages  81/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages  82/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages  83/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages  84/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages  85/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages  86=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges  87/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages  88/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages  89/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages  90/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages  91/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages  92/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages  93/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages  94/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages  95/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages  96/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages  =
97/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages  98/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages  99/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 100/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 101/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 102/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 103/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 104/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 105/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 106/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 107/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 108/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 109/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 110/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 111/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 112/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 113/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 114/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 115/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 116/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 117/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 118=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 119/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 120/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 121/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 122/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 123/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 124/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 125/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 126/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 127/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 128/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 1=
29/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 130/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 131/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 132/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 133/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 134/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 135/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 136/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 137/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 138/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 139/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 140/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 141/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 142/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 143/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 144/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 145/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 146/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 147/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 148/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 149/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 150=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 151/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 152/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 153/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 154/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 155/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 156/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 157/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 158/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 159/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 160/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 1=
61/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 162/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 163/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 164/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 165/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 166/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 167/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 168/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 169/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 170/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 171/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 172/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 173/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 174/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 175/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 176/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 177/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 178/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 179/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 180/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 181/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 182=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 183/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 184/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 185/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 186/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 187/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 188/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 189/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 190/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 191/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 192/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 1=
93/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 194/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 195/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 196/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 197/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 198/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 199/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 200/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 201/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 202/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 203/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 204/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 205/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 206/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 207/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 208/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 209/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 210/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 211/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 212/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 213/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 214=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 215/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 216/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 217/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 218/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 219/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 220/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 221/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 222/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 223/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 224/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 2=
25/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 226/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 227/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 228/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 229/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 230/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 231/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 232/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 233/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 234/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 235/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 236/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 237/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 238/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 239/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 240/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 241/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 242/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 243/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 244/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 245/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 246=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 247/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 248/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 249/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 250/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 251/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 252/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 253/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 254/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 255/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 256/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 2=
57/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 258/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 259/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 260/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 261/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 262/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 263/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 264/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 265/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 266/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 267/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 268/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 269/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 270/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 271/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 272/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 273/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 274/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 275/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 276/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 277/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 278=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 279/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 280/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 281/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 282/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 283/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 284/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 285/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 286/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 287/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 288/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 2=
89/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 290/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 291/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 292/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 293/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 294/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 295/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 296/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 297/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 298/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 299/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 300/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 301/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 302/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 303/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 304/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 305/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 306/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 307/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 308/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 309/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 310=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 311/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 312/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 313/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 314/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 315/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 316/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 317/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 318/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 319/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 320/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 3=
21/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 322/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 323/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 324/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 325/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 326/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 327/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 328/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 329/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 330/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 331/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 332/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 333/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 334/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 335/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 336/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 337/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 338/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 339/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 340/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 341/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 342=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 343/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 344/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 345/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 346/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 347/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 348/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 349/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 350/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 351/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 352/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 3=
53/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 354/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 355/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 356/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 357/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 358/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 359/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 360/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 361/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 362/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 363/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 364/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 365/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 366/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 367/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 368/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 369/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 370/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 371/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 372/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 373/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 374=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 375/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 376/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 377/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 378/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 379/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 380/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 381/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 382/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 383/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 384/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 3=
85/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 386/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 387/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 388/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 389/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 390/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 391/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 392/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 393/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 394/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 395/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 396/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 397/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 398/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 399/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 400/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 401/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 402/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 403/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 404/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 405/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 406=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 407/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 408/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 409/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 410/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 411/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 412/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 413/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 414/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 415/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 416/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 4=
17/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 418/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 419/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 420/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 421/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 422/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 423/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 424/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 425/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 426/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 427/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 428/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 429/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 430/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 431/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 432/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 433/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 434/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 435/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 436/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 437/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 438=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 439/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 440/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 441/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 442/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 443/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 444/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 445/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 446/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 447/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 448/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 4=
49/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 450/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 451/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 452/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 453/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 454/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 455/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 456/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 457/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 458/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 459/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 460/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 461/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 462/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 463/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 464/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 465/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 466/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 467/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 468/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 469/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 470=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 471/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 472/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 473/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 474/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 475/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 476/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 477/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 478/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 479/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 480/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 4=
81/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 482/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 483/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 484/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 485/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 486/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 487/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 488/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 489/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 490/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 491/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 492/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 493/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 494/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 495/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 496/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 497/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 498/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 499/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 500/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 501/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 502=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 503/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 504/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 505/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 506/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 507/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 508/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 509/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 510/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 511/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 512/512.=
.. =1B[32mOK=1B[0m
# Collapse PTE table full of different compound pages.... =1B[32mOK=1B[0m
#=20
# Run test: collapse_compound_extreme (madvise:anon)
# =0DConstruct PTE page table full of different PTE-mapped compound pages  =
 1/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages   2/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages   3/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages   4/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages   5/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages   6/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages   7/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages   8/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages   9/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages  10/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages  11/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
  12/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages  13/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages  14/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages  15/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages  16/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages  17/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages  18/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages  19/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages  20/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages  21/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages  22=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges  23/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages  24/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages  25/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages  26/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages  27/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages  28/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages  29/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages  30/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages  31/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages  32/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages  =
33/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages  34/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages  35/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages  36/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages  37/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages  38/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages  39/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages  40/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages  41/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages  42/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages  43/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
  44/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages  45/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages  46/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages  47/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages  48/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages  49/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages  50/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages  51/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages  52/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages  53/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages  54=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges  55/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages  56/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages  57/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages  58/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages  59/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages  60/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages  61/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages  62/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages  63/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages  64/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages  =
65/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages  66/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages  67/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages  68/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages  69/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages  70/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages  71/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages  72/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages  73/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages  74/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages  75/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
  76/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages  77/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages  78/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages  79/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages  80/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages  81/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages  82/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages  83/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages  84/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages  85/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages  86=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges  87/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages  88/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages  89/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages  90/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages  91/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages  92/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages  93/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages  94/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages  95/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages  96/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages  =
97/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages  98/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages  99/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 100/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 101/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 102/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 103/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 104/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 105/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 106/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 107/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 108/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 109/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 110/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 111/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 112/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 113/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 114/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 115/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 116/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 117/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 118=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 119/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 120/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 121/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 122/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 123/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 124/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 125/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 126/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 127/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 128/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 1=
29/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 130/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 131/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 132/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 133/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 134/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 135/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 136/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 137/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 138/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 139/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 140/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 141/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 142/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 143/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 144/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 145/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 146/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 147/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 148/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 149/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 150=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 151/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 152/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 153/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 154/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 155/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 156/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 157/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 158/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 159/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 160/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 1=
61/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 162/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 163/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 164/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 165/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 166/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 167/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 168/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 169/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 170/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 171/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 172/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 173/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 174/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 175/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 176/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 177/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 178/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 179/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 180/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 181/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 182=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 183/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 184/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 185/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 186/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 187/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 188/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 189/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 190/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 191/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 192/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 1=
93/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 194/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 195/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 196/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 197/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 198/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 199/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 200/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 201/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 202/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 203/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 204/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 205/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 206/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 207/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 208/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 209/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 210/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 211/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 212/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 213/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 214=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 215/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 216/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 217/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 218/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 219/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 220/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 221/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 222/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 223/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 224/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 2=
25/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 226/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 227/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 228/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 229/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 230/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 231/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 232/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 233/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 234/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 235/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 236/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 237/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 238/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 239/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 240/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 241/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 242/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 243/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 244/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 245/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 246=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 247/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 248/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 249/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 250/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 251/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 252/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 253/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 254/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 255/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 256/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 2=
57/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 258/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 259/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 260/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 261/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 262/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 263/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 264/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 265/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 266/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 267/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 268/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 269/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 270/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 271/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 272/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 273/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 274/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 275/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 276/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 277/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 278=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 279/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 280/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 281/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 282/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 283/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 284/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 285/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 286/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 287/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 288/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 2=
89/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 290/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 291/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 292/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 293/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 294/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 295/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 296/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 297/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 298/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 299/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 300/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 301/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 302/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 303/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 304/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 305/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 306/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 307/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 308/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 309/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 310=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 311/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 312/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 313/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 314/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 315/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 316/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 317/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 318/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 319/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 320/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 3=
21/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 322/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 323/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 324/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 325/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 326/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 327/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 328/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 329/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 330/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 331/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 332/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 333/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 334/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 335/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 336/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 337/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 338/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 339/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 340/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 341/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 342=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 343/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 344/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 345/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 346/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 347/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 348/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 349/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 350/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 351/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 352/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 3=
53/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 354/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 355/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 356/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 357/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 358/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 359/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 360/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 361/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 362/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 363/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 364/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 365/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 366/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 367/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 368/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 369/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 370/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 371/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 372/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 373/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 374=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 375/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 376/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 377/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 378/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 379/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 380/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 381/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 382/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 383/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 384/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 3=
85/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 386/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 387/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 388/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 389/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 390/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 391/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 392/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 393/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 394/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 395/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 396/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 397/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 398/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 399/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 400/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 401/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 402/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 403/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 404/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 405/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 406=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 407/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 408/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 409/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 410/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 411/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 412/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 413/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 414/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 415/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 416/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 4=
17/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 418/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 419/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 420/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 421/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 422/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 423/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 424/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 425/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 426/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 427/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 428/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 429/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 430/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 431/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 432/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 433/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 434/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 435/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 436/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 437/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 438=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 439/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 440/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 441/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 442/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 443/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 444/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 445/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 446/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 447/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 448/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 4=
49/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 450/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 451/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 452/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 453/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 454/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 455/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 456/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 457/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 458/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 459/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 460/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 461/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 462/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 463/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 464/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 465/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 466/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 467/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 468/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 469/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 470=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 471/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 472/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 473/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 474/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 475/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 476/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 477/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 478/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 479/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 480/512.=
..=0DConstruct PTE page table full of different PTE-mapped compound pages 4=
81/512...=0DConstruct PTE page table full of different PTE-mapped compound =
pages 482/512...=0DConstruct PTE page table full of different PTE-mapped co=
mpound pages 483/512...=0DConstruct PTE page table full of different PTE-ma=
pped compound pages 484/512...=0DConstruct PTE page table full of different=
 PTE-mapped compound pages 485/512...=0DConstruct PTE page table full of di=
fferent PTE-mapped compound pages 486/512...=0DConstruct PTE page table ful=
l of different PTE-mapped compound pages 487/512...=0DConstruct PTE page ta=
ble full of different PTE-mapped compound pages 488/512...=0DConstruct PTE =
page table full of different PTE-mapped compound pages 489/512...=0DConstru=
ct PTE page table full of different PTE-mapped compound pages 490/512...=0D=
Construct PTE page table full of different PTE-mapped compound pages 491/51=
2...=0DConstruct PTE page table full of different PTE-mapped compound pages=
 492/512...=0DConstruct PTE page table full of different PTE-mapped compoun=
d pages 493/512...=0DConstruct PTE page table full of different PTE-mapped =
compound pages 494/512...=0DConstruct PTE page table full of different PTE-=
mapped compound pages 495/512...=0DConstruct PTE page table full of differe=
nt PTE-mapped compound pages 496/512...=0DConstruct PTE page table full of =
different PTE-mapped compound pages 497/512...=0DConstruct PTE page table f=
ull of different PTE-mapped compound pages 498/512...=0DConstruct PTE page =
table full of different PTE-mapped compound pages 499/512...=0DConstruct PT=
E page table full of different PTE-mapped compound pages 500/512...=0DConst=
ruct PTE page table full of different PTE-mapped compound pages 501/512...=
=0DConstruct PTE page table full of different PTE-mapped compound pages 502=
/512...=0DConstruct PTE page table full of different PTE-mapped compound pa=
ges 503/512...=0DConstruct PTE page table full of different PTE-mapped comp=
ound pages 504/512...=0DConstruct PTE page table full of different PTE-mapp=
ed compound pages 505/512...=0DConstruct PTE page table full of different P=
TE-mapped compound pages 506/512...=0DConstruct PTE page table full of diff=
erent PTE-mapped compound pages 507/512...=0DConstruct PTE page table full =
of different PTE-mapped compound pages 508/512...=0DConstruct PTE page tabl=
e full of different PTE-mapped compound pages 509/512...=0DConstruct PTE pa=
ge table full of different PTE-mapped compound pages 510/512...=0DConstruct=
 PTE page table full of different PTE-mapped compound pages 511/512...=0DCo=
nstruct PTE page table full of different PTE-mapped compound pages 512/512.=
.. =1B[32mOK=1B[0m
# Collapse PTE table full of different compound pages... =1B[32mOK=1B[0m
#=20
# Run test: collapse_swapin_single_pte (khugepaged:anon)
# Swapout one page... =1B[31mFail=1B[0m
#=20
# Run test: collapse_swapin_single_pte (madvise:anon)
# Swapout one page... =1B[31mFail=1B[0m
#=20
# Run test: collapse_max_ptes_swap (khugepaged:anon)
# Swapout 65 of 512 pages... =1B[31mFail=1B[0m
#=20
# Run test: collapse_max_ptes_swap (madvise:anon)
# Swapout 65 of 512 pages... =1B[31mFail=1B[0m
#=20
# Run test: collapse_fork (khugepaged:anon)
# Allocate small page... =1B[32mOK=1B[0m
# Share small page over fork()... =1B[32mOK=1B[0m
# Collapse PTE table with single page shared with parent process.... =1B[32=
mOK=1B[0m
# Check if parent still has small page... =1B[32mOK=1B[0m
#=20
# Run test: collapse_fork (madvise:anon)
# Allocate small page... =1B[32mOK=1B[0m
# Share small page over fork()... =1B[32mOK=1B[0m
# Collapse PTE table with single page shared with parent process... =1B[32m=
OK=1B[0m
# Check if parent still has small page... =1B[32mOK=1B[0m
#=20
# Run test: collapse_fork_compound (khugepaged:anon)
# Allocate huge page... =1B[32mOK=1B[0m
# Share huge page over fork()... =1B[32mOK=1B[0m
# Split huge page PMD in child process... =1B[32mOK=1B[0m
# Collapse PTE table full of compound pages in child.... =1B[32mOK=1B[0m
# Check if parent still has huge page... =1B[32mOK=1B[0m
#=20
# Run test: collapse_fork_compound (madvise:anon)
# Allocate huge page... =1B[32mOK=1B[0m
# Share huge page over fork()... =1B[32mOK=1B[0m
# Split huge page PMD in child process... =1B[32mOK=1B[0m
# Collapse PTE table full of compound pages in child... =1B[32mOK=1B[0m
# Check if parent still has huge page... =1B[32mOK=1B[0m
#=20
# Run test: collapse_max_ptes_shared (khugepaged:anon)
# Allocate huge page... =1B[32mOK=1B[0m
# Share huge page over fork()... =1B[32mOK=1B[0m
# Trigger CoW on page 255 of 512... =1B[32mOK=1B[0m
# Maybe collapse with max_ptes_shared exceeded.... =1B[32mOK=1B[0m
# Trigger CoW on page 256 of 512... =1B[32mOK=1B[0m
# Collapse with max_ptes_shared PTEs shared.... =1B[32mOK=1B[0m
# Check if parent still has huge page... =1B[32mOK=1B[0m
#=20
# Run test: collapse_max_ptes_shared (madvise:anon)
# Allocate huge page... =1B[32mOK=1B[0m
# Share huge page over fork()... =1B[32mOK=1B[0m
# Trigger CoW on page 255 of 512... =1B[32mOK=1B[0m
# Maybe collapse with max_ptes_shared exceeded... =1B[32mOK=1B[0m
# Check if parent still has huge page... =1B[32mOK=1B[0m
#=20
# Run test: madvise_collapse_existing_thps (madvise:anon)
# Collapse fully populated PTE table...... =1B[32mOK=1B[0m
# Re-collapse PMD-mapped hugepage... =1B[32mOK=1B[0m
# Restore THP and khugepaged settings... =1B[32mOK=1B[0m
ok 11 selftests: mm: khugepaged # SKIP
# selftests: mm: madv_populate
# TAP version 13
# 1..21
# # [RUN] test_prot_read
# ok 1 MADV_POPULATE_READ with PROT_READ
# ok 2 MADV_POPULATE_WRITE with PROT_READ
# # [RUN] test_prot_write
# ok 3 MADV_POPULATE_READ with PROT_WRITE
# ok 4 MADV_POPULATE_WRITE with PROT_WRITE
# # [RUN] test_holes
# ok 5 MADV_POPULATE_READ with holes in the middle
# ok 6 MADV_POPULATE_WRITE with holes in the middle
# ok 7 MADV_POPULATE_READ with holes at the end
# ok 8 MADV_POPULATE_WRITE with holes at the end
# ok 9 MADV_POPULATE_READ with holes at the beginning
# ok 10 MADV_POPULATE_WRITE with holes at the beginning
# # [RUN] test_populate_read
# ok 11 range initially not populated
# ok 12 MADV_POPULATE_READ
# ok 13 range is populated
# # [RUN] test_populate_write
# ok 14 range initially not populated
# ok 15 MADV_POPULATE_WRITE
# ok 16 range is populated
# # [RUN] test_softdirty
# ok 17 range is not softdirty
# ok 18 MADV_POPULATE_READ
# ok 19 range is not softdirty
# ok 20 MADV_POPULATE_WRITE
# ok 21 range is softdirty
# # Totals: pass:21 fail:0 xfail:0 xpass:0 skip:0 error:0
ok 12 selftests: mm: madv_populate
# selftests: mm: map_fixed_noreplace
# mmap() @ 0x7f90a0555000-0x7f90a055a000 p=3D0x7f90a0555000 result=3DSucces=
s
# unmap() successful
# mmap() @ 0x7f90a0556000-0x7f90a0559000 p=3D0x7f90a0556000 result=3DSucces=
s
# mmap() @ 0x7f90a0555000-0x7f90a055a000 p=3D0xffffffffffffffff result=3DFi=
le exists
# mmap() @ 0x7f90a0557000-0x7f90a0558000 p=3D0xffffffffffffffff result=3DFi=
le exists
# mmap() @ 0x7f90a0558000-0x7f90a055a000 p=3D0xffffffffffffffff result=3DFi=
le exists
# mmap() @ 0x7f90a0555000-0x7f90a0557000 p=3D0xffffffffffffffff result=3DFi=
le exists
# mmap() @ 0x7f90a0555000-0x7f90a0556000 p=3D0x7f90a0555000 result=3DSucces=
s
# mmap() @ 0x7f90a0559000-0x7f90a055a000 p=3D0x7f90a0559000 result=3DSucces=
s
# unmap() successful
# OK
ok 13 selftests: mm: map_fixed_noreplace
# selftests: mm: map_hugetlb
# mmap: Cannot allocate memory
# Default size hugepages
# Mapping 256 Mbytes
not ok 14 selftests: mm: map_hugetlb # exit=3D1
# selftests: mm: map_populate
ok 15 selftests: mm: map_populate
# selftests: mm: memfd_secret
# page_size: 4096, mlock.soft: 8388608, mlock.hard: 8388608
# TAP version 13
# 1..4
# ok 2 # SKIP memfd_secret is not supported
# # Planned tests !=3D run tests (4 !=3D 1)
# # Totals: pass:0 fail:0 xfail:0 xpass:0 skip:1 error:0
ok 16 selftests: mm: memfd_secret # SKIP
# selftests: mm: migration
# TAP version 13
# 1..3
# # Starting 3 tests from 1 test cases.
# #  RUN           migration.private_anon ...
# #      SKIP      Not enough threads or NUMA nodes available
# #            OK  migration.private_anon
# ok 1 # SKIP Not enough threads or NUMA nodes available
# #  RUN           migration.shared_anon ...
# #      SKIP      Not enough threads or NUMA nodes available
# #            OK  migration.shared_anon
# ok 2 # SKIP Not enough threads or NUMA nodes available
# #  RUN           migration.private_anon_thp ...
# #      SKIP      Not enough threads or NUMA nodes available
# #            OK  migration.private_anon_thp
# ok 3 # SKIP Not enough threads or NUMA nodes available
# # PASSED: 3 / 3 tests passed.
# # Totals: pass:0 fail:0 xfail:0 xpass:0 skip:3 error:0
ok 17 selftests: mm: migration
# selftests: mm: mkdirty
# # [INFO] detected THP size: 2048 KiB
# TAP version 13
# 1..6
# # [INFO] PTRACE write access
# ok 1 SIGSEGV generated, page not modified
# # [INFO] PTRACE write access to THP
# ok 2 SIGSEGV generated, page not modified
# # [INFO] Page migration
# ok 3 SIGSEGV generated, page not modified
# # [INFO] Page migration of THP
# ok 4 SIGSEGV generated, page not modified
# # [INFO] PTE-mapping a THP
# ok 5 SIGSEGV generated, page not modified
# # [INFO] UFFDIO_COPY
# ok 6 SIGSEGV generated, page not modified
# # Totals: pass:6 fail:0 xfail:0 xpass:0 skip:0 error:0
ok 18 selftests: mm: mkdirty
# selftests: mm: mlock-random-test
# mlock2() failure at |0x146d310(131072)| mlock:|0x147b45f(72362)|
not ok 19 selftests: mm: mlock-random-test # exit=3D255
# selftests: mm: mlock2-tests
# munlock(): Cannot allocate memory
# munlock(): Cannot allocate memory
not ok 20 selftests: mm: mlock2-tests # exit=3D2
# selftests: mm: mrelease_test
# process_mrelease with wrong pidfd: Function not implemented
ok 21 selftests: mm: mrelease_test # SKIP
# selftests: mm: mremap_dontunmap
# OK
ok 22 selftests: mm: mremap_dontunmap
# selftests: mm: mremap_test
# # Test configs:
# 	threshold_mb=3D4
# 	pattern_seed=3D1684761360
#=20
# 1..15
# # mremap failed: Invalid argument
# ok 1 # XFAIL mremap - Source and Destination Regions Overlapping
# 	Expected mremap failure
# # mremap failed: Invalid argument
# ok 2 # XFAIL mremap - Destination Address Misaligned (1KB-aligned)
# 	Expected mremap failure
# # Failed to map source region: Invalid argument
# ok 3 # XFAIL mremap - Source Address Misaligned (1KB-aligned)
# 	Expected mremap failure
# ok 4 8KB mremap - Source PTE-aligned, Destination PTE-aligned
# 	mremap time:       265523ns
# ok 5 2MB mremap - Source 1MB-aligned, Destination PTE-aligned
# 	mremap time:       322113ns
# ok 6 2MB mremap - Source 1MB-aligned, Destination 1MB-aligned
# 	mremap time:       311327ns
# ok 7 4MB mremap - Source PMD-aligned, Destination PTE-aligned
# 	mremap time:       356201ns
# ok 8 4MB mremap - Source PMD-aligned, Destination 1MB-aligned
# 	mremap time:       355722ns
# ok 9 4MB mremap - Source PMD-aligned, Destination PMD-aligned
# 	mremap time:       224092ns
# ok 10 2GB mremap - Source PUD-aligned, Destination PTE-aligned
# ok 11 2GB mremap - Source PUD-aligned, Destination 1MB-aligned
# ok 12 2GB mremap - Source PUD-aligned, Destination PMD-aligned
# ok 13 2GB mremap - Source PUD-aligned, Destination PUD-aligned
# ok 14 mremap expand merge
# ok 15 mremap expand merge offset
# # Totals: pass:12 fail:0 xfail:3 xpass:0 skip:0 error:0
ok 23 selftests: mm: mremap_test
# selftests: mm: on-fault-limit
# mmap should have failed, but didn't
not ok 24 selftests: mm: on-fault-limit # exit=3D1
# selftests: mm: thuge-gen
# Found 1024MB
# Found 2MB
# Not enough huge pages for page size 1024 MB, need 4
ok 25 selftests: mm: thuge-gen
# selftests: mm: transhuge-stress
# transhuge-stress: allocate 13829 transhuge pages, using 27658 MiB virtual=
 memory and 108 MiB of ram
# transhuge-stress: 22.996 s/loop, 1.663 ms/page,   1202.708 MiB/s	11733 su=
cceed, 2096 failed, 11449 different pages
# transhuge-stress: 29.272 s/loop, 2.117 ms/page,    944.861 MiB/s	12315 su=
cceed, 1514 failed, 11397 different pages
# transhuge-stress: 36.769 s/loop, 2.659 ms/page,    752.205 MiB/s	11389 su=
cceed, 2440 failed, 11379 different pages
# transhuge-stress: 36.047 s/loop, 2.607 ms/page,    767.282 MiB/s	11468 su=
cceed, 2361 failed, 11380 different pages
# transhuge-stress: 35.626 s/loop, 2.576 ms/page,    776.334 MiB/s	11453 su=
cceed, 2376 failed, 11397 different pages
# transhuge-stress: 36.810 s/loop, 2.662 ms/page,    751.374 MiB/s	11403 su=
cceed, 2426 failed, 11380 different pages
# transhuge-stress: 32.209 s/loop, 2.329 ms/page,    858.702 MiB/s	11378 su=
cceed, 2451 failed, 11378 different pages
# transhuge-stress: 47.499 s/loop, 3.435 ms/page,    582.281 MiB/s	12267 su=
cceed, 1562 failed, 10467 different pages
# transhuge-stress: 28.321 s/loop, 2.048 ms/page,    976.601 MiB/s	12849 su=
cceed,  980 failed, 11402 different pages
# transhuge-stress: 38.950 s/loop, 2.817 ms/page,    710.089 MiB/s	11367 su=
cceed, 2462 failed, 11367 different pages
# transhuge-stress: 43.143 s/loop, 3.120 ms/page,    641.071 MiB/s	11374 su=
cceed, 2455 failed, 11374 different pages
# transhuge-stress: 43.020 s/loop, 3.111 ms/page,    642.906 MiB/s	11485 su=
cceed, 2344 failed, 11383 different pages
# transhuge-stress: 43.719 s/loop, 3.161 ms/page,    632.633 MiB/s	11397 su=
cceed, 2432 failed, 11380 different pages
# transhuge-stress: 44.234 s/loop, 3.199 ms/page,    625.259 MiB/s	11386 su=
cceed, 2443 failed, 11383 different pages
# transhuge-stress: 43.734 s/loop, 3.162 ms/page,    632.416 MiB/s	11406 su=
cceed, 2423 failed, 11375 different pages
#
not ok 26 selftests: mm: transhuge-stress # TIMEOUT 600 seconds
# selftests: mm: uffd-stress
#=20
# Usage: ./userfaultfd <test type> <MiB> <bounces>
#=20
# Supported <test type>: anon, hugetlb, hugetlb-private, shmem, shmem-priva=
te
#=20
# Examples:
#=20
# # Run anonymous memory test on 100MiB region with 99999 bounces:
# ./userfaultfd anon 100 99999
#=20
# # Run share memory test on 1GiB region with 99 bounces:
# ./userfaultfd shmem 1000 99
#=20
# # Run hugetlb memory test on 256MiB region with 50 bounces:
# ./userfaultfd hugetlb 256 50
#=20
# # Run the same hugetlb test but using private file:
# ./userfaultfd hugetlb-private 256 50
#=20
# # 10MiB-~6GiB 999 bounces anonymous test, continue forever unless an erro=
r triggers
# while ./userfaultfd anon $[RANDOM % 6000 + 10] 999; do true; done
#=20
not ok 27 selftests: mm: uffd-stress # exit=3D1
# selftests: mm: uffd-unit-tests
# Testing UFFDIO_API (with syscall)... done
# Testing UFFDIO_API (with /dev/userfaultfd)... done
# Testing register-ioctls on anon... done
# Testing register-ioctls on shmem... done
# Testing register-ioctls on shmem-private... done
# Testing register-ioctls on hugetlb... skipped [reason: memory allocation =
failed]
# Testing register-ioctls on hugetlb-private... skipped [reason: memory all=
ocation failed]
# Testing zeropage on anon... done
# Testing zeropage on shmem... done
# Testing zeropage on shmem-private... done
# Testing zeropage on hugetlb... skipped [reason: memory allocation failed]
# Testing zeropage on hugetlb-private... skipped [reason: memory allocation=
 failed]
# Testing wp-fork on anon... done
# Testing wp-fork on shmem... done
# Testing wp-fork on shmem-private... done
# Testing wp-fork on hugetlb... skipped [reason: memory allocation failed]
# Testing wp-fork on hugetlb-private... skipped [reason: memory allocation =
failed]
# Testing wp-fork-with-event on anon... done
# Testing wp-fork-with-event on shmem... done
# Testing wp-fork-with-event on shmem-private... done
# Testing wp-fork-with-event on hugetlb... skipped [reason: memory allocati=
on failed]
# Testing wp-fork-with-event on hugetlb-private... skipped [reason: memory =
allocation failed]
# Testing wp-fork-pin on anon... done
# Testing wp-fork-pin on shmem... done
# Testing wp-fork-pin on shmem-private... done
# Testing wp-fork-pin on hugetlb... skipped [reason: memory allocation fail=
ed]
# Testing wp-fork-pin on hugetlb-private... skipped [reason: memory allocat=
ion failed]
# Testing wp-fork-pin-with-event on anon... done
# Testing wp-fork-pin-with-event on shmem... done
# Testing wp-fork-pin-with-event on shmem-private... done
# Testing wp-fork-pin-with-event on hugetlb... skipped [reason: memory allo=
cation failed]
# Testing wp-fork-pin-with-event on hugetlb-private... skipped [reason: mem=
ory allocation failed]
# Testing wp-unpopulated on anon... done
# Testing minor on shmem... done
# Testing minor on hugetlb... skipped [reason: memory allocation failed]
# Testing minor-wp on shmem... done
# Testing minor-wp on hugetlb... skipped [reason: memory allocation failed]
# Testing minor-collapse on shmem... skipped [reason: MADV_COLLAPSE failed]
# Testing sigbus on anon... done
# Testing sigbus on shmem... done
# Testing sigbus on shmem-private... done
# Testing sigbus on hugetlb... skipped [reason: memory allocation failed]
# Testing sigbus on hugetlb-private... skipped [reason: memory allocation f=
ailed]
# Testing sigbus-wp on anon... done
# Testing sigbus-wp on shmem... done
# Testing sigbus-wp on shmem-private... done
# Testing sigbus-wp on hugetlb... skipped [reason: memory allocation failed=
]
# Testing sigbus-wp on hugetlb-private... skipped [reason: memory allocatio=
n failed]
# Testing events on anon... done
# Testing events on shmem... done
# Testing events on shmem-private... done
# Testing events on hugetlb... skipped [reason: memory allocation failed]
# Testing events on hugetlb-private... skipped [reason: memory allocation f=
ailed]
# Testing events-wp on anon... done
# Testing events-wp on shmem... done
# Testing events-wp on shmem-private... done
# Testing events-wp on hugetlb... skipped [reason: memory allocation failed=
]
# Testing events-wp on hugetlb-private... skipped [reason: memory allocatio=
n failed]
# Userfaults unit tests: pass=3D35, skip=3D23, fail=3D0 (total=3D58)
ok 28 selftests: mm: uffd-unit-tests
# selftests: mm: soft-dirty
# TAP version 13
# 1..15
# ok 1 Test test_simple
# ok 2 Test test_vma_reuse dirty bit of allocated page
# ok 3 Test test_vma_reuse dirty bit of reused address page
# ok 4 Test test_hugepage huge page allocation
# ok 5 Test test_hugepage huge page dirty bit
# ok 6 Test test_mprotect-anon dirty bit of new written page
# ok 7 Test test_mprotect-anon soft-dirty clear after clear_refs
# ok 8 Test test_mprotect-anon soft-dirty clear after marking RO
# ok 9 Test test_mprotect-anon soft-dirty clear after marking RW
# ok 10 Test test_mprotect-anon soft-dirty after rewritten
# ok 11 Test test_mprotect-file dirty bit of new written page
# ok 12 Test test_mprotect-file soft-dirty clear after clear_refs
# ok 13 Test test_mprotect-file soft-dirty clear after marking RO
# ok 14 Test test_mprotect-file soft-dirty clear after marking RW
# ok 15 Test test_mprotect-file soft-dirty after rewritten
# # Totals: pass:15 fail:0 xfail:0 xpass:0 skip:0 error:0
ok 29 selftests: mm: soft-dirty
# selftests: mm: split_huge_page_test
# Split huge pages successful
# Split PTE-mapped huge pages successful
# Please enable pr_debug in split_huge_pages_in_file() if you need more inf=
o.
# file-backed THP split test done, please check dmesg for more information
ok 30 selftests: mm: split_huge_page_test
# selftests: mm: ksm_tests
# OK
ok 31 selftests: mm: ksm_tests
# selftests: mm: ksm_functional_tests
# TAP version 13
# 1..6
# # [RUN] test_unmerge
# ok 1 Pages were unmerged
# # [RUN] test_unmerge_discarded
# ok 2 Pages were unmerged
# # [RUN] test_unmerge_uffd_wp
# ok 3 Pages were unmerged
# # [RUN] test_prctl
# ok 4 Setting/clearing PR_SET_MEMORY_MERGE works
# # [RUN] test_prctl_fork
# TAP version 13
# 1..6
# # [RUN] test_unmerge
# ok 1 Pages were unmerged
# # [RUN] test_unmerge_discarded
# ok 2 Pages were unmerged
# # [RUN] test_unmerge_uffd_wp
# ok 3 Pages were unmerged
# # [RUN] test_prctl
# ok 4 Setting/clearing PR_SET_MEMORY_MERGE works
# # [RUN] test_prctl_fork
# ok 5 PR_SET_MEMORY_MERGE value is inherited
# # [RUN] test_prctl_unmerge
# ok 6 Pages were unmerged
# # Totals: pass:6 fail:0 xfail:0 xpass:0 skip:0 error:0
ok 32 selftests: mm: ksm_functional_tests
# selftests: mm: mdwe_test
# TAP version 13
# 1..22
# # Starting 22 tests from 4 test cases.
# #  RUN           global.prctl_flags ...
# #            OK  global.prctl_flags
# ok 1 global.prctl_flags
# #  RUN           mdwe.stock.mmap_READ_EXEC ...
# #            OK  mdwe.stock.mmap_READ_EXEC
# ok 2 mdwe.stock.mmap_READ_EXEC
# #  RUN           mdwe.stock.mmap_WRITE_EXEC ...
# #            OK  mdwe.stock.mmap_WRITE_EXEC
# ok 3 mdwe.stock.mmap_WRITE_EXEC
# #  RUN           mdwe.stock.mprotect_stay_EXEC ...
# #            OK  mdwe.stock.mprotect_stay_EXEC
# ok 4 mdwe.stock.mprotect_stay_EXEC
# #  RUN           mdwe.stock.mprotect_add_EXEC ...
# #            OK  mdwe.stock.mprotect_add_EXEC
# ok 5 mdwe.stock.mprotect_add_EXEC
# #  RUN           mdwe.stock.mprotect_WRITE_EXEC ...
# #            OK  mdwe.stock.mprotect_WRITE_EXEC
# ok 6 mdwe.stock.mprotect_WRITE_EXEC
# #  RUN           mdwe.stock.mmap_FIXED ...
# # mdwe_test.c:176:mmap_FIXED:Expected p (139775686717440) =3D=3D self->p =
(139775686713344)
# # mmap_FIXED: Test failed at step #2
# #          FAIL  mdwe.stock.mmap_FIXED
# not ok 7 mdwe.stock.mmap_FIXED
# #  RUN           mdwe.stock.arm64_BTI ...
# #      SKIP      HWCAP2_BTI not supported
# #            OK  mdwe.stock.arm64_BTI
# ok 8 # SKIP HWCAP2_BTI not supported
# #  RUN           mdwe.enabled.mmap_READ_EXEC ...
# #            OK  mdwe.enabled.mmap_READ_EXEC
# ok 9 mdwe.enabled.mmap_READ_EXEC
# #  RUN           mdwe.enabled.mmap_WRITE_EXEC ...
# #            OK  mdwe.enabled.mmap_WRITE_EXEC
# ok 10 mdwe.enabled.mmap_WRITE_EXEC
# #  RUN           mdwe.enabled.mprotect_stay_EXEC ...
# #            OK  mdwe.enabled.mprotect_stay_EXEC
# ok 11 mdwe.enabled.mprotect_stay_EXEC
# #  RUN           mdwe.enabled.mprotect_add_EXEC ...
# #            OK  mdwe.enabled.mprotect_add_EXEC
# ok 12 mdwe.enabled.mprotect_add_EXEC
# #  RUN           mdwe.enabled.mprotect_WRITE_EXEC ...
# #            OK  mdwe.enabled.mprotect_WRITE_EXEC
# ok 13 mdwe.enabled.mprotect_WRITE_EXEC
# #  RUN           mdwe.enabled.mmap_FIXED ...
# # mdwe_test.c:174:mmap_FIXED:Expected p (139775686717440) =3D=3D MAP_FAIL=
ED (18446744073709551615)
# # mmap_FIXED: Test failed at step #4
# #          FAIL  mdwe.enabled.mmap_FIXED
# not ok 14 mdwe.enabled.mmap_FIXED
# #  RUN           mdwe.enabled.arm64_BTI ...
# #      SKIP      HWCAP2_BTI not supported
# #            OK  mdwe.enabled.arm64_BTI
# ok 15 # SKIP HWCAP2_BTI not supported
# #  RUN           mdwe.forked.mmap_READ_EXEC ...
# #            OK  mdwe.forked.mmap_READ_EXEC
# ok 16 mdwe.forked.mmap_READ_EXEC
# #  RUN           mdwe.forked.mmap_WRITE_EXEC ...
# #            OK  mdwe.forked.mmap_WRITE_EXEC
# ok 17 mdwe.forked.mmap_WRITE_EXEC
# #  RUN           mdwe.forked.mprotect_stay_EXEC ...
# #            OK  mdwe.forked.mprotect_stay_EXEC
# ok 18 mdwe.forked.mprotect_stay_EXEC
# #  RUN           mdwe.forked.mprotect_add_EXEC ...
# #            OK  mdwe.forked.mprotect_add_EXEC
# ok 19 mdwe.forked.mprotect_add_EXEC
# #  RUN           mdwe.forked.mprotect_WRITE_EXEC ...
# #            OK  mdwe.forked.mprotect_WRITE_EXEC
# ok 20 mdwe.forked.mprotect_WRITE_EXEC
# #  RUN           mdwe.forked.mmap_FIXED ...
# # mdwe_test.c:174:mmap_FIXED:Expected p (139775686717440) =3D=3D MAP_FAIL=
ED (18446744073709551615)
# # mmap_FIXED: Test failed at step #5
# #          FAIL  mdwe.forked.mmap_FIXED
# not ok 21 mdwe.forked.mmap_FIXED
# #  RUN           mdwe.forked.arm64_BTI ...
# #      SKIP      HWCAP2_BTI not supported
# #            OK  mdwe.forked.arm64_BTI
# ok 22 # SKIP HWCAP2_BTI not supported
# # FAILED: 19 / 22 tests passed.
# # Totals: pass:16 fail:3 xfail:0 xpass:0 skip:3 error:0
not ok 33 selftests: mm: mdwe_test # exit=3D1
# selftests: mm: protection_keys_32
# has pkeys: 0
# running PKEY tests for unsupported CPU/OS
ok 34 selftests: mm: protection_keys_32
# selftests: mm: protection_keys_64
# has pkeys: 0
# running PKEY tests for unsupported CPU/OS
ok 35 selftests: mm: protection_keys_64
# selftests: mm: va_high_addr_switch
# mmap(ADDR_SWITCH_HINT - PAGE_SIZE, PAGE_SIZE): 0x7fad47ed5000 - OK
# mmap(ADDR_SWITCH_HINT - PAGE_SIZE, (2 * PAGE_SIZE)): 0x7fad47ed4000 - OK
# mmap(ADDR_SWITCH_HINT, PAGE_SIZE): 0x7fad47ed5000 - OK
# mmap(ADDR_SWITCH_HINT, 2 * PAGE_SIZE, MAP_FIXED): 0xffffffffffffffff - FA=
ILED
# mmap(NULL): 0x7fad47ed3000 - OK
# mmap(LOW_ADDR): 0x40000000 - OK
# mmap(HIGH_ADDR): 0x7fad47ed3000 - OK
# mmap(HIGH_ADDR) again: 0x7fad47ed1000 - OK
# mmap(HIGH_ADDR, MAP_FIXED): 0xffffffffffffffff - FAILED
# mmap(-1): 0x7fad47ecf000 - OK
# mmap(-1) again: 0x7fad47ce8000 - OK
# mmap(ADDR_SWITCH_HINT - PAGE_SIZE, PAGE_SIZE): 0x7fad47ece000 - OK
# mmap(ADDR_SWITCH_HINT - PAGE_SIZE, 2 * PAGE_SIZE): 0x7fad47ce8000 - OK
# mmap(ADDR_SWITCH_HINT - PAGE_SIZE/2 , 2 * PAGE_SIZE): 0x7fad47ce6000 - OK
# mmap(ADDR_SWITCH_HINT, PAGE_SIZE): 0x7fad47ece000 - OK
# mmap(ADDR_SWITCH_HINT, 2 * PAGE_SIZE, MAP_FIXED): 0xffffffffffffffff - FA=
ILED
not ok 36 selftests: mm: va_high_addr_switch # exit=3D1
# selftests: mm: virtual_address_range
ok 37 selftests: mm: virtual_address_range
# selftests: mm: write_to_hugetlbfs
# path not found: Invalid argument
# Usage: ./write_to_hugetlbfs -p <path to hugetlbfs file> -s <size to map> =
[-m <0=3Dhugetlbfs | 1=3Dmmap(MAP_HUGETLB)>] [-l] [-r] [-o] [-w] [-n]
not ok 38 selftests: mm: write_to_hugetlbfs # exit=3D1
# selftests: mm: run_vmtests.sh
# Warning: file run_vmtests.sh is not executable
# -----------------------
# running ./hugepage-mmap
# -----------------------
# Returned address is 0x7fc72b200000
# First hex is 0
# First hex is 3020100
# [PASS]
# ----------------------
# running ./hugepage-shm
# ----------------------
# shmid: 0x0
# shmaddr: 0x7fec12200000
# Starting the writes:
# .........................................................................=
...........................................................................=
...........................................................................=
.................................
# Starting the Check...Done.
# [PASS]
# ---------------------
# running ./map_hugetlb
# ---------------------
# Default size hugepages
# Mapping 256 Mbytes
# Returned address is 0x7f47cb800000
# First hex is 0
# First hex is 3020100
# [PASS]
# -------------------------
# running ./hugepage-mremap
# -------------------------
# Map haddr: Returned address is 0x7eaa40000000
# Map daddr: Returned address is 0x7daa40000000
# Map vaddr: Returned address is 0x7faa40000000
# Address returned by mmap() =3D 0x7f91f5c76000
# Mremap: Returned address is 0x7faa40000000
# First hex is 0
# First hex is 3020100
# [PASS]
# --------------------------
# running ./hugepage-vmemmap
# --------------------------
# Returned address is 0x7fea3f600000 whose pfn is 3a4a00
# [PASS]
# -------------------------
# running ./hugetlb-madvise
# -------------------------
# [PASS]
# NOTE: These hugetlb tests provide minimal coverage.  Use
#       https://github.com/libhugetlbfs/libhugetlbfs.git for
#       hugetlb regression testing.
# -----------------------------
# running ./map_fixed_noreplace
# -----------------------------
# mmap() @ 0x7ff3eb1d2000-0x7ff3eb1d7000 p=3D0x7ff3eb1d2000 result=3DSucces=
s
# unmap() successful
# mmap() @ 0x7ff3eb1d3000-0x7ff3eb1d6000 p=3D0x7ff3eb1d3000 result=3DSucces=
s
# mmap() @ 0x7ff3eb1d2000-0x7ff3eb1d7000 p=3D0xffffffffffffffff result=3DFi=
le exists
# mmap() @ 0x7ff3eb1d4000-0x7ff3eb1d5000 p=3D0xffffffffffffffff result=3DFi=
le exists
# mmap() @ 0x7ff3eb1d5000-0x7ff3eb1d7000 p=3D0xffffffffffffffff result=3DFi=
le exists
# mmap() @ 0x7ff3eb1d2000-0x7ff3eb1d4000 p=3D0xffffffffffffffff result=3DFi=
le exists
# mmap() @ 0x7ff3eb1d2000-0x7ff3eb1d3000 p=3D0x7ff3eb1d2000 result=3DSucces=
s
# mmap() @ 0x7ff3eb1d6000-0x7ff3eb1d7000 p=3D0x7ff3eb1d6000 result=3DSucces=
s
# unmap() successful
# OK
# [PASS]
# ---------------------
# running ./gup_test -u
# ---------------------
# GUP_FAST_BENCHMARK: Time: get:11164 put:376 us
# [PASS]
# ---------------------
# running ./gup_test -a
# ---------------------
# PIN_FAST_BENCHMARK: Time: get:12630 put:107 us
# [PASS]
# -----------------------------------------
# running ./gup_test -ct -F 0x1 0 19 0x1000
# -----------------------------------------
# DUMP_USER_PAGES_TEST: done
# [PASS]
# -------------------------
# running ./uffd-unit-tests
# -------------------------
# Testing UFFDIO_API (with syscall)... done
# Testing UFFDIO_API (with /dev/userfaultfd)... done
# Testing register-ioctls on anon... done
# Testing register-ioctls on shmem... done
# Testing register-ioctls on shmem-private... done
# Testing register-ioctls on hugetlb... done
# Testing register-ioctls on hugetlb-private... done
# Testing zeropage on anon... done
# Testing zeropage on shmem... done
# Testing zeropage on shmem-private... done
# Testing zeropage on hugetlb... done
# Testing zeropage on hugetlb-private... done
# Testing wp-fork on anon... done
# Testing wp-fork on shmem... done
# Testing wp-fork on shmem-private... done
# Testing wp-fork on hugetlb... done
# Testing wp-fork on hugetlb-private... done
# Testing wp-fork-with-event on anon... done
# Testing wp-fork-with-event on shmem... done
# Testing wp-fork-with-event on shmem-private... done
# Testing wp-fork-with-event on hugetlb... done
# Testing wp-fork-with-event on hugetlb-private... done
# Testing wp-fork-pin on anon... done
# Testing wp-fork-pin on shmem... done
# Testing wp-fork-pin on shmem-private... done
# Testing wp-fork-pin on hugetlb... done
# Testing wp-fork-pin on hugetlb-private... done
# Testing wp-fork-pin-with-event on anon... done
# Testing wp-fork-pin-with-event on shmem... done
# Testing wp-fork-pin-with-event on shmem-private... done
# Testing wp-fork-pin-with-event on hugetlb... done
# Testing wp-fork-pin-with-event on hugetlb-private... done
# Testing wp-unpopulated on anon... done
# Testing minor on shmem... done
# Testing minor on hugetlb... done
# Testing minor-wp on shmem... done
# Testing minor-wp on hugetlb... done
# Testing minor-collapse on shmem... skipped [reason: MADV_COLLAPSE failed]
# Testing sigbus on anon... done
# Testing sigbus on shmem... done
# Testing sigbus on shmem-private... done
# Testing sigbus on hugetlb... done
# Testing sigbus on hugetlb-private... done
# Testing sigbus-wp on anon... done
# Testing sigbus-wp on shmem... done
# Testing sigbus-wp on shmem-private... done
# Testing sigbus-wp on hugetlb... done
# Testing sigbus-wp on hugetlb-private... done
# Testing events on anon... done
# Testing events on shmem... done
# Testing events on shmem-private... done
# Testing events on hugetlb... done
# Testing events on hugetlb-private... done
# Testing events-wp on anon... done
# Testing events-wp on shmem... done
# Testing events-wp on shmem-private... done
# Testing events-wp on hugetlb... done
# Testing events-wp on hugetlb-private... done
# Userfaults unit tests: pass=3D57, skip=3D1, fail=3D0 (total=3D58)
# [PASS]
# --------------------------------
# running ./uffd-stress anon 20 16
# --------------------------------
# nr_pages: 5112, nr_pages_per_cpu: 142
# bounces: 15, mode: rnd racing ver poll, userfaults: 1700 missing (175+179=
+162+144+116+112+101+96+75+71+59+56+41+43+48+31+25+29+22+19+14+12+12+10+9+8=
+10+3+4+8+1+2+3+0+0+0+=08) 5370 wp (323+340+290+307+281+246+234+209+217+198=
+193+180+160+162+144+149+143+120+118+128+124+101+114+103+81+88+84+90+84+59+=
67+62+52+44+33+42+=08)=20
# bounces: 14, mode: racing ver poll, userfaults: 429 missing (91+80+75+60+=
59+45+9+7+3+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 8683=
 wp (677+649+627+603+620+604+434+383+400+271+247+252+224+228+194+196+193+17=
8+173+173+166+124+101+114+105+85+94+77+84+70+73+75+57+53+55+24+=08)=20
# bounces: 13, mode: rnd ver poll, userfaults: 2109 missing (399+179+166+13=
0+130+99+115+103+93+75+81+64+64+50+50+44+34+29+30+31+23+21+16+9+23+15+10+15=
+7+1+2+1+0+0+0+0+=08) 7272 wp (612+365+350+354+313+305+291+290+276+258+252+=
238+225+223+220+195+188+197+170+172+175+163+159+148+150+138+130+133+130+82+=
76+68+63+61+58+44+=08)=20
# bounces: 12, mode: ver poll, userfaults: 483 missing (77+47+45+42+29+23+2=
8+22+23+19+13+15+21+9+8+8+11+3+6+7+3+2+6+3+3+1+2+1+2+0+1+0+2+1+0+0+=08) 774=
4 wp (460+478+431+442+400+391+355+341+310+299+301+286+267+250+236+232+213+2=
16+186+187+188+121+114+106+103+92+92+90+83+77+63+66+74+69+61+64+=08)=20
# bounces: 11, mode: rnd racing poll, userfaults: 1846 missing (199+185+171=
+161+127+126+98+92+95+68+62+76+66+43+45+47+28+21+26+19+12+19+12+19+7+5+5+3+=
3+2+1+3+0+0+0+0+=08) 6096 wp (357+351+327+315+325+277+265+258+242+241+226+1=
93+191+203+182+153+170+145+141+141+142+114+114+100+101+96+92+73+76+81+76+74=
+74+59+60+61+=08)=20
# bounces: 10, mode: racing poll, userfaults: 383 missing (60+50+31+34+28+2=
6+20+14+19+5+10+6+9+4+7+7+4+9+4+5+2+4+2+2+5+3+0+1+1+4+2+1+1+1+1+1+=08) 3416=
 wp (252+234+206+174+187+141+147+153+134+136+100+104+99+87+86+74+71+67+70+7=
1+54+70+70+55+49+64+52+51+46+49+45+47+39+43+53+36+=08)=20
# bounces: 9, mode: rnd poll, userfaults: 1911 missing (258+280+224+143+116=
+107+99+87+79+80+65+48+51+43+36+31+25+19+19+9+17+15+16+10+10+6+4+4+3+3+3+0+=
0+1+0+0+=08) 6155 wp (445+401+398+299+279+258+235+257+227+221+195+197+185+1=
70+169+168+158+140+138+137+127+127+111+111+106+118+99+93+90+88+91+70+77+57+=
59+54+=08)=20
# bounces: 8, mode: poll, userfaults: 437 missing (58+58+39+50+28+23+18+20+=
9+10+14+12+17+10+7+6+10+6+4+8+4+4+5+2+3+1+1+2+4+1+0+1+1+0+1+0+=08) 6546 wp =
(444+420+400+354+340+308+297+285+272+248+243+218+213+195+167+178+168+152+16=
2+138+118+122+92+118+97+104+93+84+78+74+47+79+67+52+63+56+=08)=20
# bounces: 7, mode: rnd racing ver read, userfaults: 2882 missing (327+279+=
295+272+236+218+207+181+209+146+138+62+46+37+32+37+34+17+13+17+19+14+3+11+1=
0+7+3+5+4+0+2+1+0+0+0+0+=08) 8048 wp (544+531+466+492+449+439+419+412+407+3=
80+361+212+221+205+180+179+188+167+166+131+124+151+130+111+124+111+115+87+7=
5+83+94+68+74+64+46+42+=08)=20
# bounces: 6, mode: racing ver read, userfaults: 421 missing (67+56+38+37+3=
9+29+20+29+22+23+15+17+10+6+13+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=
=08) 8895 wp (512+494+451+440+462+422+417+420+371+384+367+346+377+308+334+2=
20+234+212+181+175+197+174+169+124+132+133+125+117+99+72+82+74+68+81+76+45+=
=08)=20
# bounces: 5, mode: rnd ver read, userfaults: 2708 missing (354+335+327+308=
+280+275+110+116+103+71+75+57+35+51+33+26+22+29+16+13+21+9+10+8+6+3+1+5+3+3=
+1+1+1+0+0+0+=08) 7798 wp (558+547+551+537+509+464+314+300+276+255+257+226+=
218+205+188+191+166+151+170+152+138+129+135+121+122+107+112+110+98+93+88+76=
+69+49+59+57+=08)=20
# bounces: 4, mode: ver read, userfaults: 633 missing (96+66+59+54+46+44+24=
+23+17+12+18+12+13+21+7+9+9+7+10+11+1+4+5+5+11+6+7+7+1+4+1+9+8+3+3+0+=08) 1=
2030 wp (680+654+609+599+563+535+448+488+439+423+415+358+361+345+345+312+31=
4+293+283+309+273+243+272+258+232+194+230+197+195+213+207+227+174+136+127+7=
9+=08)=20
# bounces: 3, mode: rnd racing read, userfaults: 2051 missing (256+238+171+=
195+171+133+122+107+111+73+65+67+40+51+34+36+22+27+22+18+11+18+9+6+9+8+8+7+=
4+3+3+2+2+1+1+0+=08) 6922 wp (418+421+373+355+316+325+303+273+269+248+243+2=
22+215+204+204+169+183+163+172+139+161+124+126+139+143+121+122+109+98+101+7=
7+78+75+82+81+70+=08)=20
# bounces: 2, mode: racing read, userfaults: 417 missing (76+51+50+35+38+24=
+25+20+17+12+16+8+7+13+5+11+9+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 12=
814 wp (741+745+728+730+696+681+661+616+599+608+605+584+564+561+531+540+529=
+205+180+166+150+130+125+116+118+123+92+98+86+99+97+62+77+64+54+53+=08)=20
# bounces: 1, mode: rnd read, userfaults: 3042 missing (311+285+280+265+226=
+212+203+189+171+163+149+159+135+77+68+58+18+14+15+13+5+6+7+1+6+1+0+2+0+2+0=
+0+1+0+0+0+=08) 8212 wp (547+521+507+465+467+463+429+426+397+407+372+374+35=
8+254+228+231+152+128+132+121+126+110+102+93+101+92+99+62+69+79+62+55+60+38=
+50+35+=08)=20
# bounces: 0, mode: read, userfaults: 712 missing (496+28+36+26+19+17+13+7+=
6+5+8+6+5+4+6+3+2+4+2+3+2+1+2+2+3+1+1+0+2+1+0+1+0+0+0+0+=08) 9823 wp (1130+=
519+513+495+444+453+431+383+377+349+322+344+287+273+247+225+230+220+209+217=
+218+166+188+157+178+139+144+168+149+97+95+114+86+89+91+76+=08)=20
# [PASS]
# ------------------------------------
# running ./uffd-stress hugetlb 128 32
# ------------------------------------
# nr_pages: 36, nr_pages_per_cpu: 1
# bounces: 31, mode: rnd racing ver poll, userfaults: 34 missing (11+10+7+4=
+2+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 464 w=
p (36+30+31+31+26+22+16+18+19+23+19+15+17+12+11+16+10+12+10+12+8+8+10+8+7+6=
+7+5+4+4+4+3+1+1+2+0+=08)=20
# bounces: 30, mode: racing ver poll, userfaults: 31 missing (9+5+7+3+0+3+2=
+2+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 462 wp (38+=
32+34+30+24+23+22+21+18+18+18+17+16+15+13+12+7+10+10+11+7+9+6+10+8+4+6+3+5+=
4+4+3+1+1+1+1+=08)=20
# bounces: 29, mode: rnd ver poll, userfaults: 33 missing (11+10+7+3+1+1+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 491 wp (30+3=
6+32+31+27+21+22+21+22+21+18+14+12+18+17+11+11+17+11+13+9+9+11+5+6+8+6+7+6+=
5+4+3+4+2+0+1+=08)=20
# bounces: 28, mode: ver poll, userfaults: 33 missing (12+2+8+7+2+1+0+1+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 450 wp (45+35+37+=
34+25+23+24+21+17+17+14+15+11+10+6+13+10+7+9+8+8+9+5+8+5+8+4+5+3+4+3+0+2+3+=
2+0+=08)=20
# bounces: 27, mode: rnd racing poll, userfaults: 32 missing (13+8+6+4+1+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 476 wp (30=
+35+30+30+26+28+20+17+19+18+21+19+16+13+14+11+14+12+9+16+9+9+5+8+7+6+6+8+4+=
3+5+4+1+2+0+1+=08)=20
# bounces: 26, mode: racing poll, userfaults: 34 missing (14+5+7+2+3+3+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 496 wp (47+40+=
36+29+31+25+18+25+23+17+16+20+16+18+14+11+13+8+9+8+8+6+10+8+6+4+5+5+4+5+4+1=
+3+2+0+1+=08)=20
# bounces: 25, mode: rnd poll, userfaults: 33 missing (11+8+8+3+3+0+0+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 428 wp (34+33+23+=
30+25+21+18+20+21+17+24+15+14+11+8+10+8+12+9+10+9+7+4+9+5+6+5+4+4+4+2+2+1+2=
+0+1+=08)=20
# bounces: 24, mode: poll, userfaults: 33 missing (9+5+5+2+3+1+2+2+3+0+1+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 413 wp (32+30+34+27+29=
+26+20+17+21+21+13+10+10+10+9+11+9+7+11+8+6+9+6+6+5+3+4+3+4+4+1+3+1+1+2+0+=
=08)=20
# bounces: 23, mode: rnd racing ver read, userfaults: 32 missing (11+8+6+5+=
2+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 430 wp=
 (34+37+27+25+26+28+19+18+16+16+21+5+11+7+18+7+8+5+11+9+9+11+10+7+7+5+6+6+5=
+1+4+1+2+4+2+2+=08)=20
# bounces: 22, mode: racing ver read, userfaults: 35 missing (10+21+1+2+0+0=
+1+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 412 wp (4=
2+47+30+27+14+13+22+14+12+12+20+17+7+9+11+13+5+9+11+10+7+5+10+6+6+7+4+4+5+3=
+1+3+2+1+2+1+=08)=20
# bounces: 21, mode: rnd ver read, userfaults: 33 missing (11+8+6+6+1+1+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 495 wp (42+37=
+25+23+27+30+17+24+22+16+12+16+20+15+14+13+9+13+13+9+11+14+8+12+11+8+4+7+3+=
6+3+4+4+0+2+1+=08)=20
# bounces: 20, mode: ver read, userfaults: 35 missing (9+7+3+5+2+6+0+1+1+1+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 409 wp (36+30+19+2=
4+32+17+29+14+14+28+7+13+21+17+3+7+5+8+3+12+5+4+6+2+5+4+7+7+8+6+6+3+3+2+1+1=
+=08)=20
# bounces: 19, mode: rnd racing read, userfaults: 33 missing (11+9+8+2+3+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 500 wp (36=
+37+35+37+22+20+23+22+23+15+19+18+9+16+11+14+15+13+17+9+11+10+10+10+2+3+7+6=
+4+7+6+5+4+2+1+1+=08)=20
# bounces: 18, mode: racing read, userfaults: 36 missing (11+7+3+5+2+3+4+1+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 474 wp (31+38+=
26+36+25+26+22+21+21+18+17+17+11+20+13+15+13+12+6+11+8+2+9+11+7+5+8+7+2+4+1=
+4+4+1+1+1+=08)=20
# bounces: 17, mode: rnd read, userfaults: 33 missing (14+6+4+4+3+2+0+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 448 wp (28+31+32+=
27+23+18+22+23+19+15+21+20+17+6+9+14+16+8+9+10+5+7+12+11+8+4+7+6+6+1+4+5+1+=
2+1+0+=08)=20
# bounces: 16, mode: read, userfaults: 35 missing (12+3+4+2+1+6+3+1+2+0+0+1=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 536 wp (53+31+38+23+2=
1+35+39+28+26+25+26+18+17+12+8+16+13+11+6+9+8+10+9+5+5+8+7+5+7+4+1+3+4+2+2+=
1+=08)=20
# bounces: 15, mode: rnd racing ver poll, userfaults: 33 missing (13+9+6+4+=
1+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 504 wp=
 (36+32+32+31+27+24+22+22+20+20+16+19+19+14+15+14+15+12+13+12+8+10+8+6+6+7+=
9+8+6+5+4+3+3+2+2+2+=08)=20
# bounces: 14, mode: racing ver poll, userfaults: 33 missing (12+8+5+5+3+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 521 wp (52=
+51+56+44+26+22+18+21+16+16+18+20+16+12+13+13+11+9+8+9+9+10+8+6+7+6+5+4+4+3=
+2+3+1+2+0+0+=08)=20
# bounces: 13, mode: rnd ver poll, userfaults: 34 missing (12+11+5+4+2+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 425 wp (32+3=
0+32+28+27+24+19+18+18+16+15+13+12+12+10+12+12+8+10+11+9+6+9+7+4+5+5+4+5+3+=
1+4+1+1+1+1+=08)=20
# bounces: 12, mode: ver poll, userfaults: 31 missing (11+3+3+9+1+1+0+2+1+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 462 wp (41+36+34+=
28+31+29+24+24+28+19+21+15+12+9+8+10+8+7+9+8+7+7+8+4+3+5+6+4+3+4+2+4+2+2+0+=
0+=08)=20
# bounces: 11, mode: rnd racing poll, userfaults: 32 missing (10+11+6+3+2+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 455 wp (3=
6+26+35+26+30+22+20+20+20+19+15+17+12+14+14+17+11+11+13+7+8+9+9+6+7+5+5+5+4=
+4+4+2+1+0+1+0+=08)=20
# bounces: 10, mode: racing poll, userfaults: 29 missing (10+7+4+3+1+2+1+1+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 400 wp (30+32+=
34+22+24+26+20+19+17+19+13+12+12+11+8+9+12+6+6+10+8+5+7+5+3+5+4+4+5+3+2+3+2=
+1+1+0+=08)=20
# bounces: 9, mode: rnd poll, userfaults: 33 missing (10+7+8+5+3+0+0+0+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 459 wp (41+29+34+2=
4+20+24+24+23+20+21+15+20+10+15+13+15+15+14+11+8+11+5+8+7+5+4+8+6+0+2+1+3+0=
+1+1+1+=08)=20
# bounces: 8, mode: poll, userfaults: 28 missing (10+6+6+1+3+0+2+0+0+0+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 408 wp (33+29+30+23+26=
+26+23+18+17+20+14+13+16+12+9+12+10+9+10+3+7+5+6+6+5+6+4+4+2+2+3+2+0+1+1+1+=
=08)=20
# bounces: 7, mode: rnd racing ver read, userfaults: 33 missing (11+8+7+3+3=
+1+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 459 wp =
(23+23+27+25+31+24+18+23+13+10+13+19+17+15+13+19+13+14+9+12+10+12+7+12+11+7=
+10+3+5+4+4+5+4+2+0+2+=08)=20
# bounces: 6, mode: racing ver read, userfaults: 27 missing (8+4+5+3+0+3+2+=
1+1+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 455 wp (26+3=
0+37+34+30+32+31+15+25+16+19+8+10+11+6+12+10+14+7+6+6+9+10+4+7+9+4+7+6+4+3+=
2+1+2+1+1+=08)=20
# bounces: 5, mode: rnd ver read, userfaults: 32 missing (10+9+7+4+2+0+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 483 wp (34+34+=
32+34+34+21+22+23+13+15+24+16+11+11+14+12+7+11+10+9+9+12+10+11+6+8+4+8+8+3+=
5+1+4+4+2+1+=08)=20
# bounces: 4, mode: ver read, userfaults: 33 missing (10+3+8+4+5+3+0+0+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 458 wp (33+34+33+3=
7+28+24+22+20+13+13+18+14+12+13+10+7+10+13+9+11+12+7+9+8+8+2+7+7+4+6+3+3+3+=
2+2+1+=08)=20
# bounces: 3, mode: rnd racing read, userfaults: 33 missing (12+6+5+6+3+1+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 426 wp (26+=
28+29+26+23+22+21+19+13+15+14+18+17+14+13+16+10+10+13+7+9+9+9+8+8+4+5+6+2+4=
+1+3+2+1+1+0+=08)=20
# bounces: 2, mode: racing read, userfaults: 29 missing (13+3+6+2+1+2+1+1+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 437 wp (41+31+2=
7+24+30+30+29+25+15+22+7+15+13+12+7+13+9+5+13+12+9+3+1+10+4+2+4+6+2+4+2+3+2=
+3+1+1+=08)=20
# bounces: 1, mode: rnd read, userfaults: 33 missing (11+10+8+2+2+0+0+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 460 wp (35+29+34+=
28+27+21+19+25+17+10+11+18+16+15+16+13+8+16+9+7+12+10+7+9+10+7+7+3+4+5+1+2+=
3+3+3+0+=08)=20
# bounces: 0, mode: read, userfaults: 35 missing (7+6+6+2+6+5+1+2+0+0+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 473 wp (31+35+37+25+35+=
34+32+32+21+16+27+21+8+9+5+2+9+1+7+10+7+5+8+5+7+8+5+8+8+3+2+2+2+3+2+1+=08)=
=20
# [PASS]
# --------------------------------------------
# running ./uffd-stress hugetlb-private 128 32
# --------------------------------------------
# nr_pages: 36, nr_pages_per_cpu: 1
# bounces: 31, mode: rnd racing ver poll, userfaults: 33 missing (13+9+7+3+=
1+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 448 wp=
 (40+25+29+27+24+17+18+18+18+17+20+16+14+12+8+12+11+9+12+12+10+9+10+11+7+4+=
8+5+6+3+6+2+2+3+2+1+=08)=20
# bounces: 30, mode: racing ver poll, userfaults: 32 missing (10+7+5+4+4+2+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 371 wp (35=
+35+32+26+20+21+13+15+11+10+11+12+7+10+12+6+10+12+9+9+8+5+5+5+2+2+2+5+6+5+3=
+2+2+1+1+1+=08)=20
# bounces: 29, mode: rnd ver poll, userfaults: 34 missing (13+9+8+3+1+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 467 wp (37+37=
+27+26+24+18+18+20+20+14+17+17+19+13+14+12+15+13+8+8+11+6+9+7+9+7+6+7+5+4+6=
+4+4+1+3+1+=08)=20
# bounces: 28, mode: ver poll, userfaults: 32 missing (14+7+2+8+1+0+0+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 440 wp (49+42+41+=
41+36+16+16+16+14+13+10+9+8+7+5+11+9+8+8+7+6+10+8+7+5+5+6+4+6+3+2+5+2+3+1+1=
+=08)=20
# bounces: 27, mode: rnd racing poll, userfaults: 34 missing (14+11+9+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 481 wp (4=
0+43+39+22+26+21+20+18+19+22+17+20+17+11+12+15+10+9+10+11+10+6+6+10+6+8+5+5=
+5+5+2+4+4+2+0+1+=08)=20
# bounces: 26, mode: racing poll, userfaults: 33 missing (16+6+4+3+1+1+0+2+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 374 wp (35+33+=
32+21+25+20+16+16+15+14+11+10+9+13+8+9+9+6+6+4+6+9+6+5+5+5+3+5+5+3+2+3+1+2+=
1+1+=08)=20
# bounces: 25, mode: rnd poll, userfaults: 33 missing (11+11+7+4+0+0+0+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 362 wp (34+29+25=
+22+20+20+17+17+17+9+12+7+11+11+10+6+9+5+13+8+7+9+6+9+4+2+3+4+6+2+2+1+1+1+1=
+2+=08)=20
# bounces: 24, mode: poll, userfaults: 34 missing (17+2+6+2+1+4+0+2+0+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 401 wp (39+35+29+29+2=
5+21+21+17+13+16+10+10+9+8+5+6+10+8+11+10+10+5+4+7+8+5+6+3+3+2+6+2+3+3+2+0+=
=08)=20
# bounces: 23, mode: rnd racing ver read, userfaults: 34 missing (11+11+7+4=
+1+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 438 w=
p (33+34+24+23+21+18+15+19+23+16+16+15+16+14+12+12+9+12+12+11+10+9+11+6+3+1=
0+6+6+3+4+5+5+3+1+1+0+=08)=20
# bounces: 22, mode: racing ver read, userfaults: 35 missing (25+10+0+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 368 wp (4=
7+50+15+19+16+13+8+9+16+13+8+7+11+7+10+10+9+15+8+4+12+5+7+9+5+4+4+7+7+1+1+2=
+4+3+1+1+=08)=20
# bounces: 21, mode: rnd ver read, userfaults: 34 missing (12+8+7+5+2+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 457 wp (38+39=
+31+22+22+24+18+20+14+19+15+14+11+12+13+13+10+12+12+14+8+6+10+6+10+9+7+6+6+=
3+4+1+3+2+3+0+=08)=20
# bounces: 20, mode: ver read, userfaults: 35 missing (23+7+3+1+1+0+0+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 388 wp (45+32+30+=
22+21+17+13+8+15+11+12+16+9+10+12+12+12+6+11+7+9+4+7+4+4+5+5+8+5+3+3+2+3+3+=
1+1+=08)=20
# bounces: 19, mode: rnd racing read, userfaults: 35 missing (12+10+8+4+1+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 434 wp (3=
6+33+28+28+17+21+21+17+19+13+19+9+17+11+16+14+10+7+13+8+4+13+5+7+6+3+6+6+5+=
4+3+5+4+3+3+0+=08)=20
# bounces: 18, mode: racing read, userfaults: 36 missing (7+4+13+3+4+2+1+0+=
2+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 348 wp (22+29+=
22+25+29+18+7+5+13+9+7+19+7+7+6+5+1+8+8+13+7+11+9+4+10+9+4+5+7+5+6+5+1+3+2+=
0+=08)=20
# bounces: 17, mode: rnd read, userfaults: 36 missing (27+6+3+0+0+0+0+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 438 wp (51+31+25+=
24+26+24+19+20+19+19+11+14+10+11+13+6+10+14+5+10+7+11+1+7+10+4+6+6+5+6+5+2+=
4+1+1+0+=08)=20
# bounces: 16, mode: read, userfaults: 35 missing (12+4+5+6+2+3+1+1+1+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 436 wp (41+34+33+31+3=
3+34+18+29+23+16+6+19+9+10+10+11+9+3+8+6+4+8+5+7+3+2+6+4+1+5+1+3+2+1+1+0+=
=08)=20
# bounces: 15, mode: rnd racing ver poll, userfaults: 32 missing (14+9+7+2+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 468 wp=
 (31+43+27+25+24+18+21+23+19+16+17+12+19+15+13+14+11+14+14+9+10+8+8+9+7+8+9=
+6+4+3+3+4+2+0+2+0+=08)=20
# bounces: 14, mode: racing ver poll, userfaults: 33 missing (10+6+4+1+4+2+=
3+2+0+1+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 379 wp (36=
+31+29+27+19+17+17+19+17+12+5+12+10+8+8+9+7+7+9+11+8+6+9+8+9+6+4+3+4+4+2+2+=
1+1+1+1+=08)=20
# bounces: 13, mode: rnd ver poll, userfaults: 34 missing (13+10+5+4+2+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 475 wp (38+3=
7+30+29+24+23+22+24+21+19+18+15+16+15+15+14+8+12+12+4+11+9+8+9+6+4+7+6+4+4+=
3+4+1+1+2+0+=08)=20
# bounces: 12, mode: ver poll, userfaults: 31 missing (9+8+3+6+2+2+1+0+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 362 wp (41+35+31+2=
7+24+25+23+12+9+11+10+10+6+7+7+3+7+7+2+6+6+4+6+7+4+5+4+3+3+3+4+3+3+2+1+1+=
=08)=20
# bounces: 11, mode: rnd racing poll, userfaults: 34 missing (13+11+5+4+1+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 443 wp (3=
3+37+30+27+23+23+18+19+15+20+17+12+17+12+13+10+15+10+10+12+11+9+11+4+7+5+4+=
6+3+2+3+1+2+2+0+0+=08)=20
# bounces: 10, mode: racing poll, userfaults: 29 missing (12+9+2+1+1+3+1+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 401 wp (37+32+=
26+26+23+23+25+21+15+8+10+10+9+8+5+10+11+10+6+9+6+10+10+7+7+7+7+5+2+3+3+3+3=
+1+2+1+=08)=20
# bounces: 9, mode: rnd poll, userfaults: 33 missing (13+9+7+4+0+0+0+0+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 431 wp (32+35+30+2=
2+26+19+22+16+18+16+14+15+10+11+13+15+11+9+10+12+4+10+9+9+8+9+6+4+4+3+3+2+2=
+1+1+0+=08)=20
# bounces: 8, mode: poll, userfaults: 29 missing (15+3+5+1+3+1+1+0+0+0+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 382 wp (39+27+30+21+23=
+19+19+20+12+12+13+11+13+9+9+9+9+9+10+8+7+4+8+4+4+7+6+2+3+5+3+2+2+1+1+1+=08=
)=20
# bounces: 7, mode: rnd racing ver read, userfaults: 33 missing (13+10+4+5+=
1+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 423 wp=
 (34+33+35+24+26+15+19+17+15+16+8+15+12+10+8+8+14+10+8+11+10+4+11+5+7+9+6+7=
+6+2+3+5+4+3+2+1+=08)=20
# bounces: 6, mode: racing ver read, userfaults: 29 missing (13+5+2+2+4+3+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 440 wp (42+=
42+35+35+27+24+24+20+11+15+13+15+8+15+7+13+10+7+11+5+2+6+8+8+8+5+1+7+1+2+5+=
2+2+2+1+1+=08)=20
# bounces: 5, mode: rnd ver read, userfaults: 34 missing (12+9+8+3+2+0+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 430 wp (32+35+=
32+32+28+21+19+18+17+14+16+7+11+11+10+10+9+14+6+7+12+8+8+7+9+2+5+7+4+7+4+2+=
2+2+1+1+=08)=20
# bounces: 4, mode: ver read, userfaults: 33 missing (13+7+4+6+3+0+0+0+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 369 wp (31+32+29+1=
9+17+21+15+16+6+13+8+8+13+6+9+8+7+11+4+11+8+7+9+7+8+4+5+7+6+7+5+2+4+3+2+1+=
=08)=20
# bounces: 3, mode: rnd racing read, userfaults: 33 missing (12+10+7+3+1+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 423 wp (30=
+34+33+28+27+24+18+19+13+10+18+16+13+9+13+7+8+13+7+6+9+8+9+7+7+9+5+4+6+3+3+=
2+1+2+0+2+=08)=20
# bounces: 2, mode: racing read, userfaults: 29 missing (6+10+4+4+1+1+3+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 406 wp (32+31+2=
9+33+30+24+24+19+11+12+8+5+15+2+1+7+10+11+12+12+11+3+1+6+9+7+7+8+7+6+3+2+3+=
3+1+1+=08)=20
# bounces: 1, mode: rnd read, userfaults: 33 missing (13+9+7+4+0+0+0+0+0+0+=
0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 499 wp (42+39+29+2=
7+24+21+21+25+17+17+23+24+16+14+11+15+16+13+10+9+12+11+8+7+6+3+3+9+4+4+6+4+=
4+3+1+1+=08)=20
# bounces: 0, mode: read, userfaults: 35 missing (9+8+6+5+1+2+1+2+1+0+0+0+0=
+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+=08) 421 wp (36+35+34+32+25+=
32+35+17+16+24+13+1+15+6+10+6+3+7+4+7+3+12+9+1+8+6+5+2+1+3+1+3+4+2+2+1+=08)=
=20
# [PASS]
# ---------------------------------
# running ./uffd-stress shmem 20 16
# ---------------------------------
# nr_pages: 5112, nr_pages_per_cpu: 142
# bounces: 15, mode: rnd racing ver poll, userfaults: 1822 missing (207+186=
+189+163+150+127+125+98+70+81+57+40+50+54+30+28+24+24+22+17+16+12+10+8+10+6=
+6+1+1+3+1+4+1+1+0+0+=08) 6773 wp (377+375+344+357+306+318+279+296+249+238+=
240+224+215+173+195+185+168+153+147+157+149+152+147+147+108+106+107+113+112=
+95+111+99+89+77+85+80+=08)=20
# bounces: 14, mode: racing ver poll, userfaults: 429 missing (61+49+26+25+=
32+17+31+19+9+19+9+16+11+11+9+10+10+5+6+7+9+7+4+3+1+9+1+5+1+4+0+1+2+0+0+0+=
=08) 2691 wp (188+167+159+131+135+121+103+94+83+87+71+88+70+69+68+72+58+67+=
62+66+61+57+60+45+48+43+57+51+54+48+35+37+44+35+30+27+=08)=20
# bounces: 13, mode: rnd ver poll, userfaults: 2493 missing (346+336+291+27=
1+261+219+115+103+93+77+55+42+41+29+30+36+24+20+18+20+14+8+8+8+8+4+6+2+3+2+=
1+2+0+0+0+0+=08) 7637 wp (553+504+498+477+443+442+323+262+265+254+255+215+2=
05+212+193+176+174+170+154+145+144+139+128+120+121+133+111+123+118+96+94+84=
+76+68+80+82+=08)=20
# bounces: 12, mode: ver poll, userfaults: 502 missing (84+58+46+39+29+33+1=
4+16+17+15+19+13+16+9+6+7+9+7+5+8+7+4+7+4+2+5+6+5+1+3+2+3+2+1+0+0+=08) 7272=
 wp (496+475+422+424+388+373+341+312+257+270+242+223+213+212+200+179+161+15=
5+154+125+149+120+139+131+113+115+108+118+99+108+109+80+111+68+39+43+=08)=20
# bounces: 11, mode: rnd racing poll, userfaults: 2451 missing (257+251+227=
+223+172+195+156+149+129+119+100+97+103+36+41+33+23+23+23+13+14+12+14+6+8+9=
+3+6+5+2+0+1+0+1+0+0+=08) 7602 wp (455+457+430+420+402+366+355+342+349+320+=
325+291+279+191+176+154+168+163+155+146+132+124+121+143+121+135+110+106+95+=
92+91+97+88+75+68+60+=08)=20
# bounces: 10, mode: racing poll, userfaults: 364 missing (80+19+34+38+26+1=
9+16+11+18+6+14+7+7+13+6+4+5+3+2+5+1+3+4+7+3+3+2+2+1+3+0+1+0+1+0+0+=08) 202=
1 wp (167+164+127+122+107+91+88+71+72+69+58+68+56+59+55+41+51+43+32+44+37+4=
0+40+30+26+30+26+29+28+20+22+24+22+21+20+21+=08)=20
# bounces: 9, mode: rnd poll, userfaults: 1914 missing (228+193+187+156+138=
+128+104+95+80+75+74+71+51+47+45+31+36+25+21+19+17+18+16+20+16+5+4+2+4+4+1+=
1+1+0+0+1+=08) 7063 wp (385+399+378+358+348+321+293+263+284+251+248+217+227=
+199+185+199+177+181+177+187+189+170+171+156+135+117+109+92+80+99+94+79+77+=
66+83+69+=08)=20
# bounces: 8, mode: poll, userfaults: 461 missing (80+64+43+35+32+25+18+25+=
15+13+12+15+8+8+14+9+6+3+7+4+5+2+4+2+3+0+2+3+2+1+1+0+0+0+0+0+=08) 6657 wp (=
466+401+408+368+353+309+309+264+269+243+226+219+194+193+175+174+138+164+131=
+127+154+127+106+117+107+98+102+106+89+79+84+88+55+66+71+77+=08)=20
# bounces: 7, mode: rnd racing ver read, userfaults: 2479 missing (366+323+=
342+323+289+122+98+96+76+51+67+50+37+27+31+23+26+22+11+15+23+8+14+9+7+3+5+4=
+3+1+4+2+0+1+0+0+=08) 7188 wp (589+541+523+499+498+292+284+235+224+256+219+=
198+182+186+160+162+148+161+134+151+107+127+107+127+107+107+117+104+93+78+9=
2+83+94+87+64+52+=08)=20
# bounces: 6, mode: racing ver read, userfaults: 421 missing (85+29+43+33+2=
4+23+16+20+12+10+15+8+12+4+13+8+6+8+10+6+8+1+7+0+9+2+4+4+0+1+0+0+0+0+0+0+=
=08) 2680 wp (170+158+129+112+127+120+99+103+106+75+71+80+77+64+80+59+56+74=
+66+51+46+46+59+48+63+60+61+45+64+49+53+49+56+26+45+33+=08)=20
# bounces: 5, mode: rnd ver read, userfaults: 2048 missing (211+198+178+162=
+141+151+120+113+92+98+77+62+68+45+48+32+46+37+23+23+22+26+17+19+16+8+5+2+5=
+0+1+0+1+0+1+0+=08) 7197 wp (390+402+386+362+361+331+326+284+277+256+271+25=
9+222+222+228+199+197+178+192+151+159+158+148+158+110+134+106+122+97+92+69+=
73+71+83+50+73+=08)=20
# bounces: 4, mode: ver read, userfaults: 486 missing (115+51+53+40+31+40+1=
6+12+19+7+8+9+11+7+6+4+8+5+5+7+4+6+1+4+1+3+1+2+0+1+3+2+0+3+1+0+=08) 6788 wp=
 (471+445+436+396+334+307+312+277+253+253+219+220+201+179+168+168+163+139+1=
32+143+143+142+103+134+116+123+103+95+90+100+61+80+78+77+58+69+=08)=20
# bounces: 3, mode: rnd racing read, userfaults: 2437 missing (316+310+312+=
302+268+136+119+107+70+70+61+50+51+40+44+32+19+23+18+21+10+12+7+13+6+8+5+2+=
1+2+1+1+0+0+0+0+=08) 6984 wp (481+516+485+504+489+317+266+257+264+223+216+1=
97+198+194+151+172+146+154+137+143+134+121+110+109+116+100+85+108+90+90+70+=
86+71+71+51+62+=08)=20
# bounces: 2, mode: racing read, userfaults: 417 missing (67+56+38+30+39+25=
+12+17+14+11+15+9+12+6+6+7+4+2+4+6+5+8+3+2+5+3+5+3+1+2+0+0+0+0+0+0+=08) 248=
7 wp (171+183+155+112+114+92+78+99+78+77+75+61+68+79+69+62+51+46+64+61+56+4=
8+54+57+49+38+44+46+57+49+42+42+35+28+23+24+=08)=20
# bounces: 1, mode: rnd read, userfaults: 2464 missing (288+260+253+229+218=
+199+195+173+161+82+55+57+38+40+28+25+22+17+17+19+18+10+11+9+10+6+10+4+5+2+=
0+1+1+1+0+0+=08) 7591 wp (493+482+460+417+452+393+400+392+364+235+226+231+1=
99+201+206+174+171+162+155+145+115+144+140+120+124+125+98+101+99+100+90+82+=
73+77+72+73+=08)=20
# bounces: 0, mode: read, userfaults: 343 missing (141+36+37+23+10+18+6+14+=
11+7+5+7+7+1+2+5+1+1+2+0+0+0+0+1+2+1+1+1+1+0+1+0+1+0+0+0+=08) 7526 wp (717+=
481+477+487+407+383+358+345+300+300+286+284+248+266+128+147+128+134+131+144=
+103+131+114+102+102+100+97+91+72+93+86+72+49+53+58+52+=08)=20
# [PASS]
# -----------------------------------------
# running ./uffd-stress shmem-private 20 16
# -----------------------------------------
# nr_pages: 5112, nr_pages_per_cpu: 142
# bounces: 15, mode: rnd racing ver poll, userfaults: 1590 missing (182+160=
+130+141+115+93+94+88+76+68+57+42+50+40+41+31+27+25+19+28+17+5+14+6+9+6+5+5=
+6+2+2+2+2+2+0+0+=08) 6592 wp (338+337+347+313+293+279+288+218+244+229+221+=
215+180+200+168+187+185+152+181+163+145+143+142+123+126+134+138+112+116+122=
+110+111+92+91+78+71+=08)=20
# bounces: 14, mode: racing ver poll, userfaults: 326 missing (54+42+31+25+=
19+17+19+20+14+15+4+3+6+3+4+8+3+6+9+8+3+2+2+0+2+2+1+1+0+0+1+1+0+1+0+0+=08) =
2112 wp (148+147+130+119+102+88+87+89+70+84+55+54+58+64+54+50+43+40+42+39+4=
8+41+34+36+31+40+36+33+31+37+32+27+32+34+25+32+=08)=20
# bounces: 13, mode: rnd ver poll, userfaults: 2216 missing (221+208+184+17=
7+167+161+137+127+117+124+112+113+44+45+52+30+33+27+24+23+29+18+10+9+5+5+4+=
3+0+0+3+1+1+1+0+1+=08) 7244 wp (433+413+411+393+373+334+326+315+315+290+295=
+271+205+221+191+194+178+178+158+184+161+148+112+104+115+104+106+75+93+88+8=
3+64+94+61+87+71+=08)=20
# bounces: 12, mode: ver poll, userfaults: 633 missing (87+107+69+50+50+42+=
32+42+11+14+17+20+12+12+6+7+5+4+6+9+3+3+3+4+3+5+3+0+2+1+1+1+2+0+0+0+=08) 71=
90 wp (532+574+543+426+384+373+347+326+241+247+212+183+200+180+192+162+159+=
161+137+135+163+147+130+93+89+102+89+88+104+90+74+90+52+54+55+56+=08)=20
# bounces: 11, mode: rnd racing poll, userfaults: 1731 missing (177+173+170=
+151+134+116+105+100+75+68+63+51+50+56+42+41+29+31+23+10+9+8+10+8+7+5+6+4+2=
+2+2+1+1+0+0+1+=08) 6232 wp (353+325+305+308+286+289+285+269+251+226+213+22=
6+196+195+181+174+170+131+138+145+145+130+115+108+99+104+85+101+109+98+80+8=
0+90+64+84+74+=08)=20
# bounces: 10, mode: racing poll, userfaults: 310 missing (52+49+27+16+14+1=
9+13+20+9+10+11+7+3+6+12+5+9+3+6+3+3+2+2+3+1+2+1+0+1+0+0+0+0+1+0+0+=08) 199=
9 wp (155+139+128+107+90+98+84+73+64+77+65+52+51+54+47+52+50+43+33+36+47+38=
+30+37+27+28+26+36+40+24+29+26+28+22+34+29+=08)=20
# bounces: 9, mode: rnd poll, userfaults: 1643 missing (187+169+157+129+117=
+113+93+86+71+68+61+59+40+40+36+36+28+20+19+20+19+13+17+4+8+8+6+7+3+3+3+1+1=
+0+1+0+=08) 6335 wp (349+311+305+308+282+284+264+273+223+208+235+224+201+19=
6+183+163+169+149+151+146+136+125+140+135+111+122+108+103+122+106+94+92+90+=
85+84+58+=08)=20
# bounces: 8, mode: poll, userfaults: 538 missing (101+68+59+41+32+26+27+19=
+17+19+16+8+17+7+8+8+7+5+4+7+9+4+4+5+4+2+1+3+3+2+3+0+0+0+2+0+=08) 6825 wp (=
526+467+406+405+383+359+300+290+265+247+214+213+216+189+193+175+170+154+151=
+135+125+118+126+109+117+94+70+81+84+63+81+63+80+53+44+59+=08)=20
# bounces: 7, mode: rnd racing ver read, userfaults: 4687 missing (1220+119=
2+1189+1086+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0+0=
+=08) 9894 wp (1644+1609+1509+1449+279+281+257+188+195+202+180+157+159+124+=
137+119+94+120+111+101+87+91+97+70+65+70+61+67+69+72+42+45+45+35+30+33+=08)=
=20
# bounces: 6, mode: racing ver read, userfaults: 421 missing (68+51+35+27+2=
4+27+24+19+11+11+14+14+9+13+11+8+2+9+3+13+7+9+5+4+0+1+0+2+0+0+0+0+0+0+0+0+=
=08) 2715 wp (185+157+146+139+118+126+121+107+101+91+85+72+68+61+80+65+67+7=
4+71+65+52+48+51+57+55+64+49+43+55+42+37+44+34+33+27+25+=08)=20
# bounces: 5, mode: rnd ver read, userfaults: 2517 missing (294+251+281+213=
+200+194+184+198+160+144+68+56+36+34+38+21+22+14+13+15+12+10+6+10+12+5+8+6+=
5+2+1+1+3+0+0+0+=08) 7432 wp (487+464+468+458+464+391+394+327+324+357+205+2=
17+202+209+173+163+148+141+138+126+127+126+124+142+101+112+105+105+84+80+10=
5+84+66+81+77+57+=08)=20
# bounces: 4, mode: ver read, userfaults: 481 missing (92+76+56+33+25+24+25=
+12+13+13+11+16+14+7+8+7+5+2+2+4+6+4+4+2+4+3+5+3+1+0+1+0+1+1+0+1+=08) 7732 =
wp (552+469+431+391+397+376+346+305+315+265+230+241+228+222+199+192+158+189=
+209+152+170+140+143+150+105+134+131+85+114+96+120+113+105+98+94+67+=08)=20
# bounces: 3, mode: rnd racing read, userfaults: 1857 missing (215+179+177+=
176+146+129+99+110+89+65+61+54+49+47+46+29+33+23+23+17+14+18+9+11+5+6+11+4+=
3+1+4+2+1+1+0+0+=08) 6373 wp (396+351+334+342+320+282+292+251+260+229+222+2=
35+192+177+165+179+156+146+150+177+132+141+131+115+100+97+112+95+90+86+64+8=
7+73+75+67+52+=08)=20
# bounces: 2, mode: racing read, userfaults: 417 missing (55+37+24+38+43+19=
+18+9+17+19+14+16+15+3+10+13+14+8+9+5+8+6+11+5+1+0+0+0+0+0+0+0+0+0+0+0+=08)=
 2623 wp (160+141+140+131+121+100+112+103+92+88+83+87+74+69+75+69+71+74+58+=
63+61+58+56+57+51+55+36+53+60+28+50+32+32+29+34+20+=08)=20
# bounces: 1, mode: rnd read, userfaults: 1746 missing (208+171+178+159+121=
+124+102+79+87+65+60+55+44+44+36+33+18+29+21+20+13+19+15+14+8+6+4+3+2+1+4+1=
+1+0+1+0+=08) 6337 wp (373+346+314+306+342+308+270+256+249+237+229+221+205+=
189+194+181+150+152+161+110+110+138+129+120+113+113+80+98+118+96+86+84+72+6=
8+65+54+=08)=20
# bounces: 0, mode: read, userfaults: 196 missing (40+22+24+22+11+11+6+5+6+=
6+7+3+2+7+6+4+2+1+0+1+0+3+0+0+2+2+2+0+0+0+0+1+0+0+0+0+=08) 7217 wp (553+581=
+435+406+385+334+312+310+262+291+243+222+227+189+225+171+208+177+147+141+13=
7+151+111+87+90+96+97+92+98+74+62+73+60+57+61+52+=08)=20
# [PASS]
# -------------------------
# running ./compaction_test
# -------------------------
# No of huge pages allocated =3D 6514
# [PASS]
# ---------------------------------------
# running sudo -u nobody ./on-fault-limit
# ---------------------------------------
# [PASS]
# ----------------------
# running ./map_populate
# ----------------------
# [PASS]
# ---------------------------
# running ./mlock-random-test
# ---------------------------
# mlock() failure at |0xa83310(131072)| mlock:|0xa836af(124314)|
# [FAIL]
# ----------------------
# running ./mlock2-tests
# ----------------------
# munlock(): Cannot allocate memory
# munlock(): Cannot allocate memory
# [FAIL]
# -----------------------
# running ./mrelease_test
# -----------------------
# process_mrelease with wrong pidfd: Function not implemented
# [SKIP]
# ---------------------
# running ./mremap_test
# ---------------------
# # Test configs:
# 	threshold_mb=3D4
# 	pattern_seed=3D1684762168
#=20
# 1..15
# # mremap failed: Invalid argument
# ok 1 # XFAIL mremap - Source and Destination Regions Overlapping
# 	Expected mremap failure
# # mremap failed: Invalid argument
# ok 2 # XFAIL mremap - Destination Address Misaligned (1KB-aligned)
# 	Expected mremap failure
# # Failed to map source region: Invalid argument
# ok 3 # XFAIL mremap - Source Address Misaligned (1KB-aligned)
# 	Expected mremap failure
# ok 4 8KB mremap - Source PTE-aligned, Destination PTE-aligned
# 	mremap time:       214691ns
# ok 5 2MB mremap - Source 1MB-aligned, Destination PTE-aligned
# 	mremap time:       270269ns
# ok 6 2MB mremap - Source 1MB-aligned, Destination 1MB-aligned
# 	mremap time:       257642ns
# ok 7 4MB mremap - Source PMD-aligned, Destination PTE-aligned
# 	mremap time:       275867ns
# ok 8 4MB mremap - Source PMD-aligned, Destination 1MB-aligned
# 	mremap time:       272007ns
# ok 9 4MB mremap - Source PMD-aligned, Destination PMD-aligned
# 	mremap time:       193336ns
# ok 10 2GB mremap - Source PUD-aligned, Destination PTE-aligned
# ok 11 2GB mremap - Source PUD-aligned, Destination 1MB-aligned
# ok 12 2GB mremap - Source PUD-aligned, Destination PMD-aligned
# ok 13 2GB mremap - Source PUD-aligned, Destination PUD-aligned
# ok 14 mremap expand merge
# ok 15 mremap expand merge offset
# # Totals: pass:12 fail:0 xfail:3 xpass:0 skip:0 error:0
# [PASS]
# -------------------
# running ./thuge-gen
# -------------------
# Found 1024MB
# Found 2MB
# Not enough huge pages for page size 1024 MB, need 4
# [PASS]
# -------------------------------
# running ./virtual_address_range
# -------------------------------
# [PASS]
# --------------------------------
# running ./va_high_addr_switch.sh
# --------------------------------
# ./run_vmtests.sh: line 152: ./va_high_addr_switch.sh: Permission denied
# [FAIL]
# -------------------------------
# running ./test_vmalloc.sh smoke
# -------------------------------
# ./run_vmtests.sh: line 152: ./test_vmalloc.sh: Permission denied
# [FAIL]
# --------------------------
# running ./mremap_dontunmap
# --------------------------
# OK
# [PASS]
# ---------------------------
# running ./test_hmm.sh smoke
# ---------------------------
# ./run_vmtests.sh: line 152: ./test_hmm.sh: Permission denied
# [FAIL]
# -----------------------
# running ./madv_populate
# -----------------------
# TAP version 13
# 1..21
# # [RUN] test_prot_read
# ok 1 MADV_POPULATE_READ with PROT_READ
# ok 2 MADV_POPULATE_WRITE with PROT_READ
# # [RUN] test_prot_write
# ok 3 MADV_POPULATE_READ with PROT_WRITE
# ok 4 MADV_POPULATE_WRITE with PROT_WRITE
# # [RUN] test_holes
# ok 5 MADV_POPULATE_READ with holes in the middle
# ok 6 MADV_POPULATE_WRITE with holes in the middle
# ok 7 MADV_POPULATE_READ with holes at the end
# ok 8 MADV_POPULATE_WRITE with holes at the end
# ok 9 MADV_POPULATE_READ with holes at the beginning
# ok 10 MADV_POPULATE_WRITE with holes at the beginning
# # [RUN] test_populate_read
# ok 11 range initially not populated
# ok 12 MADV_POPULATE_READ
# ok 13 range is populated
# # [RUN] test_populate_write
# ok 14 range initially not populated
# ok 15 MADV_POPULATE_WRITE
# ok 16 range is populated
# # [RUN] test_softdirty
# ok 17 range is not softdirty
# ok 18 MADV_POPULATE_READ
# ok 19 range is not softdirty
# ok 20 MADV_POPULATE_WRITE
# ok 21 range is softdirty
# # Totals: pass:21 fail:0 xfail:0 xpass:0 skip:0 error:0
# [PASS]
# ----------------------
# running ./memfd_secret
# ----------------------
# page_size: 4096, mlock.soft: 8388608, mlock.hard: 8388608
# TAP version 13
# 1..4
# ok 2 # SKIP memfd_secret is not supported
# # Planned tests !=3D run tests (4 !=3D 1)
# # Totals: pass:0 fail:0 xfail:0 xpass:0 skip:1 error:0
# [SKIP]
# ----------------------------
# running ./ksm_tests -M -p 10
# ----------------------------
# OK
# [PASS]
# ----------------------
# running ./ksm_tests -U
# ----------------------
# OK
# [PASS]
# ---------------------------------
# running ./ksm_tests -Z -p 10 -z 0
# ---------------------------------
# OK
# [PASS]
# ---------------------------------
# running ./ksm_tests -Z -p 10 -z 1
# ---------------------------------
# OK
# [PASS]
# ---------------------------
# running ./ksm_tests -N -m 1
# ---------------------------
# At least 2 NUMA nodes must be available
# [SKIP]
# ---------------------------
# running ./ksm_tests -N -m 0
# ---------------------------
# At least 2 NUMA nodes must be available
# [SKIP]
# ------------------------------
# running ./ksm_functional_tests
# ------------------------------
# TAP version 13
# 1..6
# # [RUN] test_unmerge
# ok 1 Pages were unmerged
# # [RUN] test_unmerge_discarded
# ok 2 Pages were unmerged
# # [RUN] test_unmerge_uffd_wp
# ok 3 Pages were unmerged
# # [RUN] test_prctl
# ok 4 Setting/clearing PR_SET_MEMORY_MERGE works
# # [RUN] test_prctl_fork
# TAP version 13
# 1..6
# # [RUN] test_unmerge
# ok 1 Pages were unmerged
# # [RUN] test_unmerge_discarded
# ok 2 Pages were unmerged
# # [RUN] test_unmerge_uffd_wp
# ok 3 Pages were unmerged
# # [RUN] test_prctl
# ok 4 Setting/clearing PR_SET_MEMORY_MERGE works
# # [RUN] test_prctl_fork
# ok 5 PR_SET_MEMORY_MERGE value is inherited
# # [RUN] test_prctl_unmerge
# ok 6 Pages were unmerged
# # Totals: pass:6 fail:0 xfail:0 xpass:0 skip:0 error:0
# [PASS]
# ------------------------------
# running ./ksm_functional_tests
# ------------------------------
# TAP version 13
# 1..6
# # [RUN] test_unmerge
# ok 1 Pages were unmerged
# # [RUN] test_unmerge_discarded
# ok 2 Pages were unmerged
# # [RUN] test_unmerge_uffd_wp
# ok 3 Pages were unmerged
# # [RUN] test_prctl
# ok 4 Setting/clearing PR_SET_MEMORY_MERGE works
# # [RUN] test_prctl_fork
# TAP version 13
# 1..6
# # [RUN] test_unmerge
# ok 1 Pages were unmerged
# # [RUN] test_unmerge_discarded
# ok 2 Pages were unmerged
# # [RUN] test_unmerge_uffd_wp
# ok 3 Pages were unmerged
# # [RUN] test_prctl
# ok 4 Setting/clearing PR_SET_MEMORY_MERGE works
# # [RUN] test_prctl_fork
# ok 5 PR_SET_MEMORY_MERGE value is inherited
# # [RUN] test_prctl_unmerge
# ok 6 Pages were unmerged
# # Totals: pass:6 fail:0 xfail:0 xpass:0 skip:0 error:0
# [PASS]
# ----------------------------
# running ./protection_keys_32
# ----------------------------
# has pkeys: 0
# running PKEY tests for unsupported CPU/OS
# [PASS]
# ----------------------------
# running ./protection_keys_64
# ----------------------------
# has pkeys: 0
# running PKEY tests for unsupported CPU/OS
# [PASS]
# --------------------
# running ./soft-dirty
# --------------------
# TAP version 13
# 1..15
# ok 1 Test test_simple
# ok 2 Test test_vma_reuse dirty bit of allocated page
# ok 3 Test test_vma_reuse dirty bit of reused address page
# ok 4 Test test_hugepage huge page allocation
# ok 5 Test test_hugepage huge page dirty bit
# ok 6 Test test_mprotect-anon dirty bit of new written page
# ok 7 Test test_mprotect-anon soft-dirty clear after clear_refs
# ok 8 Test test_mprotect-anon soft-dirty clear after marking RO
# ok 9 Test test_mprotect-anon soft-dirty clear after marking RW
# ok 10 Test test_mprotect-anon soft-dirty after rewritten
# ok 11 Test test_mprotect-file dirty bit of new written page
# ok 12 Test test_mprotect-file soft-dirty clear after clear_refs
# ok 13 Test test_mprotect-file soft-dirty clear after marking RO
# ok 14 Test test_mprotect-file soft-dirty clear after marking RW
# ok 15 Test test_mprotect-file soft-dirty after rewritten
# # Totals: pass:15 fail:0 xfail:0 xpass:0 skip:0 error:0
# [PASS]
# -------------
# running ./cow
# -------------
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# ok 29 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out, PTE-mapped THP
# ok 30 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with single PTE of THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# ok 29 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out, PTE-mapped THP
# ok 30 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with single PTE of THP
# ok 31 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with single PTE of swapped-out TH=
P
# ok 32 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with partially mremap()'ed THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# ok 29 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out, PTE-mapped THP
# ok 30 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with single PTE of THP
# ok 31 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with single PTE of swapped-out TH=
P
# ok 32 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with partially mremap()'ed THP
# ok 33 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with partially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# ok 29 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out, PTE-mapped THP
# ok 30 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with single PTE of THP
# ok 31 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with single PTE of swapped-out TH=
P
# ok 32 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with partially mremap()'ed THP
# ok 33 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with partially shared THP
# # [INFO] detected THP size: 2048 KiB
# # [INFO] detected hugetlb size: 2048 KiB
# # [INFO] detected hugetlb size: 1048576 KiB
# # [INFO] huge zeropage is enabled
# TAP version 13
# 1..166
# # [INFO] Anonymous memory tests in private mappings
# # [RUN] Basic COW after fork() ... with base page
# ok 1 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped out base page
# ok 2 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with THP
# ok 3 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out THP
# ok 4 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with PTE-mapped THP
# ok 5 No leak from parent into child
# # [RUN] Basic COW after fork() ... with swapped-out, PTE-mapped THP
# ok 6 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with single PTE of THP
# ok 7 No leak from parent into child
# # [RUN] Basic COW after fork() ... with single PTE of swapped-out THP
# ok 8 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() ... with partially mremap()'ed THP
# ok 9 No leak from parent into child
# # [RUN] Basic COW after fork() ... with partially shared THP
# ok 10 No leak from parent into child
# # [RUN] Basic COW after fork() ... with hugetlb (2048 kB)
# ok 11 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() ... with hugetlb (1048576 kB)
# ok 12 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with base=
 page
# ok 13 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped out base page
# ok 14 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with THP
# ok 15 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out THP
# ok 16 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with PTE-=
mapped THP
# ok 17 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with swap=
ped-out, PTE-mapped THP
# ok 18 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of THP
# ok 19 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with sing=
le PTE of swapped-out THP
# ok 20 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially mremap()'ed THP
# ok 21 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with part=
ially shared THP
# ok 22 No leak from parent into child
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (2048 kB)
# ok 23 # SKIP need more free huge pages
# # [RUN] Basic COW after fork() with mprotect() optimization ... with huge=
tlb (1048576 kB)
# ok 24 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with base page
# ok 25 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped out base page
# ok 26 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with THP
# ok 27 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out THP
# ok 28 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with PTE-mapped THP
# ok 29 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with swapped-out, PTE-mapped THP
# ok 30 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with single PTE of THP
# ok 31 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with single PTE of swapped-out TH=
P
# ok 32 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child ... with partially mremap()'ed THP
# ok 33 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with partially shared THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# ok 47 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# ok 47 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# ok 47 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# ok 47 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# ok 47 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# ok 47 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# ok 47 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# ok 47 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# ok 58 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (2048 kB)
# ok 59 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (1048576 kB)
# ok 60 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with base page
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# ok 47 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# ok 58 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (2048 kB)
# ok 59 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (1048576 kB)
# ok 60 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with base page
# ok 61 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped out ba=
se page
# ok 62 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# ok 47 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# ok 58 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (2048 kB)
# ok 59 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (1048576 kB)
# ok 60 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with base page
# ok 61 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped out ba=
se page
# ok 62 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with THP
# ok 63 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out TH=
P
# ok 64 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with PTE-mapped THP
# ok 34 No leak from parent into child
# # [RUN] vmsplice() + unmap in child ... with hugetlb (2048 kB)
# ok 35 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child ... with hugetlb (1048576 kB)
# ok 36 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 base page
# ok 37 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped out base page
# ok 38 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 THP
# ok 39 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out THP
# ok 40 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 PTE-mapped THP
# ok 41 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 swapped-out, PTE-mapped THP
# ok 42 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of THP
# ok 43 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 single PTE of swapped-out THP
# ok 44 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially mremap()'ed THP
# ok 45 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 partially shared THP
# ok 46 No leak from parent into child
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (2048 kB)
# ok 47 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in child with mprotect() optimization ... with=
 hugetlb (1048576 kB)
# ok 48 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with b=
ase page
# ok 49 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped out base page
# ok 50 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with T=
HP
# ok 51 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out THP
# ok 52 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with P=
TE-mapped THP
# ok 53 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
wapped-out, PTE-mapped THP
# ok 54 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of THP
# ok 55 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with s=
ingle PTE of swapped-out THP
# ok 56 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially mremap()'ed THP
# ok 57 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with p=
artially shared THP
# ok 58 No leak from child into parent
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (2048 kB)
# ok 59 # SKIP need more free huge pages
# # [RUN] vmsplice() before fork(), unmap in parent after fork() ... with h=
ugetlb (1048576 kB)
# ok 60 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with base page
# ok 61 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped out ba=
se page
# ok 62 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with THP
# ok 63 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out TH=
P
# ok 64 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with PTE-mapped THP
# ok 65 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# ok 93 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially sha=
red THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# ok 93 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially sha=
red THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# ok 93 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially sha=
red THP
# ok 94 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (2048=
 kB)
# ok 95 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (1048=
576 kB)
# ok 96 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with base pa=
ge
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# ok 93 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially sha=
red THP
# ok 94 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (2048=
 kB)
# ok 95 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (1048=
576 kB)
# ok 96 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with base pa=
ge
# ok 97 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
 out base page
# ok 98 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with THP
#=20
# # [RUN] vmsplice() + unmap in parent after fork() ... with swapped-out, P=
TE-mapped THP
# ok 66 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
THP
# ok 67 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with single PTE of =
swapped-out THP
# ok 68 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially mrem=
ap()'ed THP
# ok 69 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with partially shar=
ed THP
# ok 70 No leak from child into parent
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (2048 =
kB)
# ok 71 # SKIP need more free huge pages
# # [RUN] vmsplice() + unmap in parent after fork() ... with hugetlb (10485=
76 kB)
# ok 72 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with base page
# ok 73 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped out base p=
age
# ok 74 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with THP
# ok 75 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out THP
# ok 76 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with PTE-mapped THP
# ok 77 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with swapped-out, PTE-m=
apped THP
# ok 78 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of THP
# ok 79 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with single PTE of swap=
ped-out THP
# ok 80 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially mremap()=
'ed THP
# ok 81 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with partially shared T=
HP
# ok 82 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (2048 kB)
# ok 83 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped shared page ... with hugetlb (1048576 k=
B)
# ok 84 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with base page
# ok 85 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped out b=
ase page
# ok 86 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with THP
# ok 87 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out T=
HP
# ok 88 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with PTE-mapped TH=
P
# ok 89 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with swapped-out, =
PTE-mapped THP
# ok 90 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 THP
# ok 91 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with single PTE of=
 swapped-out THP
# ok 92 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially mre=
map()'ed THP
# ok 93 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with partially sha=
red THP
# ok 94 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (2048=
 kB)
# ok 95 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped shared page ... with hugetlb (1048=
576 kB)
# ok 96 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with base pa=
ge
# ok 97 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
 out base page
# ok 98 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with THP
# ok 99 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# ok 115 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of swapped-out THP
# ok 116 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially mremap()'ed THP
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# ok 115 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of swapped-out THP
# ok 116 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially mremap()'ed THP
# ok 117 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially shared THP
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# ok 115 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of swapped-out THP
# ok 116 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially mremap()'ed THP
# ok 117 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially shared THP
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# ok 115 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of swapped-out THP
# ok 116 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially mremap()'ed THP
# ok 117 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially shared THP
# ok 118 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with hu=
getlb (2048 kB)
# ok 119 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with hu=
getlb (1048576 kB)
# ok 120 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with base page
# ok 121 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped out bas=
e page
# ok 122 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with THP
# ok 123 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped-out THP
# ok 124 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with PTE-mapped THP
# ok 125 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped-out, PT=
E-mapped THP
# ok 126 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with single PTE of T=
HP
# ok 127 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with single PTE of s=
wapped-out THP
# ok 128 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with partially mrema=
p()'ed THP
# ok 129 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with partially share=
d THP
# n is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out THP
# ok 100 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with PTE-map=
ped THP
# ok 101 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with swapped=
-out, PTE-mapped THP
# ok 102 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of THP
# ok 103 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with single =
PTE of swapped-out THP
# ok 104 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly mremap()'ed THP
# ok 105 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with partial=
ly shared THP
# ok 106 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (2048 kB)
# ok 107 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped previously-shared page ... with hugetlb=
 (1048576 kB)
# ok 108 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with ba=
se page
# ok 109 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped out base page
# ok 110 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with TH=
P
# ok 111 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out THP
# ok 112 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with PT=
E-mapped THP
# ok 113 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with sw=
apped-out, PTE-mapped THP
# ok 114 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of THP
# ok 115 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with si=
ngle PTE of swapped-out THP
# ok 116 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially mremap()'ed THP
# ok 117 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with pa=
rtially shared THP
# ok 118 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with hu=
getlb (2048 kB)
# ok 119 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped previously-shared page ... with hu=
getlb (1048576 kB)
# ok 120 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with base page
# ok 121 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped out bas=
e page
# ok 122 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with THP
# ok 123 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped-out THP
# ok 124 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with PTE-mapped THP
# ok 125 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with swapped-out, PT=
E-mapped THP
# ok 126 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with single PTE of T=
HP
# ok 127 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with single PTE of s=
wapped-out THP
# ok 128 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with partially mrema=
p()'ed THP
# ok 129 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with partially share=
d THP
# ok 130 Longterm R/O pin is reliable
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (2048 k=
B)
# ok 131 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
# 8 kB)
# ok 131 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
# ok 142 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (2=
048 kB)
# ok 143 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (1=
048576 kB)
# ok 144 # SKIP need more free huge pages
# # [INFO] Anonymous THP tests
# # [RUN] Basic COW after fork() when collapsing before fork()
# 8 kB)
# ok 131 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
# ok 142 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (2=
048 kB)
# ok 143 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (1=
048576 kB)
# ok 144 # SKIP need more free huge pages
# # [INFO] Anonymous THP tests
# # [RUN] Basic COW after fork() when collapsing before fork()
# ok 145 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (fully shared=
)
# 8 kB)
# ok 131 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
# ok 142 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (2=
048 kB)
# ok 143 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (1=
048576 kB)
# ok 144 # SKIP need more free huge pages
# # [INFO] Anonymous THP tests
# # [RUN] Basic COW after fork() when collapsing before fork()
# ok 145 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (fully shared=
)
# ok 146 # SKIP MADV_COLLAPSE failed: Invalid argument
# # [RUN] Basic COW after fork() when collapsing after fork() (lower shared=
)
# 8 kB)
# ok 131 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
# ok 142 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (2=
048 kB)
# ok 143 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (1=
048576 kB)
# ok 144 # SKIP need more free huge pages
# # [INFO] Anonymous THP tests
# # [RUN] Basic COW after fork() when collapsing before fork()
# ok 145 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (fully shared=
)
# ok 146 # SKIP MADV_COLLAPSE failed: Invalid argument
# # [RUN] Basic COW after fork() when collapsing after fork() (lower shared=
)
# ok 147 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (upper shared=
)
# 8 kB)
# ok 131 # SKIP need more free huge pages
# # [RUN] R/O GUP pin on R/O-mapped exclusive page ... with hugetlb (104857=
6 kB)
# ok 132 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with base page
# ok 133 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped ou=
t base page
# ok 134 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with THP
# ok 135 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t THP
# ok 136 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with PTE-mapped=
 THP
# ok 137 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with swapped-ou=
t, PTE-mapped THP
# ok 138 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of THP
# ok 139 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with single PTE=
 of swapped-out THP
# ok 140 # SKIP MADV_PAGEOUT did not work, is swap enabled?
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
mremap()'ed THP
# ok 141 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with partially =
shared THP
# ok 142 Longterm R/O pin is reliable
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (2=
048 kB)
# ok 143 # SKIP need more free huge pages
# # [RUN] R/O GUP-fast pin on R/O-mapped exclusive page ... with hugetlb (1=
048576 kB)
# ok 144 # SKIP need more free huge pages
# # [INFO] Anonymous THP tests
# # [RUN] Basic COW after fork() when collapsing before fork()
# ok 145 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (fully shared=
)
# ok 146 # SKIP MADV_COLLAPSE failed: Invalid argument
# # [RUN] Basic COW after fork() when collapsing after fork() (lower shared=
)
# ok 147 No leak from parent into child
# # [RUN] Basic COW after fork() when collapsing after fork() (upper shared=
)
# ok 148 No leak from parent into child
# # [RUN] Non-anonymous memory tests in private mappings
# # [RUN] Basic COW ... with shared zeropage
# ok 149 Other mapping not modified
# # [RUN] Basic COW ... with memfd
# ok 150 Other mapping not modified
# # [RUN] Basic COW ... with tmpfile
# ok 151 Other mapping not modified
# # [RUN] Basic COW ... with huge zeropage
# ok 152 Other mapping not modified
# # [RUN] Basic COW ... with memfd hugetlb (2048 kB)
# ok 153 # SKIP need more free huge pages
# # [RUN] Basic COW ... with memfd hugetlb (1048576 kB)
# ok 154 # SKIP need more free huge pages
# # [RUN] R/O longterm GUP pin ... with shared zeropage
# ok 155 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP pin ... with memfd
# ok 156 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP pin ... with tmpfile
# ok 157 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP pin ... with huge zeropage
# ok 158 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP pin ... with memfd hugetlb (2048 kB)
# ok 159 # SKIP need more free huge pages
# # [RUN] R/O longterm GUP pin ... with memfd hugetlb (1048576 kB)
# ok 160 # SKIP need more free huge pages
# # [RUN] R/O longterm GUP-fast pin ... with shared zeropage
# ok 161 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP-fast pin ... with memfd
# ok 162 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP-fast pin ... with tmpfile
# ok 163 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP-fast pin ... with huge zeropage
# ok 164 Longterm R/O pin is reliable
# # [RUN] R/O longterm GUP-fast pin ... with memfd hugetlb (2048 kB)
# ok 165 # SKIP need more free huge pages
# # [RUN] R/O longterm GUP-fast pin ... with memfd hugetlb (1048576 kB)
# ok 166 # SKIP need more free huge pages
# # Totals: pass:87 fail:0 xfail:0 xpass:0 skip:79 error:0
# [PASS]
# SUMMARY: PASS=3D34 SKIP=3D4 FAIL=3D5
ok 39 selftests: mm: run_vmtests.sh # SKIP
make: Leaving directory '/usr/src/perf_selftests-x86_64-rhel-8.3-kselftests=
-d84de15119b74f10be3c0a369561ca9b452d07d7/tools/testing/selftests/mm'

--ID8wQf9zGKtnYLaT
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: attachment; filename="job.yaml"

---

#! jobs/kernel-selftests-mm.yaml
suite: kernel-selftests
testcase: kernel-selftests
category: functional
sysctl:
  sc_nr_hugepages: 2
kernel-selftests:
  group: mm
job_origin: kernel-selftests-mm.yaml

#! queue options
queue_cmdline_keys:
- branch
- commit
queue: bisect
testbox: lkp-csl-d01
tbox_group: lkp-csl-d01
submit_id: 646ae17c10c3d5e729f92e83
job_file: "/lkp/jobs/scheduled/lkp-csl-d01/kernel-selftests-mm-2-debian-12-x86_64-20220629.cgz-d84de15119b74f10be3c0a369561ca9b452d07d7-20230522-59177-fuckvf-0.yaml"
id: ab400e4647685749fcc7d70dca0e465026cf14f9
queuer_version: "/zday/lkp"

#! /db/releases/20230517200055/lkp-src/hosts/lkp-csl-d01
model: Cascade Lake
nr_node: 1
nr_cpu: 36
memory: 32G
nr_ssd_partitions: 1
ssd_partitions: "/dev/disk/by-id/nvme-INTEL_SSDPEKNW010T8_PHNH119301NW1P0B-part3"
rootfs_partition: "/dev/disk/by-id/nvme-INTEL_SSDPEKNW010T8_PHNH119301NW1P0B-part4"
brand: Intel(R) Core(TM) i9-10980XE CPU @ 3.00GHz

#! /db/releases/20230517200055/lkp-src/include/category/functional
kmsg:
heartbeat:
meminfo:
kmemleak:

#! /db/releases/20230517200055/lkp-src/include/queue/cyclic
commit: d84de15119b74f10be3c0a369561ca9b452d07d7

#! /db/releases/20230517200055/lkp-src/include/testbox/lkp-csl-d01
ucode: '0x5003303'

#! /db/releases/20230517200055/lkp-src/include/kernel-selftests
need_kernel_version:
- ">= v6.3-rc1, gcc"
- ">= v6.3-rc1, clang"
need_kconfig:
- MEM_SOFT_DIRTY: y, x86_64
- GUP_BENCHMARK: y
- GUP_TEST: y
rootfs: debian-12-x86_64-20220629.cgz
initrds:
- linux_headers
- linux_selftests
kconfig: x86_64-rhel-8.3-kselftests
enqueue_time: 2023-05-22 11:29:00.963299316 +08:00
_id: 646ae17c10c3d5e729f92e83
_rt: "/result/kernel-selftests/mm-2/lkp-csl-d01/debian-12-x86_64-20220629.cgz/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7"

#! schedule options
user: lkp
compiler: gcc-11
LKP_SERVER: internal-lkp-server
head_commit: 842a15f36c74b33705361df907cb1f421b63be6f
base_commit: f1fcbaa18b28dec10281551dfe6ed3a3ed80e3d6
branch: linux-devel/devel-hourly-20230520-091234
result_root: "/result/kernel-selftests/mm-2/lkp-csl-d01/debian-12-x86_64-20220629.cgz/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/0"
scheduler_version: "/lkp/lkp/src"
arch: x86_64
max_uptime: 1200
initrd: "/osimage/debian/debian-12-x86_64-20220629.cgz"
bootloader_append:
- root=/dev/ram0
- RESULT_ROOT=/result/kernel-selftests/mm-2/lkp-csl-d01/debian-12-x86_64-20220629.cgz/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/0
- BOOT_IMAGE=/pkg/linux/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/vmlinuz-6.4.0-rc2-00003-gd84de15119b7
- branch=linux-devel/devel-hourly-20230520-091234
- job=/lkp/jobs/scheduled/lkp-csl-d01/kernel-selftests-mm-2-debian-12-x86_64-20220629.cgz-d84de15119b74f10be3c0a369561ca9b452d07d7-20230522-59177-fuckvf-0.yaml
- user=lkp
- ARCH=x86_64
- kconfig=x86_64-rhel-8.3-kselftests
- commit=d84de15119b74f10be3c0a369561ca9b452d07d7
- initcall_debug
- nmi_watchdog=0
- max_uptime=1200
- LKP_SERVER=internal-lkp-server
- nokaslr
- selinux=0
- debug
- apic=debug
- sysrq_always_enabled
- rcupdate.rcu_cpu_stall_timeout=100
- net.ifnames=0
- printk.devkmsg=on
- panic=-1
- softlockup_panic=1
- nmi_watchdog=panic
- oops=panic
- load_ramdisk=2
- prompt_ramdisk=0
- drbd.minor_count=8
- systemd.log_level=err
- ignore_loglevel
- console=tty0
- earlyprintk=ttyS0,115200
- console=ttyS0,115200
- vga=normal
- rw

#! runtime status
modules_initrd: "/pkg/linux/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/modules.cgz"
linux_headers_initrd: "/pkg/linux/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/linux-headers.cgz"
linux_selftests_initrd: "/pkg/linux/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/linux-selftests.cgz"
bm_initrd: "/osimage/deps/debian-12-x86_64-20220629.cgz/run-ipconfig_20221125.cgz,/osimage/deps/debian-12-x86_64-20220629.cgz/lkp_20221125.cgz,/osimage/deps/debian-12-x86_64-20220629.cgz/rsync-rootfs_20221125.cgz,/osimage/deps/debian-12-x86_64-20220629.cgz/kernel-selftests_20230329.cgz,/osimage/pkg/debian-12-x86_64-20220629.cgz/kernel-selftests-x86_64-60acb023-1_20230329.cgz,/osimage/deps/debian-12-x86_64-20220629.cgz/hw_20230326.cgz"
ucode_initrd: "/osimage/ucode/intel-ucode-20230406.cgz"
lkp_initrd: "/osimage/user/lkp/lkp-x86_64.cgz"
site: lkp-wsx01

#! /db/releases/20230519164737/lkp-src/include/site/lkp-wsx01
LKP_CGI_PORT: 80
LKP_CIFS_PORT: 139
oom-killer:
watchdog:
last_kernel: 6.4.0-rc2

#! user overrides
kernel: "/pkg/linux/x86_64-rhel-8.3-kselftests/gcc-11/d84de15119b74f10be3c0a369561ca9b452d07d7/vmlinuz-6.4.0-rc2-00003-gd84de15119b7"
dequeue_time: 2023-05-22 12:10:31.637257679 +08:00

#! /db/releases/20230522101220/lkp-src/include/site/lkp-wsx01
job_state: finished
loadavg: 2.80 3.93 2.86 2/392 19579
start_time: '1684728821'
end_time: '1684729877'
version: "/lkp/lkp/.src-20230519-164557:eaff8b9cdc4e:d2fd25d67481"

--ID8wQf9zGKtnYLaT
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: attachment; filename="reproduce"

echo '2' > '/proc/sys/vm/nr_hugepages'
ln -sf /usr/bin/clang
ln -sf /usr/sbin/iptables-nft /usr/bin/iptables
ln -sf /usr/sbin/ip6tables-nft /usr/bin/ip6tables
sed -i s/default_timeout=45/default_timeout=300/ kselftest/runner.sh
make -j36 -C mm
make quicktest=1 run_tests -C mm

--ID8wQf9zGKtnYLaT--
