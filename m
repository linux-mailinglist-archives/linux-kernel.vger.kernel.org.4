Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 9C6336DA66D
	for <lists+linux-kernel@lfdr.de>; Fri,  7 Apr 2023 02:06:51 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231493AbjDGAGt (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Thu, 6 Apr 2023 20:06:49 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:58588 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229512AbjDGAGr (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 6 Apr 2023 20:06:47 -0400
Received: from mail-qt1-x829.google.com (mail-qt1-x829.google.com [IPv6:2607:f8b0:4864:20::829])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 201B261BE
        for <linux-kernel@vger.kernel.org>; Thu,  6 Apr 2023 17:06:46 -0700 (PDT)
Received: by mail-qt1-x829.google.com with SMTP id d75a77b69052e-3e673b5f558so363971cf.1
        for <linux-kernel@vger.kernel.org>; Thu, 06 Apr 2023 17:06:46 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20210112; t=1680826005;
        h=content-transfer-encoding:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:from:to:cc:subject:date
         :message-id:reply-to;
        bh=Mzfan2LpwNYK3DMBT0xJH8CIBF798omm0VUxkHpk/fE=;
        b=mm4yJMjoW1SGBwSfKP1UC/z0xkarQgZjxq2LZcGjVorZIPpguuwTovTAFYSP3WksUQ
         N9JBieXnk1IZjvE6VEp+EamL1e0ZNrsC5Wh9IE/FkMOvybS5Ym+05bRQOG9L7L3cBfzR
         /T6XoEfi9aI4mkc0VNZoO4j/tgI0qyuXBv30X96AjoYK0EV6p4AE7THUIDSwi9TAIi6K
         sOo5V38JogBKqVcYLG1yk/u/zC2Uano4f4FZ70RoE6hZ026Qbm8PD3P2HGUmz8TNT/a0
         T4tRndNp7NHQcDB3XDHWRkXrUcmzo7dWUoEm0TMexO6cOXop8b/pV25bAkkJvVtXQCcO
         Z71Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112; t=1680826005;
        h=content-transfer-encoding:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=Mzfan2LpwNYK3DMBT0xJH8CIBF798omm0VUxkHpk/fE=;
        b=KgRGa1DS0HX7uPAM+9qS7sB9TjzO+yy1rmlhpQ6dJYEwzb4KIyt56r2BuPrVEM3BWL
         SJfXt1AOLX3SvfplLJ+8lhFHQ7FzdwGZJzyH8xU3O7eMFnR504806JGda2qmrTrayeoN
         ld1eL+DbwQhTBnB3+c1W7ZTMpzrxs9iI+p+K1rjjOyTEFWQgwiywm8HBxr3mrnOt55AI
         GbZ86CikSzGoR30Yhv6VB1QVjOiYnr9vPlH3VjAWvaV/GGPqnGvEyhQRyfP6tGO5XdZr
         SNBViBUS7bR30aj//uOn4bK3kvxryJTnRBHoWsGHCsDzYGVkNZBStIUMv3rsQjkjkznn
         ABfg==
X-Gm-Message-State: AAQBX9f/UY909TxW00LX/7IjOPVKJi8dLBvyUGfttr0x52Uj/OS0OzDy
        VLM7vsdK2dmGADTAJHddrXW1htwlPtEbSJjoehPAUg==
X-Google-Smtp-Source: AKy350Zvo3l1UZgKMwCvHAg6NquVljxHd5L3H9xYFZLgrWrtH2SL8TjoKRRCjEqr1rJyb4cFWOAOTOIuV7vZKJGEO7c=
X-Received: by 2002:a05:622a:18a2:b0:3b9:f696:c754 with SMTP id
 v34-20020a05622a18a200b003b9f696c754mr68876qtc.5.1680826004965; Thu, 06 Apr
 2023 17:06:44 -0700 (PDT)
MIME-Version: 1.0
References: <20230406184638.2632300-1-irogers@google.com> <8d207ba3-c31e-ccb6-258a-4171df136c9f@linux.intel.com>
In-Reply-To: <8d207ba3-c31e-ccb6-258a-4171df136c9f@linux.intel.com>
From:   Ian Rogers <irogers@google.com>
Date:   Thu, 6 Apr 2023 17:06:33 -0700
Message-ID: <CAP-5=fWcBPz6XM0PeRaQk+_fKFzqrvL_ESA4g9p6-sjysSrCyA@mail.gmail.com>
Subject: Re: [PATCH v1 1/5] perf vendor events intel: Update free running
 alderlake events
To:     "Liang, Kan" <kan.liang@linux.intel.com>
Cc:     Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@redhat.com>,
        Arnaldo Carvalho de Melo <acme@kernel.org>,
        Mark Rutland <mark.rutland@arm.com>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Jiri Olsa <jolsa@kernel.org>,
        Namhyung Kim <namhyung@kernel.org>,
        Adrian Hunter <adrian.hunter@intel.com>,
        Zhengjun Xing <zhengjun.xing@linux.intel.com>,
        linux-kernel@vger.kernel.org, linux-perf-users@vger.kernel.org
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-Spam-Status: No, score=-15.7 required=5.0 tests=DKIMWL_WL_MED,DKIM_SIGNED,
        DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,ENV_AND_HDR_SPF_MATCH,
        RCVD_IN_DNSWL_NONE,SPF_HELO_NONE,SPF_PASS,USER_IN_DEF_DKIM_WL,
        USER_IN_DEF_SPF_WL autolearn=unavailable autolearn_force=no
        version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, Apr 6, 2023 at 1:13=E2=80=AFPM Liang, Kan <kan.liang@linux.intel.co=
m> wrote:
>
>
>
> On 2023-04-06 2:46 p.m., Ian Rogers wrote:
> > Fix the PMU name, event code and umask.
> >
> > These updates were generated by:
> > https://github.com/intel/perfmon/blob/main/scripts/create_perf_json.py
> > with this PR:
> > https://github.com/intel/perfmon/pull/66
> >
> > Signed-off-by: Ian Rogers <irogers@google.com>
> > ---
> >  .../arch/x86/alderlake/uncore-memory.json        | 16 ++++++++++++----
> >  .../arch/x86/alderlaken/uncore-memory.json       | 16 ++++++++++++----
> >  2 files changed, 24 insertions(+), 8 deletions(-)
> >
> > diff --git a/tools/perf/pmu-events/arch/x86/alderlake/uncore-memory.jso=
n b/tools/perf/pmu-events/arch/x86/alderlake/uncore-memory.json
> > index 2ccd9cf96957..ea25bb411f89 100644
> > --- a/tools/perf/pmu-events/arch/x86/alderlake/uncore-memory.json
> > +++ b/tools/perf/pmu-events/arch/x86/alderlake/uncore-memory.json
> > @@ -1,29 +1,37 @@
> >  [
> >      {
> >          "BriefDescription": "Counts every 64B read  request entering t=
he Memory Controller 0 to DRAM (sum of all channels).",
> > +        "EventCode": "0xff",
> >          "EventName": "UNC_MC0_RDCAS_COUNT_FREERUN",
> >          "PerPkg": "1",
> >          "PublicDescription": "Counts every 64B read request entering t=
he Memory Controller 0 to DRAM (sum of all channels).",
> > -        "Unit": "iMC"
> > +        "UMask": "0x20",
> > +        "Unit": "imc_free_running"
>
> The imc_free_running will give the counter value for both imc0 and imc1.
>
> I think we need "Unit": "imc_free_running_0" here. But I'm not sure if
> the perf tool can handle it.

Thanks Kan, it can handle it so I'll update in v2.

Ian

> Thanks,
> Kan
>
> >      },
> >      {
> >          "BriefDescription": "Counts every 64B write request entering t=
he Memory Controller 0 to DRAM (sum of all channels). Each write request co=
unts as a new request incrementing this counter. However, same cache line w=
rite requests (both full and partial) are combined to a single 64 byte data=
 transfer to DRAM.",
> > +        "EventCode": "0xff",
> >          "EventName": "UNC_MC0_WRCAS_COUNT_FREERUN",
> >          "PerPkg": "1",
> > -        "Unit": "iMC"
> > +        "UMask": "0x30",
> > +        "Unit": "imc_free_running"
> >      },
> >      {
> >          "BriefDescription": "Counts every 64B read request entering th=
e Memory Controller 1 to DRAM (sum of all channels).",
> > +        "EventCode": "0xff",
> >          "EventName": "UNC_MC1_RDCAS_COUNT_FREERUN",
> >          "PerPkg": "1",
> >          "PublicDescription": "Counts every 64B read entering the Memor=
y Controller 1 to DRAM (sum of all channels).",
> > -        "Unit": "iMC"
> > +        "UMask": "0x20",
> > +        "Unit": "imc_free_running"
> >      },
> >      {
> >          "BriefDescription": "Counts every 64B write request entering t=
he Memory Controller 1 to DRAM (sum of all channels). Each write request co=
unts as a new request incrementing this counter. However, same cache line w=
rite requests (both full and partial) are combined to a single 64 byte data=
 transfer to DRAM.",
> > +        "EventCode": "0xff",
> >          "EventName": "UNC_MC1_WRCAS_COUNT_FREERUN",
> >          "PerPkg": "1",
> > -        "Unit": "iMC"
> > +        "UMask": "0x30",
> > +        "Unit": "imc_free_running"
> >      },
> >      {
> >          "BriefDescription": "ACT command for a read request sent to DR=
AM",
> > diff --git a/tools/perf/pmu-events/arch/x86/alderlaken/uncore-memory.js=
on b/tools/perf/pmu-events/arch/x86/alderlaken/uncore-memory.json
> > index 2ccd9cf96957..ea25bb411f89 100644
> > --- a/tools/perf/pmu-events/arch/x86/alderlaken/uncore-memory.json
> > +++ b/tools/perf/pmu-events/arch/x86/alderlaken/uncore-memory.json
> > @@ -1,29 +1,37 @@
> >  [
> >      {
> >          "BriefDescription": "Counts every 64B read  request entering t=
he Memory Controller 0 to DRAM (sum of all channels).",
> > +        "EventCode": "0xff",
> >          "EventName": "UNC_MC0_RDCAS_COUNT_FREERUN",
> >          "PerPkg": "1",
> >          "PublicDescription": "Counts every 64B read request entering t=
he Memory Controller 0 to DRAM (sum of all channels).",
> > -        "Unit": "iMC"
> > +        "UMask": "0x20",
> > +        "Unit": "imc_free_running"
> >      },
> >      {
> >          "BriefDescription": "Counts every 64B write request entering t=
he Memory Controller 0 to DRAM (sum of all channels). Each write request co=
unts as a new request incrementing this counter. However, same cache line w=
rite requests (both full and partial) are combined to a single 64 byte data=
 transfer to DRAM.",
> > +        "EventCode": "0xff",
> >          "EventName": "UNC_MC0_WRCAS_COUNT_FREERUN",
> >          "PerPkg": "1",
> > -        "Unit": "iMC"
> > +        "UMask": "0x30",
> > +        "Unit": "imc_free_running"
> >      },
> >      {
> >          "BriefDescription": "Counts every 64B read request entering th=
e Memory Controller 1 to DRAM (sum of all channels).",
> > +        "EventCode": "0xff",
> >          "EventName": "UNC_MC1_RDCAS_COUNT_FREERUN",
> >          "PerPkg": "1",
> >          "PublicDescription": "Counts every 64B read entering the Memor=
y Controller 1 to DRAM (sum of all channels).",
> > -        "Unit": "iMC"
> > +        "UMask": "0x20",
> > +        "Unit": "imc_free_running"
> >      },
> >      {
> >          "BriefDescription": "Counts every 64B write request entering t=
he Memory Controller 1 to DRAM (sum of all channels). Each write request co=
unts as a new request incrementing this counter. However, same cache line w=
rite requests (both full and partial) are combined to a single 64 byte data=
 transfer to DRAM.",
> > +        "EventCode": "0xff",
> >          "EventName": "UNC_MC1_WRCAS_COUNT_FREERUN",
> >          "PerPkg": "1",
> > -        "Unit": "iMC"
> > +        "UMask": "0x30",
> > +        "Unit": "imc_free_running"
> >      },
> >      {
> >          "BriefDescription": "ACT command for a read request sent to DR=
AM",
