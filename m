Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id E5FDF5ECA62
	for <lists+linux-kernel@lfdr.de>; Tue, 27 Sep 2022 19:02:40 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232081AbiI0RCi (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Tue, 27 Sep 2022 13:02:38 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:54774 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S232091AbiI0RCX (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 27 Sep 2022 13:02:23 -0400
Received: from dfw.source.kernel.org (dfw.source.kernel.org [IPv6:2604:1380:4641:c500::1])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 67599EC56F;
        Tue, 27 Sep 2022 10:02:21 -0700 (PDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by dfw.source.kernel.org (Postfix) with ESMTPS id AA1B660691;
        Tue, 27 Sep 2022 17:02:20 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id E01FBC433C1;
        Tue, 27 Sep 2022 17:02:18 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1664298140;
        bh=JCOanzPCr3oWRV3li2/XhhZZdBH07whiMGtrcocbS5o=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=uuH2xvOc9JWfUDgIUBwiaABl73mOIi6AvtG60UI6YKqHCQJfFb1wxD7GxK+zze9Jk
         mvFlDwCz5/g2/Vu4Fe2vbEncyC79edGp8rKRkYcnHx33yoPixlLjQIXYpq1seZ498q
         D7CiA1SWGGh+k8Rpoesm96GFOZlva74hSPq8pI1flI0ZV90Iuq9/CXANJjn/Bnuk7c
         OZKVgb7+rtF22rHRFugwziCsvQk2Kpn3sdcDNeySgsFOz8GpoaI1DlbHAN95MiPDqt
         jRXw+RzN3Jjnv+/SWxqwTgVf3SrByEH/7eDPI3BTl0BksdWKwHx7Kx5H5d02/n/vax
         fJkhLb0RvqyFw==
Date:   Tue, 27 Sep 2022 10:02:17 -0700
From:   Nathan Chancellor <nathan@kernel.org>
To:     Nick Desaulniers <ndesaulniers@google.com>
Cc:     Zeng Heng <zengheng4@huawei.com>, masahiroy@kernel.org,
        michal.lkml@markovi.net, akpm@linux-foundation.org,
        peterz@infradead.org, keescook@chromium.org, davidgow@google.com,
        jpoimboe@kernel.org, dan.j.williams@intel.com, ojeda@kernel.org,
        isabbasso@riseup.net, dmitrii.bundin.a@gmail.com, vbabka@suse.cz,
        linux@rasmusvillemoes.dk, linux-kbuild@vger.kernel.org,
        linux-kernel@vger.kernel.org, liwei391@huawei.com,
        weiyongjun1@huawei.com, clang-built-linux <llvm@lists.linux.dev>,
        linux-toolchains <linux-toolchains@vger.kernel.org>
Subject: Re: [PATCH -next] Makefile: add implicit enum-conversion check for
 compile build
Message-ID: <YzMsmYTzX2Ni5zGP@dev-arch.thelio-3990X>
References: <20220927153125.811911-1-zengheng4@huawei.com>
 <CAKwvOdm2r_PPogCecGL4TMeYLq3qNkCbt7zqYTLmQf-PAQMGMg@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <CAKwvOdm2r_PPogCecGL4TMeYLq3qNkCbt7zqYTLmQf-PAQMGMg@mail.gmail.com>
X-Spam-Status: No, score=-7.2 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
        DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_HI,
        SPF_HELO_NONE,SPF_PASS autolearn=ham autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Sep 27, 2022 at 09:45:17AM -0700, Nick Desaulniers wrote:
> On Tue, Sep 27, 2022 at 8:15 AM Zeng Heng <zengheng4@huawei.com> wrote:
> >
> > Provide implicit enum-conversion warning option
> > in general build. When it set enabled, it can
> > detect implicit enum type conversion and find
> > potential conversion errors like below
> > (use "allmodconfig"):
> >
> > drivers/gpu/drm/amd/amdgpu/../display/dc/dml/dcn20/display_mode_vba_20.c:3904:46:
> > error: implicit conversion from ‘enum <anonymous>’ to ‘enum odm_combine_mode’ [-Werror=enum-conversion]
> >  3904 |       locals->ODMCombineEnablePerState[i][k] = true;
> >       |                                              ^
> >
> > The '-Wenum-conversion' could be regarded as
> > effective check on compile runtime and
> > call attention on potential mistakes.
> >
> > Anothor practical example could be referred to:
> > https://lore.kernel.org/all/CADnq5_OE0yZvEYGu82QJHL9wvVcTFZrmeTgX7URgh7FVA=jqYg@mail.gmail.com
> >
> > "-Wenum-conversion" was firstly introduced from
> > GNU gcc-10.
> 
> What about clang? ;)
> 
> >
> > Although "-Wenum-conversion" could be enabled
> > by "-Wextra" when compiling with 'W=1' option,
> > there are many warnings generated by '-Wextra'
> > that cause too much noise in a build.
> 
> With clang, I believe that -Wenum-conversion is part of -Wall or
> -Wextra; so enabling this explicitly is only necessary for GCC.  I
> wonder why it's not part of -Wall or -Wextra for GCC?  Perhaps worth a
> bug report/feature request?

With clang, -Wenum-conversion is just default enabled, not even behind
-Wall:

$ cat test.c
enum enum1 { A = 1 };
enum enum2 { B = 2 };

enum enum1 foo(enum enum2 bar)
{
    return bar;
}

$ clang -fsyntax-only test.c
test.c:11:9: warning: implicit conversion from enumeration type 'enum enum2' to different enumeration type 'enum enum1' [-Wenum-conversion]
        return bar;
        ~~~~~~ ^~~
1 warning generated.

On the other hand, GCC does have it under -Wextra:

$ gcc -fsyntax-only test.c

$ gcc -Wextra -fsyntax-only test.c
test.c: In function ‘foo’:
test.c:6:16: warning: implicit conversion from ‘enum enum2’ to ‘enum enum1’ [-Wenum-conversion]
    6 |         return bar;
      |                ^~~

But the kernel does not build with -Wextra aside from W=[123], hence
this warning has to be explicitly requested for GCC.

> >
> > Seeing the details from the following link:
> > https://gcc.gnu.org/onlinedocs/gcc-11.3.0/gcc/Warning-Options.html
> >
> > Because there are still some concerned warnings
> > exist, the patch marks the option disabled in default
> > for avoiding compile failed like using "allmodconfig".

But there is no dependency to avoid this getting enabled by allmodconfig
(such as 'depends on !COMPILE_TEST') so I don't see the point in the
current form; 'default n' does nothing to prevent it. Regardless, I
agree with Nick's sentiment below.

> > Signed-off-by: Zeng Heng <zengheng4@huawei.com>
> > ---
> >  Makefile          | 5 +++++
> >  lib/Kconfig.debug | 7 +++++++
> >  2 files changed, 12 insertions(+)
> >
> > diff --git a/Makefile b/Makefile
> > index ebd48fc956a3..1790a3624358 100644
> > --- a/Makefile
> > +++ b/Makefile
> > @@ -880,6 +880,11 @@ endif
> >  KBUILD_CFLAGS += $(call cc-disable-warning, unused-but-set-variable)
> >  KBUILD_CFLAGS += $(call cc-disable-warning, unused-const-variable)
> >
> > +# check implicit enum conversion
> > +ifdef CONFIG_ENUM_CONVERSION
> > +KBUILD_CFLAGS += -Wenum-conversion
> > +endif
> 
> Having a kconfig for this is overkill.  cc-option with a comment about
> the compiler default versions is the way to go.

Agreed. If there is some reason -Wenum-conversion cannot be enabled for
GCC right now (such as existing warnings, which the commit message
appears to alude to), they should be cleaned up first then
-Wenum-conversion should just be unconditionally enabled for all
compilers that support it via cc-option, not half enabled via Kconfig so
that maybe people will clean up the warnings. That is not how enabling
warnings works:

https://lore.kernel.org/CAHk-=wg-mH-_GYpkhz_psjBWG6ZcjKnPo83fg7YMj_by+-LRTQ@mail.gmail.com/

> > +
> >  # These result in bogus false positives
> >  KBUILD_CFLAGS += $(call cc-disable-warning, dangling-pointer)
> >
> > diff --git a/lib/Kconfig.debug b/lib/Kconfig.debug
> > index 4f2b81229a2f..a64e06a747d8 100644
> > --- a/lib/Kconfig.debug
> > +++ b/lib/Kconfig.debug
> > @@ -417,6 +417,13 @@ config FRAME_WARN
> >           Setting this too low will cause a lot of warnings.
> >           Setting it to 0 disables the warning.
> >
> > +config ENUM_CONVERSION
> > +       bool "Warn for implicit enum conversion"
> > +       depends on GCC_VERSION >= 100300
> > +       default n
> > +       help
> > +         Tell gcc to warn at build time for implicit enum conversion.
> > +
> >  config STRIP_ASM_SYMS
> >         bool "Strip assembler-generated symbols during link"
> >         default n
> > --
> > 2.25.1
> >
> 
> 
> -- 
> Thanks,
> ~Nick Desaulniers
> 
