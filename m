Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id C4F5F625F4C
	for <lists+linux-kernel@lfdr.de>; Fri, 11 Nov 2022 17:18:44 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234024AbiKKQSm (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Fri, 11 Nov 2022 11:18:42 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:49490 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S233225AbiKKQSj (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 11 Nov 2022 11:18:39 -0500
Received: from dfw.source.kernel.org (dfw.source.kernel.org [IPv6:2604:1380:4641:c500::1])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 8015D60367
        for <linux-kernel@vger.kernel.org>; Fri, 11 Nov 2022 08:18:38 -0800 (PST)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by dfw.source.kernel.org (Postfix) with ESMTPS id 1DE7C62033
        for <linux-kernel@vger.kernel.org>; Fri, 11 Nov 2022 16:18:38 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 69024C433C1;
        Fri, 11 Nov 2022 16:18:37 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1668183517;
        bh=L89Hr+ljyUENcI1eClc4CbdoM3pzCEgsZLVHlK+QCJ4=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=ktuZEblksZhWVaABUiHCcOEo0f0h0MmDm6XRF3Bu6SWpQfUiUAhpihuCg3ngwlbkx
         I1G8NQ+ebW81YPSbxSrViTYRW8vFz+mx9bZ4amd2BHqQ8rwxxy6o2RjScATofAWeh3
         QHuDRvQ/hfBQo5pjpw9QCzRLpM7wryopfMssfmwWOR3aUqBWMeYRmTeUx2KmMKMdhn
         aYsomSOopKcgzjINmNs/FneA5mhU+0fW0kQpytbUvDiLU+1GZ80l1ZO2nZeCdzifwy
         fXeOTQT1RlBc3JRP66cs8mIfRT/gEmuCnWnA+hqPPzYerLmxkRDNUhu2IMwNRhhthh
         sup2Mj+oCOb8g==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.95)
        (envelope-from <maz@kernel.org>)
        id 1otWjj-005T44-1a;
        Fri, 11 Nov 2022 16:18:35 +0000
Date:   Fri, 11 Nov 2022 16:18:34 +0000
Message-ID: <86fseppiqt.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     Wei-Lin Chang <r09922117@csie.ntu.edu.tw>
Cc:     james.morse@arm.com, alexandru.elisei@arm.com,
        suzuki.poulose@arm.com, oliver.upton@linux.dev,
        catalin.marinas@arm.com, will@kernel.org,
        linux-arm-kernel@lists.infradead.org, kvmarm@lists.linux.dev,
        kvmarm@lists.cs.columbia.edu, linux-kernel@vger.kernel.org
Subject: Re: [PATCH] KVM: arm64: Update comment of create_hyp_mappings
In-Reply-To: <20221103053228.961591-1-r09922117@csie.ntu.edu.tw>
References: <20221103053228.961591-1-r09922117@csie.ntu.edu.tw>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: r09922117@csie.ntu.edu.tw, james.morse@arm.com, alexandru.elisei@arm.com, suzuki.poulose@arm.com, oliver.upton@linux.dev, catalin.marinas@arm.com, will@kernel.org, linux-arm-kernel@lists.infradead.org, kvmarm@lists.linux.dev, kvmarm@lists.cs.columbia.edu, linux-kernel@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
X-Spam-Status: No, score=-7.1 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
        DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_HI,
        SPF_HELO_NONE,SPF_PASS autolearn=ham autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Thu, 03 Nov 2022 05:32:28 +0000,
Wei-Lin Chang <r09922117@csie.ntu.edu.tw> wrote:
> 
> HYP_PAGE_OFFSET is removed since 4.8, and the method for generating Hyp
> VAs has evolved. Update the functional description of
> create_hyp_mappings accordingly.
> 
> Signed-off-by: Wei-Lin Chang <r09922117@csie.ntu.edu.tw>
> ---
>  arch/arm64/kvm/mmu.c | 7 ++++---
>  1 file changed, 4 insertions(+), 3 deletions(-)
> 
> diff --git a/arch/arm64/kvm/mmu.c b/arch/arm64/kvm/mmu.c
> index c9a13e487..a9ae4a3f9 100644
> --- a/arch/arm64/kvm/mmu.c
> +++ b/arch/arm64/kvm/mmu.c
> @@ -424,9 +424,10 @@ void kvm_unshare_hyp(void *from, void *to)
>   * @to:		The virtual kernel end address of the range (exclusive)
>   * @prot:	The protection to be applied to this range
>   *
> - * The same virtual address as the kernel virtual address is also used
> - * in Hyp-mode mapping (modulo HYP_PAGE_OFFSET) to the same underlying
> - * physical pages.
> + * The Hyp virtual address is generated by masking the kernel VA with
> + * va_mask then inserting tag_val for the higher bits starting from
> + * tag_lsb. See kvm_compute_layout() in va_layout.c for more info.
> + * Both Hyp VA and kernel VA ranges map to the same underlying physical pages.

My problem with this comment is that neither va_mask, tag_val, nor
tag_lsb mean anything in this context. All this is purely internal to
kvm_compute_layout(), and is unnecessary here.

I'd rather you have something along the lines of:

diff --git a/arch/arm64/kvm/mmu.c b/arch/arm64/kvm/mmu.c
index 60ee3d9f01f8..6d04818a1a5b 100644
--- a/arch/arm64/kvm/mmu.c
+++ b/arch/arm64/kvm/mmu.c
@@ -460,7 +460,7 @@ void kvm_unshare_hyp(void *from, void *to)
  * @prot:	The protection to be applied to this range
  *
  * The same virtual address as the kernel virtual address is also used
- * in Hyp-mode mapping (modulo HYP_PAGE_OFFSET) to the same underlying
+ * in Hyp-mode mapping (modulo a random offset) to the same underlying
  * physical pages.
  */
 int create_hyp_mappings(void *from, void *to, enum kvm_pgtable_prot prot)

Whoever is interested in understanding the generation of the offset
can follow kern_hyp_va().

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
