Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 65074722D6F
	for <lists+linux-kernel@lfdr.de>; Mon,  5 Jun 2023 19:16:38 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233793AbjFERQg (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 5 Jun 2023 13:16:36 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:41954 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229472AbjFERQd (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 5 Jun 2023 13:16:33 -0400
Received: from galois.linutronix.de (Galois.linutronix.de [IPv6:2a0a:51c0:0:12e:550::1])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id D7E5599;
        Mon,  5 Jun 2023 10:16:32 -0700 (PDT)
From:   Thomas Gleixner <tglx@linutronix.de>
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linutronix.de;
        s=2020; t=1685985391;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=HoFThzoC6fpGbyKMWpymWNyMC8yF8MkWrY/0sdSvLaM=;
        b=qYs3b+XYRheTQwx8sI81c6CL/R1wf6tORczaI42iys/0RquQlzzNG/RVd0UZgRM2zjxjNT
        pANs066B0NYB5NJtx16V8iAvbtKlxsLi2oKTojr7OyBQa/4kx1SuE/M9fvohfn9jOJMk8s
        NXyQcrYz6iYcxyI1Li5Mzzg6B+t6Uy/dAJUstkPB/TWfPzZ7d8MtIlCQdLdE+kXADNbcK2
        C6G4i8O4zMweKs6oeHjxETfHSwmnO3a/U7N+vRWv+m1YGSZXErNRjacyQQ0X6iAsn8l92W
        4WyGLujM+IB6H94D2tau0b4N9AcIHYuBI0cl9VgBh9XygpoFbT6AdO/dRTOehQ==
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=linutronix.de;
        s=2020e; t=1685985391;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=HoFThzoC6fpGbyKMWpymWNyMC8yF8MkWrY/0sdSvLaM=;
        b=IjHpsn+24ddQtcYcLfzp3sbTNCbaQmTvSs/U3EkdGNpPsewY7AFpvj38aI+hxR18avSSdv
        JD5aKZjqXx30PsBQ==
To:     "H. Peter Anvin" <hpa@zytor.com>, Xin Li <xin3.li@intel.com>,
        linux-kernel@vger.kernel.org, x86@kernel.org, kvm@vger.kernel.org
Cc:     mingo@redhat.com, bp@alien8.de, dave.hansen@linux.intel.com,
        peterz@infradead.org, andrew.cooper3@citrix.com, seanjc@google.com,
        pbonzini@redhat.com, ravi.v.shankar@intel.com,
        jiangshanlai@gmail.com, shan.kang@intel.com
Subject: Re: [PATCH v8 31/33] x86/fred: BUG() when ERETU with %rsp not equal
 to that when the ring 3 event was just delivered
In-Reply-To: <c33c4087-eb55-de45-fdb4-b9e0a567cc37@zytor.com>
References: <20230410081438.1750-1-xin3.li@intel.com>
 <20230410081438.1750-32-xin3.li@intel.com> <87ttvm572h.ffs@tglx>
 <c33c4087-eb55-de45-fdb4-b9e0a567cc37@zytor.com>
Date:   Mon, 05 Jun 2023 19:16:30 +0200
Message-ID: <878rcx6d8x.ffs@tglx>
MIME-Version: 1.0
Content-Type: text/plain
X-Spam-Status: No, score=-4.4 required=5.0 tests=BAYES_00,DKIM_SIGNED,
        DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_MED,SPF_HELO_NONE,
        SPF_PASS,T_SCC_BODY_TEXT_LINE autolearn=ham autolearn_force=no
        version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, Jun 05 2023 at 09:42, H. Peter Anvin wrote:
> On 6/5/23 07:15, Thomas Gleixner wrote:
>> On Mon, Apr 10 2023 at 01:14, Xin Li wrote:
>>> A FRED stack frame generated by a ring 3 event should never be messed up, and
>>> the first thing we must make sure is that at the time an ERETU instruction is
>>> executed, %rsp must have the same address as that when the user level event
>>> was just delivered.
>>>
>>> However we don't want to bother the normal code path of ERETU because it's on
>>> the hotest code path, a good choice is to do this check when ERETU
>>> faults.
>> 
>> Which might be not catching bugs where the wrong frame makes ERETU not
>> fault.
>> 
>> We have CONFIG_DEBUG_ENTRY for catching this at the proper place.
>> 
>
> This is true, but this BUG() is a cheap test on a slow path, and thus 
> can be included in production code.

No objection.
