Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id DF85A70C573
	for <lists+linux-kernel@lfdr.de>; Mon, 22 May 2023 20:43:31 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232638AbjEVSn0 (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 22 May 2023 14:43:26 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:51918 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229569AbjEVSnZ (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 22 May 2023 14:43:25 -0400
Received: from dfw.source.kernel.org (dfw.source.kernel.org [139.178.84.217])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id CD591C4;
        Mon, 22 May 2023 11:43:23 -0700 (PDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by dfw.source.kernel.org (Postfix) with ESMTPS id 6937861E8B;
        Mon, 22 May 2023 18:43:23 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 9C716C4339B;
        Mon, 22 May 2023 18:43:22 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1684781002;
        bh=im28E1p35zGS1s3biu77XRcVQQtJ0gF9+C0RLsYZrlg=;
        h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
        b=iF12K1myeoZNrnbsQxIOeLVrbMaBa6fKweGWNioD8aPsyC2Cc0W1qI2OqfIfqDeas
         /d8qVmFz8E36QNCscqVeBbcebQdlq0rhl8c2+pAd8q2hVk0Rq5HaWd3HoOZjWSkAA0
         0sRJ33jx27BaTVpElCpUFfDmAHfktr8gXxo4n4eTnt1L8Q6crH6U+n8tSPfghcb79M
         79sNdvLGuNM6fudHMH8XMDKtEFNjHXoj+g9WsFGbyY/DcMtAMu7/AKbwVCyQt9WlnT
         L7lEaqbzjKy8uH7VCSfj6BJRlkcXezEOu5mJJXlSvMBaPlC91jcY8fIHRdgpYk+vIy
         AzRYOKO62pkPw==
Received: by quaco.ghostprotocols.net (Postfix, from userid 1000)
        id C0610403B5; Mon, 22 May 2023 15:43:19 -0300 (-03)
Date:   Mon, 22 May 2023 15:43:19 -0300
From:   Arnaldo Carvalho de Melo <acme@kernel.org>
To:     Anup Sharma <anupnewsmail@gmail.com>
Cc:     Ian Rogers <irogers@google.com>,
        Peter Zijlstra <peterz@infradead.org>,
        Ingo Molnar <mingo@redhat.com>,
        Mark Rutland <mark.rutland@arm.com>,
        Alexander Shishkin <alexander.shishkin@linux.intel.com>,
        Jiri Olsa <jolsa@kernel.org>,
        Namhyung Kim <namhyung@kernel.org>,
        Adrian Hunter <adrian.hunter@intel.com>,
        linux-perf-users@vger.kernel.org, linux-kernel@vger.kernel.org
Subject: Re: [PATCH v2] perf: test: Add support for testing JSON generated by
 perf data command
Message-ID: <ZGu3x6suTe1RiCvl@kernel.org>
References: <ZGcoJBAGlknjsA/n@yoga>
 <CAP-5=fXyqWYgR0M0rqG8a2j0sL1WThNX8r49T7EfvkOG32-UqA@mail.gmail.com>
 <ZGu0RP9JVeoDQQXW@kernel.org>
 <ZGu06UDugpWRhhQI@kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <ZGu06UDugpWRhhQI@kernel.org>
X-Url:  http://acmel.wordpress.com
X-Spam-Status: No, score=-7.1 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
        DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_HI,
        SPF_HELO_NONE,SPF_PASS,T_SCC_BODY_TEXT_LINE autolearn=ham
        autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Em Mon, May 22, 2023 at 03:31:06PM -0300, Arnaldo Carvalho de Melo escreveu:
> Em Mon, May 22, 2023 at 03:28:20PM -0300, Arnaldo Carvalho de Melo escreveu:
> > Em Mon, May 22, 2023 at 11:10:43AM -0700, Ian Rogers escreveu:
> > > On Fri, May 19, 2023 at 12:41â€¯AM Anup Sharma <anupnewsmail@gmail.com> wrote:
> > > >
> > > > This commit adds support for testing the JSON output generated
> > > > by the perf data command's conversion to JSON functionality.
> > > > The test script now includes a validation step to ensure that
> > > > the resulting JSON file is contain valid data.
> > > >
> > > > Signed-off-by: Anup Sharma <anupnewsmail@gmail.com>
> > > 
> > > Acked-by: Ian Rogers <irogers@google.com>
> > 
> > I'm fixing these and some other identation minor issues:
> 
I have this on top, making the indentation to be consistent, using tabs,
as the other .sh files in that directory and also having the 'then' be
on the 'if' line, separated by ;

diff --git a/tools/perf/tests/shell/test_perf_data_converter_json.sh b/tools/perf/tests/shell/test_perf_data_converter_json.sh
index 8f4d6575f34fa82e..72ac6c83231c03d5 100755
--- a/tools/perf/tests/shell/test_perf_data_converter_json.sh
+++ b/tools/perf/tests/shell/test_perf_data_converter_json.sh
@@ -1,18 +1,15 @@
 #!/bin/bash
-# perf data json converter command test
+# 'perf data convert --to-json' command test
 # SPDX-License-Identifier: GPL-2.0
 
 set -e
 
 err=0
 
-if [ "$PYTHON" = "" ]
-then
-	if which python3 > /dev/null
-	then
+if [ "$PYTHON" = "" ] ; then
+	if which python3 > /dev/null ; then
 		PYTHON=python3
-	elif which python > /dev/null
-	then
+	elif which python > /dev/null ; then
 		PYTHON=python
 	else
 		echo Skipping test, python not detected please set environment variable PYTHON.
@@ -42,8 +39,7 @@ test_json_converter_command()
 	echo "Testing Perf Data Convertion Command to JSON"
 	perf record -o "$perfdata" -F 99 -g -- perf test -w noploop > /dev/null 2>&1
 	perf data convert --to-json "$result" --force -i "$perfdata" >/dev/null 2>&1
-	if [ $(cat "${result}" | wc -l) -gt "0" ]
-	then
+	if [ $(cat "${result}" | wc -l) -gt "0" ] ; then
 		echo "Perf Data Converter Command to JSON [SUCCESS]"
 	else
 		echo "Perf Data Converter Command to JSON [FAILED]"
@@ -54,22 +50,20 @@ test_json_converter_command()
 
 validate_json_format()
 {
-    echo "Validating Perf Data Converted JSON file"
-    if [ -f "$result" ]
-    then
-        if $PYTHON -c  "import json; json.load(open('$result'))" >/dev/null 2>&1
-	then
-            echo "The file contains valid JSON format [SUCCESS]"
-        else
-            echo "The file does not contain valid JSON format [FAILED]"
-            err=1
-	    exit
-        fi
-    else
-        echo "File not found [FAILED]"
-        err=2
-        exit
-    fi
+	echo "Validating Perf Data Converted JSON file"
+	if [ -f "$result" ] ; then
+		if $PYTHON -c  "import json; json.load(open('$result'))" >/dev/null 2>&1 ; then
+			echo "The file contains valid JSON format [SUCCESS]"
+		else
+			echo "The file does not contain valid JSON format [FAILED]"
+			err=1
+			exit
+		fi
+	else
+		echo "File not found [FAILED]"
+		err=2
+		exit
+	fi
 }
 
 test_json_converter_command
